{"version":3,"sources":["jslet-data.js"],"names":["root","factory","define","amd","require","exports","module","jsletlocale","jQuery","window","this","undefined","jslet","id","ele","elementId","rootUri","ohead","document","getElementsByTagName","uri","lastChild","src","substring","lastIndexOf","global","version","changeStateField","selectStateField","auditLogField","valueSeparator","defaultRecordClass","defaultFocusKeyCode","defaultCharWidth","debugMode","serverErrorHandler","errCode","errMsg","beforeSubmit","settings","afterInstall","container","importDialog","onQuerySchema","onSubmitSchema","exportDialog","dataset","onDatasetCreating","dsName","creatingOption","onDatasetCreated","toArray","iterable","Object","length","results","Array","extend","destination","source","property","emptyFunction","keys","object","hasOwnProperty","push","Function","prototype","update","array","args","arrayLength","merge","slice","call","argumentNames","names","toString","match","replace","split","bind","context","arguments","__method","a","apply","bindAsEventListener","event","curry","delay","timeout","setTimeout","defer","wrap","wrapper","methodize","_methodized","Class","subclass","create","klass","initialize","parent","properties","isFunction","shift","Methods","superclass","subclasses","i","addMethods","constructor","ancestor","IS_DONTENUM_BUGGY","valueOf","isFuncFn","value","method","m","p","_AUTOID","nextId","data","temp","indexOf","cnt","String","trim","startsWith","pattern","endsWith","d","FileReader","readAsBinaryString","fileData","Z","binary","reader","onload","e","bytes","Uint8Array","result","byteLength","fromCharCode","content","trigger","readAsArrayBuffer","str","debounce","func","wait","immediate","timeoutHander","later","clearTimeout","deepClone","srcObj","isString","isNumber","isDate","Date","getTime","objClone","isArray","len","key","formatMessage","msg","Checker","test","required","isObject","formatString","dispFmt","c","next","valueLen","fmtLen","fmtLen1","k","_SCALEFACTOR","formatNumber","num","preFix","substr","suffix","fmtarr","fmtDecimalLen","strarr","dataDecimalLen","factor","parseInt","Math","round","retstr","sign","f","fmt","comma","l","decimalStr","formatDate","date","format","o","M+","getMonth","d+","getDate","h+","getHours","m+","getMinutes","s+","getSeconds","q+","floor","S","getMilliseconds","RegExp","$1","getFullYear","parseDate","strDate","ch","v","preChar","begin","end","dateParts","y","M","h","s","charAt","isNaN","Error","Dataset","invalidDate","year","toJSON","convertISODate","dateStr","flag","month","day","hour","minute","second","UTC","_currentPattern","_convertToJsPattern","escapeChar","nextChar","jsPattern","bgn","hasLeft","hasRight","join","like","testValue","between","minValue","maxValue","flagMin","flagMax","compareValue","inlist","valueList","inArray","values","isPromise","done","isNumeric","type","isHTMLElement","HTMLElement","isEmpty","arrValue","obj","time","delayFunc","value1","value2","caseSensitive","useLocale","isStr1","isStr2","toLowerCase","localeCompare","htmlEncode","htmlText","text","html","htmlDecode","getArrayValue","arrValues","index","varName","varValue","isBoolean","requiredBooleanValue","requiredStringValue","requiredDateValue","requiredNumbericValue","isGTZero","greatThanZero","isGTEZero","greatThanEqualZero","checkMin","checkMax","betweenValue","lessThanMaxValue","requiredArrayValue","requiredObjectValue","isPlanObject","isPlainObject","requiredPlanObjectValue","requiredHtmlElement","requiredFunctionValue","isClass","className","instanceOfClass","isDataType","dataType","arrlist","JSON","normalize","json","isKey","isObj","last","quoteChar","append","parse","Common","jsonParseError","stringify","replacer","space","getFunction","funcOrFuncName","console","warn","cutString","wholeStr","cuttingStr","reg","getYear","dateValue","getYearMonth","removeHtmlTag","showError","callBackFn","message","ui","error","alert","showInfo","info","urlUtil","getDomain","url","addParam","param","url1","paramObj","getParams","name","escape","paramStr","addHash","hash","intPos","arrTmp","arrParam","getParam","paramName","params","getHash","StepProcessor","count","processingFn","stepCount","steps","start","percent","ceil","lastIdx","nextStep","step","run","Synchronizer","taskCount","doneFn","_taskCount","_doneFn","endTask","ContextRule","contextRuleCfg","_name","_description","_status","_selected","_condition","_rules","_otherwise","_create","dataStatus","cxtRuleCfg","createContextRuleItem","itemCfg","item","ContextRuleItem","field","meta","createContextRuleMeta","lookup","createContextRuleLookup","customized","metaCfg","ContextRuleMeta","label","tip","nullText","disabled","readOnly","visible","formula","scale","displayFormat","editMask","editControl","range","regularExpr","valueCountLimit","validChars","customValidator","lookupCfg","ContextRuleLookup","filter","fixedFilter","criteria","displayFields","onlyLeafLevel","status","selected","condition","rules","rulesCfg","otherwiseCfg","otherwise","checker","fldName","_field","_meta","_value","_lookup","_customized","customizedFn","_label","_tip","_nullText","_required","_disabled","_readOnly","_visible","_formula","_scale","_defaultValue","_displayFormat","_editMask","_editControl","_range","_regularExpr","_valueCountLimit","_validChars","_customValidator","mask","editCtrl","defaultValue","dftValue","validator","chars","_dataset","_filter","_fixedFilter","_criteria","_displayFields","_onlyLeafLevel","datasetName","ContextRuleEngine","_matchedRules","_ruleEnv","compile","contextRules","_compileOneRule","evalRule","changingFldName","ruleObj","_evalOneRule","_syncMatchedRules","_compileExpr","_compileRuleItem","ruleItem","props","propName","metaObj","lookupObj","itemObj","isExpr","setting","exprName","Expression","matched","exprObj","conditionExpr","mainFields","hasRule","eval","ruleStatus","dsStatus","changedStatus","DataSetStatus","INSERT","UPDATE","ruleSelected","getFieldValue","_evalRuleItems","isValueChanged","matchedRule","_copyProperties","_evalExpr","srcObject","descObject","propValue","evalObj","fldObj","matchedRules","getField","_syncMatchedRuleMeta","_syncMatchedRuleLookup","_syncMatchedRuleValue","ruleMeta","ruleLookup","fieldLookup","ruleDs","lkDsObj","autoRefreshHostDataset","ruleFilter","filtered","ruleCriteria","query","ruleDisplayFields","ruleOnlyLeafLevel","setValue","dataModule","getDataset","DatasetType","NORMAL","LOOKUP","DETAIL","onCreatingDataset","dsCatalog","realDsName","hostDatasetName","DataType","NUMBER","STRING","DATE","TIME","BOOLEAN","DATASET","CROSS","PROXY","EXTEND","ACTION","EDITACTION","FieldValueStyle","BETWEEN","MULTIPLE","RecordRange","ALL","SELECTED","CURRENT","CHANGED","EditMask","keepChar","transform","clone","DatasetEvent","BEFORESCROLL","AFTERSCROLL","BEFOREINSERT","AFTERINSERT","BEFOREUPDATE","AFTERUPDATE","BEFOREDELETE","AFTERDELETE","BEFORECONFIRM","AFTERCONFIRM","BEFORECANCEL","AFTERCANCEL","BEFORESELECT","AFTERSELECT","BEFORESELECTALL","AFTERSELECTALL","BROWSE","DELETE","RefreshEvent","updateRecordEvent","eventType","UPDATERECORD","fieldName","updateColumnEvent","UPDATECOLUMN","updateAllEvent","_updateAllEvent","changeMetaEvent","metaName","changeAllRows","CHANGEMETA","beforeScrollEvent","recno","scrollEvent","prevRecno","SCROLL","insertEvent","needUpdateAll","updateAll","deleteEvent","selectRecordEvent","SELECTRECORD","selectAllEvent","SELECTALL","changePageEvent","_changePageEvent","errorEvent","errMessage","ERROR","lookupEvent","isMetaChanged","UPDATELOOKUP","aggregatedEvent","AGGREGATED","UPDATEALL","CHANGEPAGE","record2Json","records","excludeFields","record2JsonFilter","getRecInfo","record","recInfo","_jl_","DatasetRelationManager","relations","addRelation","hostDsName","hostFldName","lookupOrDetailDsName","relationType","relation","hostDataset","hostField","lookupDataset","lookupOrDetailDataset","removeRelation","splice","removeDataset","changeDatasetName","oldName","newName","refreshLookupHostDataset","lookupDsName","handleLookupDatasetChanged","getHostFieldObject","datasetRelationManager","EmptyPromise","action","fail","always","displayOrderComparator","fldObj1","fldObj2","order1","displayOrder","order2","GlobalDataHandler","_datasetMetaChanged","_fieldMetaChanged","_fieldValueChanged","datasetCreated","_datasetCreated","datasetMetaChanged","fieldMetaChanged","fieldValueChanged","globalDataHandler","DatasetCreatingManager","_maxCreatingLevels","_creatingDatasets","_doDatasetCreatedDebounce","_doDatasetCreated","setMaxCreateLevel","maxCreatingLevel","startCreateDataset","isLookup","hostDsCfg","_getDsCfg","level","relative","endCreateDataset","allowCreatingDataset","dsCfg","maxLevel","_checkAllCreated","datasets","rootDsCfg","rootDsName","allCreated","defaultDatasetCreatingManager","datasetCfg","_recordClass","_records","_oriRecords","_fields","_fieldsMap","_oriFields","_normalFields","_recno","_filteredRecnoArray","_unitConvertFactor","_unitName","_aborted","_valueFollowEnabled","_proxyFields","_filtered","_innerFilter","_findCondition","_innerFindCondition","_innerFormularFields","_bof","_eof","_igoreEvent","_logChanges","_auditLogEnabled","_validationEnabled","_modiObject","_inputtingRecord","_lockCount","_fixedIndexFields","_innerFixedIndexFields","_indexFields","_innerIndexFields","_sortingFields","_convertDestFields","_innerConvertDestFields","_masterDataset","_masterField","_detailDatasetFields","_linkedControls","_linkedLabels","_silence","_keyField","_codeField","_nameField","_parentField","_levelOrderField","_selectField","_statusField","_contextRules","_contextRuleEngine","_contextRuleEnabled","_dataProvider","DataProvider","_queryCriteria","_queryUrl","_submitUrl","_pageSize","_pageNo","_pageCount","_ignoreFilter","_ignoreFilterRecno","_fieldValidator","FieldValidator","_onFieldChanged","_onFieldFocusing","_isFireGlobalEvent","_onCheckSelectable","_onDataQuerying","_onDataQueried","_onDataSubmitted","_datasetListener","_datasetEventHandler","_designMode","_autoShowError","_autoRefreshHostDataset","_aggregatedValues","_afterScrollDebounce","_innerAfterScrollDebounce","_calcAggregatedValueDebounce","calcAggregatedValue","selection","DataSelection","_changeLog","ChangeLog","_dataTransformer","DataTransformer","_followedValues","_focusedFields","_canFocusFields","_lastFindingValue","_inContextRule","_aggregatedFields","_aggregatingCount","createdByFactory","_isEnum","setPropValue","setIntPropValue","setBooleanPropValue","fieldConfig","isEnum","displayWidth","EnumDataset","code","createFields","keyField","codeField","nameField","indexFields","fields","description","recordClass","clazz","newDsName","fieldNames","keyFldName","codeFldName","nameFldName","parentFldName","levelOrderField","selectFldName","statusFldName","addField","cloneRecord","srcRecord","destRecord","fldValue","newValue","arrFieldObj","getNormalFields","j","FieldValueCache","removeCache","_fireMetaChangedEvent","pageSize","pageNo","pageCount","masterDataset","masterField","getMasterFieldObject","designMode","autoShowError","unitConvertFactor","unitName","getType","unitConverted","clearAll","evt","refreshControl","valueFollowEnabled","datasetListener","listener","on","eventName","eventHanlder","dsHandlers","evtHandlers","off","handler","onCheckSelectable","onDataQuerying","onDataQueried","onDataSubmitted","fieldValidator","onFieldChanged","onFieldChange","onFieldFocusing","isFireGlobalEvent","getFields","getEditableFields","getFirstFocusField","mergedFocusedFields","setVisibleFields","fieldNameArray","_travelField","isBreak","children","_cacheNormalFields","arrFields","calcFocusedFields","addFields","arrFldObj","refreshDisplayOrder","refreshAggregatedFields","batchMode","addFormulaField","addInnerFormulaField","childFldObj","Field","removeField","dispOrder","addFieldFromDataset","srcDataset","srcFields","sort","moveField","fromFldName","toFldName","fromFldObj","toFldObj","fromParent","toParent","fromIndex","toIndex","oldDesignMode","removeFormulaField","removeInnerFormulaField","parentFldObj","clearFields","aggregatedFields","aggregated","arrField","fldName1","foundInMap","cancelTravel","lkf","lkds","dsDetail","detailDataset","getTopField","sortFunc","rec1","rec2","fname","idxFldCfg","dsObj","sortDataset","indexFlds","strFields","useTextToSort","v1","v2","getFieldTextByRecord","getFieldValueByRecord","order","fixedIndexFields","_parseIndexFields","idxFld","fixedIdxFld","_sortByFields","indFlds","mergedIndexFields","toggleIndexField","emptyIndexFields","found","arrFName","hasRecord","removeAll","_createIndexCfg","currRec","getRecord","isContextRuleEnabled","disableContextRule","disableControls","_refreshInnerRecno","moveToRecord","enableContextRule","enableControls","_combineIndexCfg","childCnt","indexNameObj","_getWholeFilter","oldFilter","newFilter","_doFilterChanged","filterExpr","oldFiltered","afiltered","first","_filterData","hasData","tempRecno","oldRecno","eventFunc","_fireDatasetEvent","evtType","recordCount","confirm","_gotoRecno","recnoSilence","recCnt","preno","_initialize","_refreshProxyField","_silenc","calcContextRule","abort","aborted","_moveCursor","recordObj","startSilenceMove","notLogPos","endSilenceMove","isBof","isEof","prior","firstError","_moveToError","nextError","priorError","lastError","startRecno","reverse","existRecordError","checkStatusByCancel","cancel","insertChild","parentId","parentFieldNotSet","innerInsert","expanded","findByKey","keyValue","pfldname","parentField","parentParentId","newRec","insertSibling","currPKey","parentKeys","prePKey","lastPKey","parentValue","insertRecord","appendRecord","expandedByRecno","insertedByRecno","inserted","changedStatusByRecno","recObj","log","unlog","updatedByRecno","updated","oldStatus","beforeInsertFn","dsMaster","editRecord","setFieldValue","preRecno","newRecord","_calcDefaultValue","insertDataset","thisContext","srcContext","appendDataset","batchAppendRecords","replaceExists","rec","expr","fldcnt","valueFollow","fValue","defaultExpr","parseFloat","valueStyle","checkAggregated","aggrFields","disableAggregating","enableAggregating","getAggregateByValue","aggregatedBy","updateAggrByValues","arrAggregateBy","aggrByObj","aggrByValue","arrAggrByValues","exists","existAggrBy","isNum","aggregatedValues","notCalcFields","sum","aggregatedValueObj","fldCnt","invalidNumberFieldValue","sumValue","pow","setRecord","getRelativeRecord","delta","isSameAsPrevious","preRec","preValue","currValue","isSame","mergeSameBy","groupFldName","arrFlds","hasParent","pFldName","pKeyValue","prevRec","prePKeyValue","hasChildren","iterateChildren","preKeyValue","rootValue","arrPValues","pValue","isExist","breakIterator","deleteRecord","cannotDelParent","isLast","deleted","detailFields","dtlFldObj","deleteSelected","selectedRecords","validateDataset","includeFields","iterate","validateRecord","invalidMsg","checkValue","setFieldError","masterDsObj","addFieldError","detailDsHasError","_innerValidateData","existFieldError","checkRequired","errorMessage","errorMsg","valueIndex","inputText","FieldError","put","getRecordErrorInfo","errObj","get","checkAndShowError","recordRange","existDatasetError","cannotConfirm","focusFirstErrorField","isError","_confirmDetailDataset","hasError","clearRecordError","masterFldName","dtlDatasets","dtlFields","_cancelDetailDataset","no","modiObj","detailDatasets","logChanges","auditLogEnabled","validationEnabled","needRefreshCtrl","getFieldError","getFieldErrorByRecno","getFieldValueByRecno","dataRec","dtlFldName","lookupNotFound","FieldRawValueAccessor","getRawValue","findByField","valueNotFound","fieldNotFound","_calcFormula","setRawValue","_convertValueByType","trimBlank","oldValue","auditLogRec","_logOldEditValue","globalHandler","clear","_logNewEditValue","_updateLookupRelativeFields","updateFormula","fldLabel","auditLog","logRec","getFieldText","n","clearFollowedValues","focused","masterFldObj","focusedFields","canFields","lkObj","lkRtnFldMap","returnFieldMap","lkFldName","lkDs","_calcFormulaRelation","formulaFields","evaluator","_innerFormulaRelation","changedFldName","fmlFldName","isEditing","getFieldTextByRecno","minVal","maxVal","betweenLabel","cacheValue","fixedValue","convert","customValueConverter","getValueConverter","valueToText","encrypted","txtLen","oldText","setFieldValueLength","valueLength","setFieldText","fType","datasetFieldNotBeSetValue","_textToValue","textToValue","invalid","find","fromCurrentPosition","_findPrevRecno","foundRecno","fieldNameOrFieldArray","findingValue","options","matchValue","matchType","EQUAL","findingByText","extraFilter","extraFilterEval","filteredRecords","byTextArray","byText","isEqual","returnFieldName","lookupByKey","returnFldName","inChildrenAndSelf","onlyDirectChildren","inChildren","lookupFieldExpected","isDirectChild","copyDataset","underCurrentFilter","selectField","statusField","changedField","dataRecord","isSilence","changeProxyFieldName","checkSelectable","selFld","selectedByRecno","selectAll","onSelectAll","noRefresh","selectByKeyValue","changedRecNum","select","selectBy","dataProvider","provider","_checkDataProvider","hasSelectedRecords","selectedKeyValues","state","queryUrl","criteriaDataset","requery","_doQuerySuccess","metas","main","_createDatasetByMeta","mainData","others","dsMeta","dsMetaFields","fldCfg","createField","_doApplyError","errorCode","catched","queryUrlRequired","_querying","reqData","simpleCriteria","sendRequest","_setChangedState","chgRecs","pendingRecs","_addRecordClassFlag","changeFlag","recClazz","detailRecordClass","pRec","dtlRecClazz","prop","_doSaveSuccess","changedRecs","needCalc","_pendingRecords","refreshSubmittedData","submitUrl","hasChangedData","noConfirm","recordChanged","submit","extraData","_innerSubmit","submitDeleted","onlyDeleted","submitUrlRequired","detailRange","getSubmittingChanged","rs","noDataSubmit","_submitting","mainName","dataMetas","_getSubmitMeta","_getExcludeFields","fldMeta","dataMeta","clazzName","fldList","_doSubmitSelectedSuccess","deleteOnSuccess","_deleteOnSuccess_","arrRecs","submitSelected","submitEmpty","getSubmittingSelected","exFields","_refreshInnerControl","updateEvt","ctrl","focusEditControl","focusing","focus","getFirstErrorField","refreshField","refreshLookupField","lookupEvt","clearFieldCache","removeAllCache","addLinkedControl","linkedControl","isLabel","canFocus","removeLinkedControl","arrCtrls","innerExportTextArray","exportOption","csvFlag","exportOneRecord","arrRec","exportFields","replaceFn","getValue","exportHeader","onlySelected","onlyCurrent","dateFields","exportTextArray","exportCsv","textArr","escapeDate","recArr","fldSeperator","surround","isStartZero","exportCsvFile","fileName","createElement","blob","Blob","href","URL","createObjectURL","download","click","filteredDataList","endRecno","arrRecords","recstr","enumStr","recs","dataList","isDetailDs","clearDatasetError","exportTextList","textValue","textRec","importTextList","textList","oldValueFollowEnabled","oldReadOnly","fldText","cacheField","cacheFieldMap","exportSnapshot","getDetailSetting","masterDs","details","detail","mainDs","changedRecords","_changedRecords","master","importSnapshot","snapshot","cannotImportSnapshot","dtype","_createExtendField","extendFields","asChild","pFldObj","firstSumFldCfg","extFldCfg","extFldCfgs","onCreatingExtendField","fldObjs","totalExpr","hasSum","needSum","extendHostName","totalLabel","fieldConfigs","destroy","createEnumDataset","enumStrOrObj","createDynamicDataset","dsType","datasetType","createDataset","_getChangedRecords","chgRecords","masterRecInfo","detailLog","chgRecList","_getRecords","newChgList","_convert","_convertRecord","chgRec","selStateFld","dtlRange","dtlRec","allSubList","dtlRecs","subChgRec","subRecInfo","_getStatusPrefix","random","submittedData","_refreshDataset","isDetailDataset","chgLogs","_refreshRecord","serverReturnNullRecord","recState","oldRec","DatasetFactory","_metaStores","addMetaStore","metaStore","getDatasetMeta","datasetNames","beforeCreateOneDataset","_canCreatingDataset","_startCreateDataset","doCreate","metaStoreIndex","_innerCreateDataset","deferred","realDatasetName","datasetMetaStoreRequired","Deferred","arrNames","_beforeCreateOneDataset","promise","metaNotFound","_filterOutLookupFields","criteriaFields","queryMeta","onlyLookupFields","visibleFields","enableFields","filteredFields","debug","resolve","datasetFactory","DatasetMetaStore","_otherDatasetFields","_expr","_parsedExpr","datasetNotFound","mainds","_ParserPattern","otherDs","stag","tmpExpr","lastIndex","exec","otherDatasetFields","inchildren","onlyDirectChild","inchildrenandself","_datasetName","_displayOrder","_tabIndex","_shortName","_proxyHostFieldName","_proxyFldObjs","_proxyFieldChanged","_currProxyFieldName","_length","_unique","_defaultExpr","_displayLabel","_displayWidth","_dateFormat","_unitConverted","_displayControl","_detailDataset","_urlExpr","_innerUrlExpr","_urlTarget","_valueStyle","_valueCountRange","_dataRange","_antiXss","_customValueAccessor","_customValueConverter","_dateChar","_dateRegular","_parent","_children","_trueValue","_falseValue","_trueText","_falseText","_mergeSame","_mergeSameBy","_fixedValue","_valueFollow","_trimBlank","_focused","_encrypted","_aggregated","_aggregatedBy","_extendHostName","_crossSource","fieldNameRequired","toUpperCase","_fieldName","_dataType","proxyHostFieldName","proxyFieldChanged","detailDs","subDataset","invalidDatasetField","invalidActionField","aggraded","aggradedBy","regularMessage","lkfCfg","lkDataset","lookupSource","lkParam","lookupParam","realDataset","realSource","childFldCfg","alignment","_removeRelation","_clearFieldCache","_addRelation","shortName","_fireGlobalMetaChangedEvent","displayLabel","fullLabel","separator","labels","_getProxyPropValue","proxyFldName","newProxyFldObj","proxyFldObj","_setProxyPropValue","tabIndex","NaN","getEditLength","codeFld","nameFld","max","align","_alignment","_fireColumnUpdatedEvent","displayFmt","_dateType","unique","dateFormat","dateSeparator","dateRegular","dateFmt","fieldReadOnly","fieldDisabled","ds","valueCountRange","min","displayControl","dispCtrl","fldType","lkDsName","_getDatasetName","detailDsObj","FieldLookup","_fireLookupChangedEvent","dsObjOrName","dtlDsObj","creatingOpt","urlExpr","urlTarget","target","URLTARGETBLANK","calcUrl","antiXss","isXss","dataRange","argLen","customValueAccessor","accessor","converter","trueValue","falseValue","trueText","falseText","mergeSame","crossSource","CrossFieldSource","getTextValue","setTextValue","newDataset","childFlds","_underted","hostFldObj","_hostDatasetName","_hostField","_realDataset","_dsParsed","_codeFormat","_innerdisplayFields","_returnFieldMap","_editFilter","_editItemDisabled","_onlyLookupFields","_includeFields","_excludeFields","_visibleFields","editFilter","editItemDisabled","toPlanObject","lkdataset","LookupDatasetNotSameAsHost","codeFormat","fieldExpr","getDefaultDisplayFields","getCurrentDisplayValue","_sourceType","_sourceField","_lookupLevel","_labels","_values","_matchExpr","_hideEmptyValue","_hasSubtotal","_subtotalPosition","_subtotalLabel","sourceType","sourceField","lookupLevel","matchExpr","hideEmptyValue","hasSubtotal","subtotalPosition","subtotalLabel","createCrossFieldSource","cfg","srcType","FilterDataset","and","or","dsOperator","equal","notEqual","greatThan","greatThanAndEqual","lessThan","lessThanAndEqual","likeany","likefirst","likelast","selfchildren0","children0","selfchildren1","children1","_hostDataset","_filterDataset","_varValues","filterDataset","doProxyFieldChanged","hostLkObj","lkCfg","editorObj","operator","dsFields","fieldLabels","_appendFields","filterFldCfg","lParenthesis","textReadOnly","rParenthesis","logicalOpr","dsFilter","rule1","rule2","firstValue","rule3","oldValueStyle","ctrlType","getFilterExprText","validate","lastRecno","getFilterExpr","_getFieldFilter","hostFldLabel","fldCode","fldDataType","parentName","yearMonth","fldNameStr","funcStr","_getFilterValue","parenthesisCount","valueRequired","parenthesisNotMatched","lkdsField","extHostName","extHostValue","_innerGetValue","val","_innerSetValue","cacheObj","cache","fldCacheObj","fieldNameOrArray","arrFldNames","FieldValueConverter","_addFieldLabel","NumberValueConverter","intRegular","invalidInt","floatRegular","invalidFloat","regular","regExpObj","actual","expected","invalidIntegerPart","invalidDecimalPart","rtnText","DateValueConverter","invalidDateFieldValue","StringValueConverter","BooleanValueConverter","LookupValueConverter","lkFldObj","dsLookup","_convertFieldValue","srcField","srcValues","destFields","valueCnt","destValue","notFound","_valueConverters","fldErrObj","errMsgObj","idx","clearFieldError","_selection","_onChanged","fireEvent","add","_selectCell","remove","tmp","onChanged","isSelected","selObj","_recno_","getSelectionText","encodeSpecialData","seperator","labelLen","labelStr","isFirst","checkInputChar","inputChar","existText","cursorPos","valid","fieldValueRequired","checkMultiple","valueCount","lessThanCount","fldRange","checkDataRange","checkBetween","betwwenInvalid","hasLookup","strMin","strMax","notInRange","moreThanValue","lessThanValue","checkUnique","currDs","notUnique","serverValidator","ajaxSetting","async","contentType","mimeType","ajax","textStatus","jqXHR","errorThrown","responseJSON","ConnectError","ApplyAction","QUERY","SAVE","csrfToken","headers","reject","dataOrJqXHR","jqXHRorErrorThrown","XLSXXPorter","importData","fileContent","getHeader","sheet","C","XLSX","utils","decode_range","R","r","cell","encode_cell","hdr","t","format_cell","workbook","read","SheetNames","sheetName","Sheets","header","roa","sheet_to_row_object_array","exportData","doEndExporting","convertToUnitArray","workBook","buf","ArrayBuffer","view","charCodeAt","endCell","topDsCfg","endRow","workSheet","encode_range","startCell","ws_name","wb","xlsxOpt","bookType","bookSST","wbout","write","saveAs","onExported","exportAggregated","onlyOnce","onExporting","lastRow","lastCol","expFld","parsedExpCfg","_getExportFields","row","_convertToXLSXFormat","_innerExportData","worksheet","col","cell_ref","currDsCfg","dsTmp","isMaster","notFirst","totalRecCnt","SType","NType","cfgCnt","aggrValues","aggrValue","masterCfg","getMaster","addDs","dsCnt","fldNames","exportFlds","XPorter","_excelXPorter","excelXPorter","xporter","defaultXPorter","IndexedDBMetaStore","dbName","_dbName","_db","openDatabase","request","indexedDB","open","onsuccess","onerror","onupgradeneeded","currentTarget","createObjectStore","keyPath","innerGet","transaction","store","objectStore","addDatasetMeta","datasetMeta","addDatasetMetas","datasetMetas"],"mappings":"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","file":"jslet-data.min.js","sourcesContent":["/*!\r\n * Jslet JavaScript Framework v4.0.0\r\n * http://www.jslet.com\r\n *\r\n * Copyright 2016 Jslet Team\r\n * Released under GNU AGPL v3.0 license and commercial license\r\n */\r\n/* jshint ignore:start */\r\n\"use strict\";\r\n(function (root, factory) {\r\n    if (typeof define === 'function') {\r\n    \tif(define.amd) {\r\n\t        define('jslet-data', ['jquery', 'jslet-locale'], factory);\r\n\t    } else {\r\n\t    \tdefine(function(require, exports, module) {\r\n\t    \t\tvar jsletlocale = require('jslet-locale');\r\n\t    \t\tvar jQuery = require('jquery');\r\n\t    \t\tmodule.exports = factory(jQuery, jsletlocale);\r\n\t    \t});\r\n\t    }\r\n    } else {\r\n    \tfactory(window.jQuery, window.jsletlocale);\r\n    }\r\n})(this, function (jQuery, jsletlocale) {\r\n/* jshint ignore:end */\r\n\tif (window.jslet === undefined || jslet === undefined){\r\n\t\t/**\r\n\t\t * Root object/function of jslet framework. Example:\r\n\t\t * \r\n\t\t *     var jsletObj = jslet('#tab');\r\n\t\t * \r\n\t\t * @param {String} Html tag id, like '#id'.\r\n\t\t * \r\n\t\t * @return {Object} jslet object of the specified Html tag.\r\n\t\t */\r\n\t    window.jslet = function(id){\r\n\t        var ele = jQuery(id)[0];\r\n\t        return (ele && ele.jslet) ? ele.jslet : null;\r\n\t    };\r\n\t}\r\n\r\n\nif (window.jslet === undefined || jslet === undefined){\r\n\t/**\r\n\t * \r\n\t * Get the jslet control object which is binded to a specified HTML element.\r\n\t * \r\n     *     @example\r\n     *     var jsletControl = jslet('#tableId');\r\n\t * @static\r\n\t * @param {String} elementId Html element id.\r\n\t * \r\n\t * @return {jslet.ui.Control} jslet binded control object.\r\n\t */\r\n    window.jslet = function(elementId) {\r\n    \tif(typeof elementId == 'string' && elementId[0] != '#') {\r\n    \t\telementId = '#' + elementId;\r\n    \t}\r\n        var ele = jQuery(elementId)[0];\r\n        return (ele && ele.jslet) ? ele.jslet : null;\r\n    };\r\n}\r\n\r\nif (!jslet.rootUri) {\r\n    var ohead = window.document.getElementsByTagName('head')[0], \r\n        uri = ohead.lastChild.src;\r\n    if(uri) {\r\n\t    uri = uri.substring(0, uri.lastIndexOf('/') + 1);\r\n\t    jslet.rootUri = uri;\r\n    }\r\n}\r\n/**\r\n * @class\r\n * @static\r\n */\r\njslet.global = {\r\n\t/**\r\n\t * @type {String}\r\n\t *  \r\n\t * Jslet current version.\r\n\t */\r\n\tversion: '4.0.0',\r\n\t\r\n\t/**\r\n\t * @type {String}\r\n\t * \r\n\t * The field name which stores record changed state. <br />\r\n\t * Used in the method: {@link jslet.data.Dataset#submit}.\r\n\t */ \r\n\tchangeStateField: 'rs',\r\n\t\r\n\t/**\r\n\t * @type {String}\r\n\t * \r\n\t * The field name which stores record selected state.\r\n\t * Used in method: {@link jslet.data.Dataset#selected}.\r\n\t */\r\n\tselectStateField: '_sel_',\r\n\t\r\n\t/**\r\n\t * @type {String}\r\n\t * \r\n\t * The field name which stores record edit audit log.\r\n\t */\r\n\tauditLogField: 'al',\r\n\t\r\n\t/**\r\n\t * @type {String}\r\n\t * \r\n\t * The separator for multiple item in a field.\r\n\t */\r\n\tvalueSeparator: ',',\r\n\t\r\n\t/**\r\n\t * @type {String}\r\n\t * \r\n\t * The server class name Mapped to a dataset. <br />\r\n\t * In some server system, it can convert dataset record into server entity class specified by this property.\r\n\t */\r\n\tdefaultRecordClass: null,\r\n\t\r\n\t/**\r\n\t * @type {Integer}\r\n\t * \r\n\t * Default focus changed key code.\r\n\t * Normally, press 'Tab' key to move focus, in some cases, user need to press 'Enter' key to move focus.\r\n\t */\r\n\tdefaultFocusKeyCode: 9,\r\n\t\r\n\t/**\r\n\t * @type {Integer}\r\n\t * \r\n\t * Default char display width.\r\n\t */\r\n\tdefaultCharWidth: 12,\r\n\t\r\n\tdebugMode: true\r\n};\r\n\r\n/**\r\n * @event {Function}\r\n * \r\n * Global server error handler.\r\n * This method can used to process some common error, like session timeout error.\r\n * \r\n * @param {String} errCode Error code\r\n * @param {String} errMsg  Error message\r\n * \r\n * @return {Boolean} Identify if handler catch this error, if catched, the rest handler will not process it.\r\n */\r\njslet.global.serverErrorHandler = function(errCode, errMsg) {\r\n\treturn false;\r\n};\r\n\r\n/**\r\n * @event {Function}\r\n * \r\n * Global event handler for jQuery.ajax, you can set settings here.<br />\r\n * Attention: <br />\r\n * The following attributes can not be set: <br />\r\n *   type, contentType, mimeType, dataType, data, context.\r\n * \r\n * @param {Object} settings jQuery.ajax settings.\r\n * \r\n * @return {Object} jQuery.ajax settings, See [http://api.jquery.com/jQuery.ajax/](#!http://api.jquery.com/jQuery.ajax/).\r\n */\r\njslet.global.beforeSubmit = function(settings) {\r\n\treturn settings;\r\n};\r\n\r\n/**\r\n * @event {Function}\r\n * \r\n * The event after jslet's binded Html element.\r\n *\r\n * @param {HtmlElement} container The HTML element which jslet binds to.\r\n */\r\njslet.global.afterInstall = function(container) {};\r\n\r\n/**\r\n * Global events for import dialog.\r\n * \r\n * @class\r\n * @static\r\n */\r\njslet.global.importDialog = {\r\n\t/**\r\n\t * @event {Function}\r\n\t * \r\n\t * Global query schema event, see {@link jslet.ui.ImportDialog#onQuerySchema}.\r\n\t */\r\n\tonQuerySchema: null,\r\n\t\r\n\t/**\r\n\t * @event {Function}\r\n\t * \r\n\t * Global submit schema event, see {@link jslet.ui.ImportDialog#onQuerySchema}.\r\n\t */\r\n\tonSubmitSchema: null\r\n};\r\n\r\n/**\r\n * Global events for export dialog.\r\n * \r\n * @class\r\n * @static\r\n */\r\njslet.global.exportDialog = {\r\n\t/**\r\n\t * @event {Function}\r\n\t * \r\n\t * Global query schema event, see {@link jslet.ui.ImportDialog#onQuerySchema}.\r\n\t */\r\n\tonQuerySchema: null,\r\n\t\r\n\t/**\r\n\t * @event {Function}\r\n\t * \r\n\t * Global submit schema event, see {@link jslet.ui.ImportDialog#onQuerySchema}.\r\n\t */\r\n\tonSubmitSchema: null\r\n};\r\n\r\n/**\r\n * Global events for dataset object.\r\n * \r\n * @class\r\n * @static\r\n */\r\njslet.global.dataset = {\r\n\t/**\r\n\t * @event {Function}\r\n\t * \r\n\t * @param {String} dsName Dataset name;\r\n\t * @param {String} creatingOption Dataset Creating option, see {@link jslet.data#createDynamicDataset}.\r\n\t */\r\n\tonDatasetCreating: function(dsName, creatingOption) { },\r\n\t\r\n\t/**\r\n\t * @event {Function}\r\n\t * \r\n\t * @param {String} dsName Dataset name.\r\n\t */\r\n\tonDatasetCreated: function(dsName) {}\r\n};\r\n\n/* jshint ignore:start */\r\n/*\r\n * the below code from prototype.js(http://prototypejs.org/) \r\n */\r\njslet.toArray = function(iterable) {\r\n\tif (!iterable) {\r\n\t\treturn [];\r\n\t}\r\n\tif ('toArray' in Object(iterable)) {\r\n\t\treturn iterable.toArray();\r\n\t}\r\n\tvar length = iterable.length || 0, results = new Array(length);\r\n\twhile (length--) {\r\n\t\tresults[length] = iterable[length];\r\n\t}\r\n\treturn results;\r\n};\r\n\r\njslet.extend = function(destination, source) {\r\n\tfor ( var property in source) {\r\n\t\tdestination[property] = source[property];\r\n\t}\r\n\treturn destination;\r\n};\r\n\r\njslet.emptyFunction = function() {\r\n};\r\n\r\njslet.keys = function(object) {\r\n\tvar results = [];\r\n\tif ((typeof object) != 'object') {\r\n\t\treturn results;\r\n\t}\r\n\tfor (var property in object) {\r\n\t\tif (object.hasOwnProperty(property)) {\r\n\t\t\tresults.push(property);\r\n\t\t}\r\n\t}\r\n\treturn results;\r\n};\r\n\r\njslet.extend(Function.prototype,\r\n\t\t(function() {\r\n\t\t\tvar slice = Array.prototype.slice;\r\n\r\n\t\t\tfunction update(array, args) {\r\n\t\t\t\tvar arrayLength = array.length, length = args.length;\r\n\t\t\t\twhile (length--) {\r\n\t\t\t\t\tarray[arrayLength + length] = args[length];\r\n\t\t\t\t}\r\n\t\t\t\treturn array;\r\n\t\t\t}\r\n\r\n\t\t\tfunction merge(array, args) {\r\n\t\t\t\tarray = slice.call(array, 0);\r\n\t\t\t\treturn update(array, args);\r\n\t\t\t}\r\n\r\n\t\t\tfunction argumentNames() {\r\n\t\t\t\tvar names = this.toString().match(\r\n\t\t\t\t\t\t/^[\\s\\(]*function[^(]*\\(([^)]*)\\)/)[1].replace(\r\n\t\t\t\t\t\t/\\/\\/.*?[\\r\\n]|\\/\\*(?:.|[\\r\\n])*?\\*\\//g, '').replace(\r\n\t\t\t\t\t\t/\\s+/g, '').split(',');\r\n\t\t\t\treturn names.length == 1 && !names[0] ? [] : names;\r\n\t\t\t}\r\n\r\n\t\t\tfunction bind(context) {\r\n\t\t\t\tif (arguments.length < 2 && (typeof arguments[0] === 'undefined')) {\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t}\r\n\t\t\t\tvar __method = this, args = slice.call(arguments, 1);\r\n\t\t\t\treturn function() {\r\n\t\t\t\t\tvar a = merge(args, arguments);\r\n\t\t\t\t\treturn __method.apply(context, a);\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tfunction bindAsEventListener(context) {\r\n\t\t\t\tvar __method = this, args = slice.call(arguments, 1);\r\n\t\t\t\treturn function(event) {\r\n\t\t\t\t\tvar a = update( [ event || window.event ], args);\r\n\t\t\t\t\treturn __method.apply(context, a);\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tfunction curry() {\r\n\t\t\t\tif (!arguments.length) {\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t}\r\n\t\t\t\tvar __method = this, args = slice.call(arguments, 0);\r\n\t\t\t\treturn function() {\r\n\t\t\t\t\tvar a = merge(args, arguments);\r\n\t\t\t\t\treturn __method.apply(this, a);\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tfunction delay(timeout) {\r\n\t\t\t\tvar __method = this, args = slice.call(arguments, 1);\r\n\t\t\t\ttimeout = timeout * 1000;\r\n\t\t\t\treturn window.setTimeout(function() {\r\n\t\t\t\t\treturn __method.apply(__method, args);\r\n\t\t\t\t}, timeout);\r\n\t\t\t}\r\n\r\n\t\t\tfunction defer() {\r\n\t\t\t\tvar args = update( [ 0.01 ], arguments);\r\n\t\t\t\treturn this.delay.apply(this, args);\r\n\t\t\t}\r\n\r\n\t\t\tfunction wrap(wrapper) {\r\n\t\t\t\tvar __method = this;\r\n\t\t\t\treturn function() {\r\n\t\t\t\t\tvar a = update( [ __method.bind(this) ], arguments);\r\n\t\t\t\t\treturn wrapper.apply(this, a);\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tfunction methodize() {\r\n\t\t\t\tif (this._methodized) {\r\n\t\t\t\t\treturn this._methodized;\r\n\t\t\t\t}\r\n\t\t\t\tvar __method = this;\r\n\t\t\t\tthis._methodized = function() {\r\n\t\t\t\t\tvar a = update( [ this ], arguments);\r\n\t\t\t\t\treturn __method.apply(null, a);\r\n\t\t\t\t};\r\n\t\t\t\treturn this._methodized;\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\targumentNames : argumentNames,\r\n\t\t\t\tbind : bind,\r\n\t\t\t\tbindAsEventListener : bindAsEventListener,\r\n\t\t\t\tcurry : curry,\r\n\t\t\t\tdelay : delay,\r\n\t\t\t\tdefer : defer,\r\n\t\t\t\twrap : wrap,\r\n\t\t\t\tmethodize : methodize\r\n\t\t\t};\r\n\t\t})());\r\n\r\n/* Based on Alex Arnell's inheritance implementation. */\r\njslet.Class = (function() {\r\n\r\n\tvar IS_DONTENUM_BUGGY = (function() {\r\n\t\tfor ( var p in {\r\n\t\t\ttoString : 1\r\n\t\t}) {\r\n\t\t\tif (p === 'toString') {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t})();\r\n\r\n\tfunction subclass() {\r\n\t}\r\n\t\r\n\tfunction create() {\r\n\t\tvar parent = null, properties = jslet.toArray(arguments);\r\n\t\tif (jslet.isFunction(properties[0])) {\r\n\t\t\tparent = properties.shift();\r\n\t\t}\r\n\t\tfunction klass() {\r\n\t\t\tthis.initialize.apply(this, arguments);\r\n\t\t}\r\n\r\n\t\tjslet.extend(klass, jslet.Class.Methods);\r\n\t\tklass.superclass = parent;\r\n\t\tklass.subclasses = [];\r\n\r\n\t\tif (parent) {\r\n\t\t\tsubclass.prototype = parent.prototype;\r\n\t\t\tklass.prototype = new subclass();\r\n\t\t\tparent.subclasses.push(klass);\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, length = properties.length; i < length; i++) {\r\n\t\t\tklass.addMethods(properties[i]);\r\n\t\t}\r\n\t\tif (!klass.prototype.initialize) {\r\n\t\t\tklass.prototype.initialize = jslet.emptyFunction;\r\n\t\t}\r\n\t\tklass.prototype.constructor = klass;\r\n\t\treturn klass;\r\n\t}\r\n\r\n\tfunction addMethods(source) {\r\n\t\tvar ancestor = this.superclass && this.superclass.prototype, properties = jslet\r\n\t\t\t\t.keys(source);\r\n\r\n\t\tif (IS_DONTENUM_BUGGY) {\r\n\t\t\tif (source.toString != Object.prototype.toString) {\r\n\t\t\t\tproperties.push('toString');\r\n\t\t\t}\r\n\t\t\tif (source.valueOf != Object.prototype.valueOf) {\r\n\t\t\t\tproperties.push('valueOf');\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tvar isFuncFn = jslet.isFunction;\r\n\t\tfor ( var i = 0, length = properties.length; i < length; i++) {\r\n\t\t\tvar property = properties[i], value = source[property];\r\n\t\t\tif (ancestor && isFuncFn(value) && value.argumentNames()[0] == '$super') {\r\n\t\t\t\tvar method = value;\r\n\t\t\t\tvalue = (function(m) {\r\n\t\t\t\t\treturn function() {\r\n\t\t\t\t\t\treturn ancestor[m].apply(this, arguments);\r\n\t\t\t\t\t};\r\n\t\t\t\t})(property).wrap(method);\r\n\r\n\t\t\t\tvalue.valueOf = method.valueOf.bind(method);\r\n\t\t\t\tvalue.toString = method.toString.bind(method);\r\n\t\t\t}\r\n\t\t\tthis.prototype[property] = value;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\treturn {\r\n\t\tcreate : create,\r\n\t\tMethods : {\r\n\t\t\taddMethods : addMethods\r\n\t\t}\r\n\t};\r\n})();\r\n/* end Prototype code */\r\n/* jshint ignore:start */\njslet._AUTOID = 0;\r\n\r\n/**\r\n * @method\r\n * \r\n * Generate next global id, like 'jslet0', 'jslet1'. Example:\r\n * \r\n *     @example\r\n * \t   jslet.nextId(); //return jslet0\r\n * \t   jslet.nextId(); //return jslet1\r\n * \r\n * @member jslet\r\n * \r\n * @return {String} The next global id.\r\n */\r\njslet.nextId = function(){\r\n\treturn 'jslet' + (jslet._AUTOID++);\r\n};\r\n\r\nif(!jslet.data) {\r\n\tjslet.data = {};\r\n}\r\n\r\nif(!jslet.temp) {\r\n\tjslet.temp = {};\r\n}\r\n\r\n//if (!jslet.rootUri) {\r\n//    var ohead = document.getElementsByTagName('head')[0], uri = ohead.lastChild.src;\r\n//    uri = uri.substring(0, uri\r\n//\t\t\t\t\t.lastIndexOf('/')\r\n//\t\t\t\t\t+ 1);\r\n//    jslet.rootUri = uri\r\n//}\r\n\r\n/*\r\n * Javascript language enhancement\r\n */\r\nif(!Array.indexOf){\r\n\tArray.prototype.indexOf = function(value){\r\n\t\tfor(var i = 0, cnt = this.length; i < cnt; i++){\r\n\t\t\tif(this[i] == value)\r\n\t\t\t\treturn i;\r\n\t\t}\r\n\t\treturn -1;\r\n\t};\r\n}\r\n\r\nif(!String.prototype.trim){\r\n\tString.prototype.trim = function(){\r\n\t\tthis.replace(/^\\s+/, '').replace(/\\s+$/, '');\r\n\t};\r\n}\r\n\r\nif(!String.prototype.startsWith){\r\n\tString.prototype.startsWith = function(pattern) {\r\n\t\treturn this.lastIndexOf(pattern, 0) === 0;\r\n\t};\r\n}\r\n\r\nif(!String.prototype.endsWith){\r\n\t//From Prototype.js\r\n\tString.prototype.endsWith = function(pattern){\r\n        var d = this.length - pattern.length;\r\n        return d >= 0 && this.indexOf(pattern, d) === d;\r\n\t};\r\n}\r\n\r\nif(!FileReader.prototype.readAsBinaryString) {\r\n\tFileReader.prototype.readAsBinaryString = function (fileData) {\r\n\t\tvar Z = this,\r\n\t\t\tbinary = '',\r\n\t\t\treader = new FileReader();      \r\n\t\treader.onload = function (e) {\r\n\t\t\tvar bytes = new Uint8Array(reader.result);\r\n\t\t\tvar length = bytes.byteLength;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\tbinary += String.fromCharCode(bytes[i]);\r\n\t\t\t}\r\n\t\t\tZ.content = binary;\r\n\t\t\tjQuery(Z).trigger('onload');\r\n\t\t}\r\n\t\treader.readAsArrayBuffer(fileData);\r\n\t}\r\n}\r\n\r\njslet.trim = function(str) {\r\n\treturn jQuery.trim(str);\r\n};\r\n\r\njslet.debounce = function(func, wait, immediate) {\r\n\tvar timeoutHander;\r\n\treturn function() {\r\n\t\tvar context = this, args = arguments;\r\n\t\tif(!wait) {\r\n\t\t\tfunc.apply(context, args);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar later = function() {\r\n\t\t\ttimeoutHander = null;\r\n\t\t\tfunc.apply(context, args);\r\n\t\t};\r\n\t\tif(timeoutHander) {\r\n\t\t\tclearTimeout(timeoutHander);\r\n\t\t}\r\n\t\ttimeoutHander = setTimeout(later, wait);\r\n\t};\r\n};\r\n\r\n/*\r\n * Javascript language enhancement(end)\r\n */\r\njslet.deepClone = function(srcObj) {\r\n\tif(srcObj === undefined || srcObj === null || srcObj === true || srcObj === false) {\r\n\t\treturn srcObj;\r\n\t}\r\n\t\r\n\tif(jslet.isString(srcObj) || jslet.isNumber(srcObj)) {\r\n\t\treturn srcObj;\r\n\t}\r\n\t\r\n\tif(jslet.isDate(srcObj)) {\r\n\t\treturn new Date(srcObj.getTime());\r\n\t}\r\n    var objClone;\r\n\tif(jslet.isArray(srcObj)) {\r\n\t\tobjClone = [];\r\n\t\tfor(var i = 0, len = srcObj.length; i < len; i++) {\r\n\t\t\tobjClone[i] = jslet.deepClone(srcObj[i]);\r\n\t\t}\r\n\t\treturn objClone;\r\n\t}\r\n    if (srcObj.constructor == Object) {\r\n        objClone = new srcObj.constructor(); \r\n    } else {\r\n        objClone = new srcObj.constructor(srcObj.valueOf()); \r\n    }\r\n    for(var key in srcObj){\r\n        if ( objClone[key] != srcObj[key] ){ \r\n            if ( typeof(srcObj[key]) == 'object' ){ \r\n                objClone[key] = jslet.deepClone(srcObj[key]);\r\n            } else {\r\n                objClone[key] = srcObj[key];\r\n            }\r\n        }\r\n    }\r\n    return objClone; \r\n};\r\n                                        \r\n\r\n/**\r\n * format message with argument. Example:\r\n * \r\n *     @example\r\n *     jslet.formatMessage('Your name is: {0}', 'Bob');//return: your name is: Bob\r\n *     jslet.formatMessage('They are: {0} and {1}', ['Jerry','Mark']); \r\n * \r\n * @member jslet\r\n * \r\n * @param {String} msg Initial message, placeholder of argument is {n}, n is number. \r\n * @param {String[]} args Arguments to fill into placeholder.\r\n * \r\n * @return formatted formatted message.\r\n */\r\njslet.formatMessage = function (msg, args) {\r\n\tjslet.Checker.test('jslet.formatMessage#msg', msg).required().isString();\r\n    if(args === undefined || args === null) {\r\n    \treturn msg; \r\n    }\r\n    if(args === false) {\r\n    \targs = 'false';\r\n    }\r\n    if(args === true) {\r\n    \targs = 'true';\r\n    }\r\n    var result = msg, cnt, i;\r\n    if (jslet.isArray(args)) {// array\r\n        cnt = args.length;\r\n        for (i = 0; i < cnt; i++) {\r\n            result = result.replace('{' + i + '}', args[i]);\r\n        }\r\n    } else if(jslet.isObject(args)){// Object\r\n        for (var key in args) {\r\n            result = result.replace('{' + key + '}', args[key]);\r\n        }\r\n    } else {\r\n    \treturn msg.replace('{0}', args);\r\n    }\r\n    return result;\r\n};\r\n\r\njslet.formatString = function (value, dispFmt) {\r\n\tif(!dispFmt || !value) {\r\n\t\treturn value;\r\n\t}\r\n\tjslet.Checker.test('jslet.formatString#displayFormat', dispFmt).isString();\r\n\tvar valueLen = value.length,\r\n\t\tfmtLen = dispFmt.length,\r\n\t\tfmtLen1 = fmtLen - 1,\r\n\t\tc, k = -1, result = '', next;\r\n\tfor(var i = 0; i < fmtLen; i++) {\r\n\t\tc = dispFmt[i];\r\n\t\tif(c === '\\\\' && i < fmtLen1) {\r\n\t\t\tnext = dispFmt[i+1];\r\n\t\t\tif(next === '#') {\r\n\t\t\t\tresult += '#';\r\n\t\t\t\ti++;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(c === '#') {\r\n\t\t\tk++;\r\n\t\t\tif(k === valueLen) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tresult += value[k];\r\n\t\t} else {\r\n\t\t\tresult += c;\r\n\t\t}\r\n\t}\r\n\treturn result;\r\n};\r\n\r\njslet._SCALEFACTOR = '100000000000000000000000000000000000';\r\n\r\n/**\r\n * Format a number. Example:\r\n * \r\n *     @example\r\n *     jslet.formatNumber(12345.999,'#,##0.00'); //return '12,346.00'\r\n *     jslet.formatNumber(12345.999,'#,##0.##'); //return '12,346'\r\n *     jslet.formatNumber(123,'000000'); //return '000123'\r\n * \r\n * @member jslet\r\n * \r\n * @param {Number} num Number which need to format. \r\n * @param {String} pattern Pattern for number, like '#,##0.00': <br />\r\n *  '#' - not required; <br />\r\n *  '0' - required, if the corresponding digit of the number is empty, fill in with '0'; <br />\r\n *\r\n * @return {String} Formatted Number.\r\n */\r\njslet.formatNumber = function(num, pattern) {\r\n\tif(!num && num !== 0) {\r\n\t\treturn '';\r\n\t}\r\n\tif (!pattern) {\r\n\t\treturn num + '';\r\n\t}\r\n\tvar preFix = '', c, i;\r\n\tfor (i = 0; i < pattern.length; i++) {\r\n\t\tc = pattern.substr(i, 1);\r\n\t\tif (c == '#' || c == '0' || c == ',') {\r\n\t\t\tif (i > 0) {\r\n\t\t\t\tpreFix = pattern.substr(0, i);\r\n\t\t\t\tpattern = pattern.substr(i);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tvar suffix = '';\r\n\tfor (i = pattern.length - 1; i >= 0; i--) {\r\n\t\tc = pattern.substr(i, 1);\r\n\t\tif (c == '#' || c == '0' || c == ',') {\r\n\t\t\tif (i > 0) {\r\n\t\t\t\tsuffix = pattern.substr(i + 1);\r\n\t\t\t\tpattern = pattern.substr(0, i + 1);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tvar fmtarr = pattern ? pattern.split('.') : [''], fmtDecimalLen = 0;\r\n\tif (fmtarr.length > 1) {\r\n\t\tfmtDecimalLen = fmtarr[1].length;\r\n\t}\r\n\tvar strarr = num ? num.toString().split('.') : ['0'], dataDecimalLen = 0;\r\n\tif (strarr.length > 1) {\r\n\t\tdataDecimalLen = strarr[1].length;\r\n\t}\r\n\tif (dataDecimalLen > fmtDecimalLen) {\r\n\t\tvar factor = parseInt(jslet._SCALEFACTOR.substring(0, fmtDecimalLen + 1));\r\n\t\tnum = Math.round(num * factor) / factor;\r\n\t\tstrarr = num ? num.toString().split('.') : ['0'];\r\n\t}\r\n\tvar retstr = '', \r\n\t\tstr = strarr[0],\r\n\t\tsign = str[0];\r\n\tif(sign === '-' || sign === '+') {\r\n\t\tstr = str.substring(1);\r\n\t} else {\r\n\t\tsign = null;\r\n\t}\r\n\tvar fmt = fmtarr[0],\r\n\t\tcomma = false,\r\n\t\tk = str.length - 1,\r\n\t\tf;\r\n\tfor (f = fmt.length - 1; f >= 0; f--) {\r\n\t\tswitch (fmt.substr(f, 1)) {\r\n\t\t\tcase '#' :\r\n\t\t\t\tif (k >= 0) {\r\n\t\t\t\t\tretstr = str.substr(k--, 1) + retstr;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase '0' :\r\n\t\t\t\tif (k >= 0) {\r\n\t\t\t\t\tretstr = str.substr(k--, 1) + retstr;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tretstr = '0' + retstr;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase ',' :\r\n\t\t\t\tcomma = true;\r\n\t\t\t\tretstr = ',' + retstr;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\tif (k >= 0) {\r\n\t\tif (comma) {\r\n\t\t\tvar l = str.length;\r\n\t\t\tfor (; k >= 0; k--) {\r\n\t\t\t\tretstr = str.substr(k, 1) + retstr;\r\n\t\t\t\tif (k > 0 && ((l - k) % 3) === 0) {\r\n\t\t\t\t\tretstr = ',' + retstr;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tretstr = str.substr(0, k + 1) + retstr;\r\n\t\t}\r\n\t}\r\n\tretstr = retstr.replace(/^,+/, '');\r\n\t\r\n\tstr = strarr.length > 1 ? strarr[1] : '';\r\n\tfmt = fmtarr.length > 1 ? fmtarr[1] : '';\r\n\tk = 0;\r\n\tvar decimalStr = '';\r\n\tfor (f = 0; f < fmt.length; f++) {\r\n\t\tswitch (fmt.substr(f, 1)) {\r\n\t\t\tcase '#' :\r\n\t\t\t\tif (k < str.length) {\r\n\t\t\t\t\tdecimalStr += str.substr(k++, 1);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase '0' :\r\n\t\t\t\tif (k < str.length) {\r\n\t\t\t\t\tdecimalStr += str.substr(k++, 1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdecimalStr += '0';\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\tif(decimalStr) {\r\n\t\tretstr = retstr + '.' + decimalStr;\r\n\t}\r\n\tif(sign) {\r\n\t\tretstr = sign + retstr;\r\n\t}\r\n\treturn preFix + retstr + suffix;\r\n};\r\n\r\n/**\r\n * Format date with specified format. Example:\r\n * \r\n *     @example\r\n *     var date = new Date();\r\n *     jslet.formatDate(date, 'yyyy-MM-dd'));//2012-12-21\r\n * \r\n * @member jslet\r\n * \r\n * @param {Date} date Formatting date value.\r\n * @param {String} format Date format.\r\n * \r\n * @return {String} String Formatted date.\r\n */\r\njslet.formatDate = function(date, format) {\r\n\tif(!date) {\r\n\t\treturn '';\r\n\t}\r\n\tjslet.Checker.test('jslet.formatDate#date', date).isDate();\r\n\tjslet.Checker.test('jslet.formatDate#format', format).required().isString();\r\n\tvar o = {\r\n\t\t'M+' : date.getMonth() + 1, // month\r\n\t\t'd+' : date.getDate(), // day\r\n\t\t'h+' : date.getHours(), // hour\r\n\t\t'm+' : date.getMinutes(), // minute\r\n\t\t's+' : date.getSeconds(), // second\r\n\t\t'q+' : Math.floor((date.getMonth() + 3) / 3), // quarter\r\n\t\t'S' : date.getMilliseconds()\r\n\t\t// millisecond\r\n\t};\r\n\tif (/(y+)/.test(format)) {\r\n\t\tformat = format.replace(RegExp.$1, \r\n\t\t\t\t(date.getFullYear() + '').substr(4 - RegExp.$1.length));\r\n\t}\r\n\tfor (var k in o) {\r\n\t\tif (new RegExp('(' + k + ')').test(format)) {\r\n\t\t\tformat = format.replace(RegExp.$1, \r\n\t\t\t\tRegExp.$1.length == 1 ? o[k] : ('00' + o[k]).substr(('' + o[k]).length));\r\n\t\t}\r\n\t}\r\n\treturn format;\r\n};\r\n\r\n/**\r\n * Parse a string to Date object. Example\r\n * \r\n *     @example\r\n *     var date = jslet.parseDate('2013-03-25', 'yyyy-MM-dd');\r\n *     var date = jslet.parseDate('2013-03-25 15:20:18', 'yyyy-MM-dd hh:mm:ss');\r\n * \r\n * @member jslet\r\n * \r\n * @param {String} strDate String date.\r\n * @param {String} format Date format, like: 'yyyy-MM-dd hh:mm:ss'.\r\n * \r\n * @return Date Object.\r\n */\r\njslet.parseDate = function(strDate, format) {\r\n\tif(!strDate) {\r\n\t\treturn null;\r\n\t}\r\n\tjslet.Checker.test('jslet.parseDate#strDate', strDate).isString();\r\n\tjslet.Checker.test('jslet.parseDate#format', format).required().isString();\r\n\t\r\n\tvar preChar = null, ch, v, \r\n\t\tbegin = -1, \r\n\t\tend = 0;\r\n\tvar dateParts = {'y': 0, 'M': 0,'d': 0, 'h': 0,\t'm': 0, 's': 0, 'S': 0};\r\n\t\r\n\tfor(var i = 0, len = format.length; i < len; i++) {\r\n\t\tch = format.charAt(i);\r\n\t\r\n\t\tif(ch != preChar) {\r\n\t\t\tif(preChar && dateParts[preChar] !== undefined && begin >= 0) {\r\n\t\t\t\tend = i;\r\n\t\t\t\tv = parseInt(strDate.substring(begin, end));\r\n\t\t\t\tif(isNaN(v)) {\r\n\t\t\t\t\tthrow new Error(jslet.formatMessage(jsletlocale.Dataset.invalidDate, [format]));\r\n\t\t\t\t}\r\n\t\t\t\tdateParts[preChar] = v;\r\n\t\t\t}\r\n\t\t\tbegin = i;\r\n\t\t\tpreChar = ch;\r\n\t\t}\r\n\t}\r\n\tif(begin >= 0) {\r\n\t\tv = parseInt(strDate.substring(begin));\r\n\t\tif(isNaN(v)) {\r\n\t\t\tthrow new Error(jslet.formatMessage(jsletlocale.Dataset.invalidDate, [format]));\r\n\t\t}\r\n\t\tdateParts[ch] = v;\r\n\t}\r\n\tvar year = dateParts.y;\r\n\tif(year < 100) {\r\n\t\tyear += 2000;\r\n\t}\r\n\tvar result = new Date(year, dateParts.M - 1, dateParts.d, dateParts.h, dateParts.m, dateParts.s, dateParts.S);\r\n\treturn result;\r\n};\r\n\r\n/*\r\n * Convert Date to ISO8601\r\n */\r\nDate.prototype.toJSON = function() {\r\n\treturn jslet.formatDate(this, 'yyyy-MM-ddThh:mm:ss');\r\n};\r\n\r\n/**\r\n * Convert string(ISO date format) to date object.\r\n * \r\n * @member jslet\r\n * \r\n * @param {String} dateStr A string with ISO date format, like: 2012-12-21T09:30:24Z.\r\n * \r\n * @return {Date} ISO Date Object.\r\n */\r\njslet.convertISODate= function(dateStr) {\r\n\tif(!dateStr) {\r\n\t\treturn null;\r\n\t}\r\n\tif(jslet.isDate(dateStr)) {\r\n\t\treturn dateStr;\r\n\t}\r\n\tvar flag = dateStr.substr(10,1);\r\n\tif(dateStr.length === 10 || 'T' == flag) {\r\n\t\tvar year = dateStr.substr(0,4),\r\n\t\tmonth = dateStr.substr(5,2),\r\n\t\tday = dateStr.substr(8,2),\r\n\t\thour = dateStr.substr(11,2),\r\n\t\tminute = dateStr.substr(14,2),\r\n\t\tsecond = dateStr.substr(17,2);\r\n\t\tif('Z' == dateStr.substr(-1,1)) {\r\n\t\t\treturn new Date(Date.UTC(+year, +month - 1, +day, +hour,\r\n\t\t\t\t\t+minute, +second));\r\n\t\t}\r\n\t\treturn new Date(+year, +month - 1, +day, +hour,\r\n\t\t\t\t+minute, +second);\r\n\t}\r\n    return dateStr;\r\n};\r\n\r\n/*\r\n * Variable for convertToJsPattern,don't use it in your program\r\n */\r\njslet._currentPattern = {};\r\n\r\n/*\r\n * Convert sql pattern to javascript pattern\r\n * \r\n * @param {String} pattern sql pattern\r\n * @param {String} escapeChar default is '\\'\r\n * @return {String} js regular pattern\r\n */\r\njslet._convertToJsPattern = function(pattern, escapeChar) {\r\n\tif (jslet._currentPattern.pattern == pattern && \r\n\t\t\tjslet._currentPattern.escapeChar == escapeChar) {\r\n\t\treturn jslet._currentPattern.result;\r\n\t}\r\n\tjslet._currentPattern.pattern = pattern;\r\n\tjslet._currentPattern.escapeChar = escapeChar;\r\n\r\n\tvar jsPattern = [],\r\n\t\tlen = pattern.length - 1,\r\n\t\tc, \r\n\t\tnextChar,\r\n\t\tbgn = 0, \r\n\t\tend = len,\r\n\t\thasLeft = false,\r\n\t\thasRight = false;\r\n\tif (pattern.charAt(0) == '%'){\r\n       bgn = 1;\r\n       hasLeft = true;\r\n    }\r\n    if (pattern.charAt(len) == '%'){\r\n       end = len - 1;\r\n       hasRight = true;\r\n    }\r\n    if (hasLeft && hasRight){\r\n       jsPattern.push('.*');\r\n    }\r\n    else if (hasRight){\r\n       jsPattern.push('^');\r\n    }\r\n\tfor (var i = bgn; i <= end; i++) {\r\n\t\tc = pattern.charAt(i);\r\n\t\tif ((escapeChar && escapeChar == c || c == '\\\\') && i < len) {\r\n\t\t\tnextChar = pattern.charAt(i + 1);\r\n\t\t\tif (nextChar == '%' || nextChar == '_') {\r\n\t\t\t\tjsPattern.push(nextChar);\r\n\t\t\t\ti++;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t} else if (c == '_') {\r\n\t\t\tjsPattern.push('.');\r\n\t\t} else {\r\n\t\t\tif (c == '.' || c == '*' || c == '[' || c == ']' || \r\n\t\t\t\t\tc == '{' || c == '}' || c == '+' || c == '(' || \r\n\t\t\t\t\tc == ')' || c == '\\\\' || c == '?' || c == '$' || c == '^')\r\n\t\t\t\tjsPattern.push('\\\\');\r\n\t\t\tjsPattern.push(c);\r\n\t\t}\r\n\t}// end for\r\n\tif (hasLeft && hasRight || hasRight){\r\n       jsPattern.push('.*');\r\n    } else if (hasLeft){\r\n       jsPattern.push('$');\r\n    }\r\n\r\n    jslet._currentPattern.result = new RegExp(jsPattern.join(''), 'ig');\r\n\treturn jslet._currentPattern.result;\r\n};\r\n\r\n/**\r\n * Test whether the value to match pattern or not, example:\r\n * \r\n *     @example\r\n *     jslet.like('abc','%b%'); //return true \r\n *     jslet.like('abc','%b'); //return false \r\n *     jslet.like('abc','ab_'); //return true \r\n *  \r\n * @member jslet\r\n * \r\n * @param {String} testValue Testing value.\r\n * @param {String} pattern SQL pattern, syntax like SQL.\r\n * \r\n * @return {Boolean} True - if matched, false - otherwise.\r\n */\r\njslet.like = function(testValue, pattern, escapeChar) {\r\n\tif (!testValue || !pattern) {\r\n\t\treturn false;\r\n\t}\r\n\tif (pattern.length === 0) {\r\n\t\treturn false;\r\n\t}\r\n\tif (!escapeChar) {\r\n\t\tescapeChar = '\\\\';\r\n\t}\r\n\tvar jsPattern = jslet._convertToJsPattern(pattern, escapeChar);\r\n\tif(!jslet.isString(testValue)) {\r\n\t\ttestValue += '';\r\n\t}\r\n\treturn testValue.match(jsPattern) !== null;\r\n};\r\n\r\n/**\r\n * Test whether the 'testValue' is between 'minValue' and 'maxValue' or not.\r\n * All arguments must be same data type.\r\n * \r\n *     @example\r\n *     jslet.between(4,2,5); //return true\r\n *     jslet.between('c','a','b'); // return false\r\n * \r\n * @member jslet\r\n * \r\n * @param {Number | String | Date} testValue Testing value.\r\n * @param {Number | String | Date} minValue Minimum value.\r\n * @param {Number | String | Date} maxValue Maximum value.\r\n * \r\n * @return {Boolean} True - if matched, false - otherwise.\r\n */\r\njslet.between = function(testValue, minValue, maxValue) {\r\n\tif (arguments.length <= 1) {\r\n\t\treturn false;\r\n\t}\r\n\tvar flagMin = true,\r\n\t\tflagMax = true;\r\n\tif(minValue !== null && minValue !== undefined) { \r\n\t\tflagMin = (jslet.compareValue(testValue, minValue) >= 0);\r\n\t}\r\n\tif(maxValue !== null && maxValue !== undefined) { \r\n\t\tflagMax = (jslet.compareValue(testValue, maxValue) <= 0);\r\n\t}\r\n\treturn flagMin && flagMax;\r\n};\r\n\r\n/**\r\n * Test whether the first argument is in the list of other arguments or not. Example:\r\n * \r\n *     @example\r\n *     jslet.inlist('a','c','d','e'); //return false\r\n *     jslet.inlist('d','c','d','e'); //return true\r\n * \r\n * @member jslet\r\n * \r\n * @param {Number | String | Date} testValue Testing value.\r\n * @param {Number | String | Date} valueList One or more arguments.\r\n * \r\n * @return {Boolean} True - if matched, false - otherwise.\r\n */\r\njslet.inlist = function(testValue, valueList) {\r\n\tvar cnt = arguments.length;\r\n\tif (cnt < 2) {\r\n\t\treturn false;\r\n\t}\r\n\tfor (var i = 1; i < cnt; i++) {\r\n\t\tif (jslet.compareValue(testValue, arguments[i]) === 0) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\treturn false;\r\n};\r\n\r\n/**\r\n * Test whether the testing value is in an array or not. Example:\r\n * \r\n *     @example\r\n *     jslet.inArray('a','c','d','e'); //return false\r\n *     jslet.inArray('d','c','d','e'); //return true\r\n * \r\n * @member jslet\r\n * \r\n * @param {Number | String | Date} testValue Testing value.\r\n * @param {Number | String | Date} valueList One or more arguments.\r\n * \r\n * @return {Boolean} True - if matched, false - otherwise.\r\n */\r\njslet.inArray = function(testValue, values) {\r\n\tif(!testValue || !values) {\r\n\t\treturn false;\r\n\t}\r\n\tfor (var i = 0, cnt = values.length; i < cnt; i++) {\r\n\t\tif (jslet.compareValue(testValue, values[i]) === 0) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\treturn false;\r\n};\r\n\r\n/**\r\n * Test whether the given value is an array. Example:\r\n * \r\n *     @example\r\n *     jslet.isArray(['a']); //return true\r\n *     jslet.isArray('a'); //return false\r\n * \r\n * @member jslet\r\n * \r\n * @param {Object} testValue Testing value.\r\n * \r\n * @return {Boolean} True - if the given value is an array, false - otherwise.\r\n */\r\njslet.isArray = function (testValue) {\r\n    return testValue === null || testValue === undefined || Object.prototype.toString.apply(testValue) === '[object Array]';\r\n};\r\n\r\n/**\r\n * Test whether the given value is date object. Example:\r\n * \r\n *     @example\r\n *     jslet.isDate(new Date()); //return true\r\n *     jslet.isDate('a'); //return false\r\n * \r\n * @member jslet\r\n * \r\n * @param {Object} testValue Testing value.\r\n * \r\n * @return {Boolean} True - if the given value is date object, false - otherwise.\r\n */\r\njslet.isDate = function(testValue) {\r\n\treturn testValue === null || testValue === undefined || testValue.constructor == Date;\r\n};\r\n\r\n/**\r\n * Test whether the given value is a string object. Example:\r\n * \r\n *     @example\r\n *     jslet.isString(123); //return false\r\n *     jslet.isString('a'); //return true\r\n * \r\n * @member jslet\r\n * \r\n * @param {Object} testValue Testing value.\r\n * \r\n * @return {Boolean} True - if the given value is String object, false - otherwise.\r\n */\r\njslet.isString = function(testValue) {\r\n\treturn testValue === null || testValue === undefined || typeof testValue == 'string';\r\n};\r\n\r\n/**\r\n * Test whether the given value is a Function object. Example:\r\n * \r\n *     @example\r\n *     jslet.isString(123); //return false\r\n *     jslet.isString(function() {}); //return true\r\n * \r\n * @member jslet\r\n * \r\n * @param {Object} testValue Testing value.\r\n * \r\n * @return {Boolean} True - if the given value is Function object, false - otherwise.\r\n */\r\njslet.isFunction = function(testValue) {\r\n\treturn jQuery.isFunction(testValue);\r\n};\r\n\r\njslet.isPromise = function(testValue) {\r\n\treturn testValue && testValue.done && jslet.isFunction(testValue.done);\r\n};\r\n\r\n/**\r\n * Test whether the given value is a number value. Example:\r\n * \r\n *     @example\r\n *     jslet.isNumber(123); //return true\r\n *     jslet.isNumber('a'); //return false\r\n * \r\n * @member jslet\r\n * \r\n * @param {Object} testValue Testing value.\r\n * \r\n * @return {Boolean} True - if the given value is String object, false - otherwise.\r\n */\r\njslet.isNumber = function(testValue) {\r\n\treturn testValue === null || testValue === undefined || jQuery.isNumeric(testValue);\r\n};\r\n/**\r\n * Test whether the given value is an object.\r\n * \r\n *     @example\r\n *     jslet.isString(123); //return false\r\n *     jslet.isString({a:1}); //return true\r\n * \r\n * @member jslet\r\n * \r\n * @param {Object} testValue Testing value.\r\n * \r\n * @return {Boolean} True - if the given value is object, false - otherwise.\r\n */\r\njslet.isObject = function(testValue) {\r\n\treturn testValue === null || testValue === undefined || jQuery.type(testValue) == \"object\";\t\r\n};\r\n\r\n/**\r\n * Test whether the given value is a HTML element.\r\n * \r\n *     @example\r\n *     jslet.isHTMLElement(window); //return false\r\n *     jslet.isHTMLElement(document.body); //return true\r\n * \r\n * @member jslet\r\n * \r\n * @param {Object} testValue Testing value.\r\n * \r\n * @return {Boolean} True - if the given value is a HTML element, false - otherwise.\r\n */\r\njslet.isHTMLElement = function(testValue) {\r\n\treturn testValue === null || testValue === undefined || testValue instanceof HTMLElement;\t\r\n};\r\n\r\n/**\r\n * Test whether the given value is empty. Example:\r\n * \r\n *     @example\r\n *     jslet.isEmpty(123); //return false\r\n *     jslet.isEmpty(null); //return true\r\n *     jslet.isEmpty(undefined); //return true\r\n *     jslet.isEmpty(''); //return true\r\n *     jslet.isEmpty([]); //return true\r\n *     jslet.isEmpty([null]); //return true\r\n * \r\n * @member jslet\r\n * \r\n * @param {Object} testValue Testing value.\r\n * \r\n * @return {Boolean} True - if the given value is object, false - otherwise.\r\n */\r\njslet.isEmpty = function(value) {\r\n\tif(value === null || value === undefined || value === '') {\r\n\t\treturn true;\r\n\t}\r\n\tif(jslet.isArray(value)) {\r\n\t\tvar arrValue = value;\r\n\t\tvar isEmpty = true;\r\n\t\tfor(var i = 0, len = arrValue.length; i < len; i++) {\r\n\t\t\tif(!jslet.isEmpty(arrValue[i])) {\r\n\t\t\t\tisEmpty = false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn isEmpty;\r\n\t}\r\n\treturn false;\r\n};\r\n\r\njslet.setTimeout = function(obj, func, time) {\r\n    jslet.delayFunc = function () {\r\n        func.call(obj);\r\n    };\r\n    setTimeout(jslet.delayFunc, time);\r\n};\r\n\r\n/**\r\n * Compare two values. Example:\r\n * \r\n *     @example\r\n *     jslet.compareValue(1,2); //return -1\r\n *     jslet.compareValue(10,2); //return 1\r\n *     jslet.compareValue(2,2); //return 0\r\n *     jslet.compareValue('a','A'); //return 0\r\n *     jslet.compareValue('a','A', true); //return -1\r\n * \r\n * @member jslet\r\n * \r\n * @param {Number | String | Date} value1 Value1.\r\n * @param {Number | String | Date} value2 Value2.\r\n * @param {Boolean} caseSensitive Case sensitive or not if values are string value.\r\n * @param {Boolean} useLocale Use locale compare or not.\r\n *  \r\n * @return {Integer} 0 - value1 = value2, -1 - value1 < value2, 1 - value1 > value2.\r\n */\r\njslet.compareValue = function(value1, value2, caseSensitive, useLocale) {\r\n\tvalue1 = (value1 === undefined? null: value1);\r\n\tvalue2 = (value2 === undefined? null: value2);\r\n\tif(value1 === value2) {\r\n\t\treturn 0;\r\n\t}\r\n\tif(value1 === null && value2 !== null) {\r\n\t\treturn -1;\r\n\t}\r\n\tif(value2 === null && value1 !== null) {\r\n\t\treturn 1;\r\n\t}\r\n\tvar isStr1 = jslet.isString(value1),\r\n\t\tisStr2 = jslet.isString(value2);\r\n\tif(!isStr1 && !isStr2) {\r\n\t\tif(jslet.isDate(value1)) {\r\n\t\t\tvalue1 = value1.getTime();\r\n\t\t\tvalue2 = value2.getTime();\r\n\t\t}\r\n\t\treturn value1 == value2? 0: (value1 < value2? -1: 1);\r\n\t}\r\n\t//compare string value\r\n\tif(!isStr1) {\r\n\t\tvalue1 = value1 + '';\r\n\t}\r\n\tif(!isStr2) {\r\n\t\tvalue2 = value2 + '';\r\n\t}\r\n\tif(!caseSensitive) {\r\n\t\tvalue1 = value1.toLowerCase();\r\n\t\tvalue2 = value2.toLowerCase();\r\n\t}\r\n\tif(useLocale === undefined || useLocale) {\r\n\t\tvar result = value1.localeCompare(value2);\r\n\t\treturn result === 0? 0: (result < 0 ? -1: 1);\r\n\t} else {\r\n\t\treturn value1 == value2? 0: (value1 < value2? -1: 1);\r\n\t}\r\n};\r\n\r\n/**\r\n * Encode html string. Example:\r\n * \r\n *     @example\r\n *     jslet.htmlEncode('<div />'); //return 'lt;div /gt;'\r\n * \r\n * @member jslet\r\n * \r\n * @param {String} htmlText HTML text.\r\n * \r\n * @return {String} Ecoded HTML text.\r\n */\r\njslet.htmlEncode = function(htmlText){\r\n    if (htmlText) {\r\n        return jQuery('<div />').text(htmlText).html();\r\n    } else {\r\n        return '';\r\n    }\r\n};\r\n\r\n/**\r\n * Decode html string. Example:\r\n * \r\n *     @example\r\n *     jslet.htmlDecode('lt;div /gt;'); //return '<div />'\r\n * \r\n * @member jslet\r\n * \r\n * @param {String} htmlText Encoded HTML text.\r\n * \r\n * @return {String} Decoded HTML text.\r\n */\r\njslet.htmlDecode = function(htmlText) {\r\n    if (htmlText) {\r\n        return jQuery('<div />').html(htmlText).text();\r\n    } else {\r\n        return '';\r\n    }\r\n};\r\n\r\n/**\r\n * Get an array item safely. Example:\r\n * \r\n *     @example\r\n *     var arrValues = ['a','b'];\r\n *     jslet.getArrayValue(arrValues, 1); // return 'b'\r\n *     jslet.getArrayValue(arrValues, 3); // return null\r\n * \r\n * @member jslet\r\n * \r\n * @param {Object[]} arrValues Array value.\r\n * @param {Integer} index Index of wanted to get item.\r\n * \r\n * @return {Object} Array item.\r\n */\r\njslet.getArrayValue = function(arrValues, index) {\r\n\tif(!arrValues) {\r\n\t\treturn null;\r\n\t}\r\n\t\t\r\n    if(jslet.isArray(arrValues)){\r\n        var len = arrValues.length;\r\n        if(index < len) {\r\n            return arrValues[index];\r\n        } else {\r\n            return null;\r\n        }\r\n    } else {\r\n        return arrValues;\r\n    }\r\n};\r\n\r\n/**\r\n * @class\r\n * @static\r\n * \r\n * jslet.Checker can check whether a variable is valid on runtime. Usage:\r\n * \r\n *     @example\r\n *     var x = 1;\r\n *     jslet.Checker.test('x', x).isGTZero();\r\n *     \r\n */\r\njslet.Checker = {\r\n\tvarName: null,\r\n\tvarValue: null,\r\n\t\r\n\t/**\r\n\t * Set the testing variable.\r\n\t * \r\n\t * @param {String} varName Variable name.\r\n\t * @param {Object} varValue Variable value.\r\n\t * \r\n\t * @return {this}\r\n\t */\r\n\ttest: function(varName, varValue) {\r\n\t\tthis.varName = varName;\r\n\t\tthis.varValue = varValue;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Set the testing variable value.\r\n\t * \r\n\t * @param {Object} varValue Variable value.\r\n\t * \r\n\t * @return {this}\r\n\t */\r\n\ttestValue: function(varValue) {\r\n\t\tthis.varValue = varValue;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Check the testing variable does not equal: null | undefined | ''.\r\n\t * \r\n\t *     @example\r\n\t *     var x = null;\r\n\t *     var y = 123;\r\n\t *     jslet.Checker.test('x', x).required(); //error thrown\r\n\t *     jslet.Checker.test('y', y).required(); //no error thrown\r\n\t *     \r\n\t * @return {this}\r\n\t */\r\n\trequired: function() {\r\n\t\tif(this.varValue === null || this.varValue === undefined || this.varValue === '') {\r\n\t\t\t//[{0}] is Required!\r\n\t\t\tthrow new Error(jslet.formatMessage(jsletlocale.Checker.required, [this.varName]));\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Check whether the testing variable type is boolean.\r\n\t * \r\n\t *     @example\r\n\t *     var x = 123;\r\n\t *     var y = true;\r\n\t *     jslet.Checker.test('x', x).isBoolean(); //error thrown\r\n\t *     jslet.Checker.test('y', y).isBoolean(); //no error thrown\r\n\t *     \r\n\t * @return {this}\r\n\t */\r\n\tisBoolean: function() {\r\n\t\tif(this.varValue !== null && \r\n\t\t   this.varValue !== undefined &&\r\n\t\t   this.varValue !== '' &&\r\n\t\t   this.varValue !== 0 && \r\n\t\t   this.varValue !== true && \r\n\t\t   this.varValue !== false) {\r\n\t\t\t//[{0}] must be a Boolean value!\r\n\t\t\tthrow new Error(jslet.formatMessage(jsletlocale.Checker.requiredBooleanValue, [this.varName]));\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Check whether the testing variable type is string.\r\n\t * \r\n\t *     @example\r\n\t *     var x = 123;\r\n\t *     var y = 'test';\r\n\t *     jslet.Checker.test('x', x).isString(); //error thrown\r\n\t *     jslet.Checker.test('y', y).isString(); //no error thrown\r\n\t *     \r\n\t * @return {this}\r\n\t */\r\n\tisString: function() {\r\n\t\tif(this.varValue !== null && \r\n\t\t\tthis.varValue !== undefined &&\r\n\t\t\tthis.varValue !== false &&\r\n\t\t\t!jslet.isString(this.varValue)) {\r\n\t\t\t//[{0}: {1}] must be a String value!\r\n\t\t\tthrow new Error(jslet.formatMessage(jsletlocale.Checker.requiredStringValue, [this.varName, this.varValue]));\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Check whether the testing variable type is date.\r\n\t * \r\n\t *     @example\r\n\t *     var x = 123;\r\n\t *     var y = new Date();\r\n\t *     jslet.Checker.test('x', x).isDate(); //error thrown\r\n\t *     jslet.Checker.test('y', y).isDate(); //no error thrown\r\n\t *     \r\n\t * @return {this}\r\n\t */\r\n\tisDate: function() {\r\n\t\tif(this.varValue !== null && \r\n\t\t\tthis.varValue !== undefined &&\r\n\t\t\tthis.varValue !== false &&\r\n\t\t\t!jslet.isDate(this.varValue)) {\r\n\t\t\t//[{0}: {1}] must be a Date value!\r\n\t\t\tthrow new Error(jslet.formatMessage(jsletlocale.Checker.requiredDateValue, [this.varName, this.varValue]));\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Check whether the testing variable type is date.\r\n\t * \r\n\t *     @example\r\n\t *     var x = '123';\r\n\t *     var y = 123;\r\n\t *     jslet.Checker.test('x', x).isNumber(); //error thrown\r\n\t *     jslet.Checker.test('y', y).isNumber(); //no error thrown\r\n\t *     \r\n\t * @return {this}\r\n\t */\r\n\tisNumber: function() {\r\n\t\tif(this.varValue !== null && \r\n\t\t\tthis.varValue !== undefined && \r\n\t\t\tthis.varValue !== false &&\r\n\t\t\t!jQuery.isNumeric(this.varValue)) {\r\n\t\t\t//[{0}: {1}] must be a Numberic value!\r\n\t\t\tthrow new Error(jslet.formatMessage(jsletlocale.Checker.requiredNumbericValue, [this.varName, this.varValue]));\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Check whether the testing variable is greater than zero.\r\n\t * \r\n\t *     @example\r\n\t *     var y = 0;\r\n\t *     jslet.Checker.test('y', y).isGTZero(); //Error thrown\r\n\t *     y = 123;\r\n\t *     jslet.Checker.test('y', y).isGTZero(); //no error thrown\r\n\t *     \r\n\t * @return {this}\r\n\t */\r\n\tisGTZero: function() {\r\n\t\tthis.isNumber();\r\n\t\tif(this.varValue === null || this.varValue === undefined) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tif(this.varValue <= 0) {\r\n\t\t\t//[{0}: {1}] must be great than zero!\r\n\t\t\tthrow new Error(jslet.formatMessage(jsletlocale.Checker.greatThanZero, [this.varName, this.varValue]));\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Check whether the testing variable is greater than or equals zero.\r\n\t * \r\n\t *     @example\r\n\t *     var y = -1;\r\n\t *     jslet.Checker.test('y', y).isGTEZero(); //Error thrown\r\n\t *     y = 0;\r\n\t *     jslet.Checker.test('y', y).isGTEZero(); //no error thrown\r\n\t *     \r\n\t * @return {this}\r\n\t */\r\n\tisGTEZero: function() {\r\n\t\tthis.isNumber();\r\n\t\tif(this.varValue === null || this.varValue === undefined) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tif(this.varValue < 0) {\r\n\t\t\t//[{0}: {1}] must be great than or equal zero!\r\n\t\t\tthrow new Error(jslet.formatMessage(jsletlocale.Checker.greatThanEqualZero, [this.varName, this.varValue]));\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Check whether the testing variable is in a range.\r\n\t * \r\n\t *     @example\r\n\t *     var y = 3;\r\n\t *     jslet.Checker.test('y', y).between(1, 2); //Error thrown\r\n\t *     jslet.Checker.test('y', y).between(2, 5); //no error thrown\r\n\t *\r\n\t * @param {Object} minValue Start value of range.\r\n\t * @param {Object} maxValue End value of range.\r\n\t * \r\n\t * @return {this}\r\n\t */\r\n\tbetween: function(minValue, maxValue) {\r\n\t\tif(this.varValue === null || this.varValue === undefined) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tvar checkMin = minValue !== null && minValue !== undefined;\r\n\t\tvar checkMax = maxValue !== null && maxValue !== undefined;\r\n\t\tif(checkMin && checkMax && (this.varValue < minValue || this.varValue > maxValue)) {\r\n\t\t\t//[{0} : {1}] must be between [{2}] and [{3}]!\r\n\t\t\tthrow new Error(jslet.formatMessage(jsletlocale.Checker.betweenValue, [this.varName, this.varValue, minValue, maxValue]));\r\n\t\t}\r\n\t\tif(!checkMin && checkMax && this.varValue > maxValue) {\r\n\t\t\t//[{0} : {1}] must be less than [{2}]!\r\n\t\t\tthrow new Error(jslet.formatMessage(jsletlocale.Checker.lessThanMaxValue, [this.varName, this.varValue, maxValue]));\r\n\t\t}\r\n\t\tif(checkMin && !checkMax && this.varValue < minValue) {\r\n\t\t\t//[{0} : {1}] must be great than [{2}]!\r\n\t\t\tthrow new Error(jslet.formatMessage(jsletlocale.Checker.betweenValue, [this.varName, this.varValue, minValue]));\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Check whether the testing variable type is Array.\r\n\t * \r\n\t *     @example\r\n\t *     var x = '123';\r\n\t *     jslet.Checker.test('x', x).isArray(); //error thrown\r\n\t *     x = ['123'];\r\n\t *     jslet.Checker.test('x', x).isArray(); //no error thrown\r\n\t *     \r\n\t * @return {this}\r\n\t */\r\n\tisArray: function() {\r\n\t\tif(this.varValue !== null && \r\n\t\t\tthis.varValue !== undefined &&\r\n\t\t\tthis.varValue !== false &&\r\n\t\t\t!jslet.isArray(this.varValue)) {\r\n\t\t\t//[{0}: {1}] must be an Array!\r\n\t\t\tthrow new Error(jslet.formatMessage(jsletlocale.Checker.requiredArrayValue, [this.varName, this.varValue]));\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Check whether the testing variable is Object.\r\n\t * \r\n\t *     @example\r\n\t *     var x = 123;\r\n\t *     jslet.Checker.test('x', x).isObject(); //error thrown\r\n\t *     x = [123];\r\n\t *     jslet.Checker.test('x', x).isObject(); //no error thrown\r\n\t *     \r\n\t * @return {this}\r\n\t */\r\n\tisObject: function() {\r\n\t\tif(this.varValue !== null && \r\n\t\t\tthis.varValue !== undefined &&\r\n\t\t\tthis.varValue !== false &&\r\n\t\t\tjQuery.type(this.varValue) !== \"object\") {\r\n\t\t\t//[{0}: {1}] must be an Object!\r\n\t\t\tthrow new Error(jslet.formatMessage(jsletlocale.Checker.requiredObjectValue, [this.varName, this.varValue]));\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Check whether the testing variable is Plan Object.\r\n\t * \r\n\t *     @example\r\n\t *     var x = 123;\r\n\t *     jslet.Checker.test('x', x).isPlanObject(); //error thrown\r\n\t *     x = {x: 123};\r\n\t *     jslet.Checker.test('x', x).isPlanObject(); //no error thrown\r\n\t *     \r\n\t * @return {this}\r\n\t */\r\n\tisPlanObject: function() {\r\n\t\tif(this.varValue !== null && \r\n\t\t\t\tthis.varValue !== undefined &&\r\n\t\t\t\tthis.varValue !== false &&\r\n\t\t\t\t!jQuery.isPlainObject(this.varValue)) {\r\n\t\t\t//[{0}: {1}] must be a plan Object!\r\n\t\t\tthrow new Error(jslet.formatMessage(jsletlocale.Checker.requiredPlanObjectValue, [this.varName, this.varValue]));\r\n\t\t}\r\n\t\treturn this;\r\n\t\t\t\t\r\n\t},\r\n\t\r\n\t/**\r\n\t * Check whether the testing variable is HTML element.\r\n\t * \r\n\t *     @example\r\n\t *     var x = window;\r\n\t *     jslet.Checker.test('x', x).isHTMLElement(); //error thrown\r\n\t *     x = document.body;\r\n\t *     jslet.Checker.test('x', x).isHTMLElement(); //no error thrown\r\n\t *     \r\n\t * @return {this}\r\n\t */\r\n\tisHTMLElement: function() {\r\n\t\tif(this.varValue !== null && \r\n\t\t\tthis.varValue !== undefined &&\r\n\t\t\t!jslet.isHTMLElement(this.varValue)) {\r\n\t\t\t//[{0}: {1}] must be an Object!\r\n\t\t\tthrow new Error(jslet.formatMessage(jsletlocale.Checker.requiredHtmlElement, [this.varName, this.varValue]));\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Check whether the testing variable is Function.\r\n\t * \r\n\t *     @example\r\n\t *     var x = 123;\r\n\t *     jslet.Checker.test('x', x).isFunction(); //error thrown\r\n\t *     x = function() {};\r\n\t *     jslet.Checker.test('x', x).isFunction(); //no error thrown\r\n\t *     \r\n\t * @return {this}\r\n\t */\r\n\tisFunction: function() {\r\n\t\tif(this.varValue !== null && \r\n\t\t\tthis.varValue !== undefined &&\r\n\t\t\tthis.varValue !== false &&\r\n\t\t\t!jslet.isFunction(this.varValue)) {\r\n\t\t\t//[{0}: {1}] must be a Function!\r\n\t\t\tthrow new Error(jslet.formatMessage(jsletlocale.Checker.requiredFunctionValue, [this.varName, this.varValue]));\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Check whether the testing variable is the specified Class.<br />\r\n\t * This method is used internally to check jslet class.\r\n\t * \r\n\t *     @example\r\n\t *     var x = 123;\r\n\t *     jslet.Checker.test('x', x).isClass('jslet.data.Dataset'); //error thrown\r\n\t *     x = new jslet.data.Dataset({name: 'test', fields: []});\r\n\t *     jslet.Checker.test('x', x).isClass('jslet.data.Dataset'); //no error thrown\r\n\t *     \r\n\t * @param {String} className Specified class name.\r\n\t *     \r\n\t * @return {this}\r\n\t */\r\n\tisClass: function(className) {\r\n\t\tthis.isObject();\r\n\t\tif(this.varValue !== null && \r\n\t\t\tthis.varValue !== undefined &&\r\n\t\t\tthis.varValue !== false &&\r\n\t\t\tthis.varValue.className != className) {\r\n\t\t\t//[{0}: {1}] must be instance of [{2}]!\r\n\t\t\tthrow new Error(jslet.formatMessage(jsletlocale.Checker.instanceOfClass, [this.varName, this.varValue, className]));\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Check whether the testing variable is specified type.<br />\r\n\t * This method is used internally to check jslet class.\r\n\t * \r\n\t *     @example\r\n\t *     var x = 123;\r\n\t *     jslet.Checker.test('x', x).isDataType('S'); //error thrown\r\n\t *     jslet.Checker.test('x', x).isDataType('N'); //no error thrown\r\n\t *     x = new Date();\r\n\t *     jslet.Checker.test('x', x).isDataType('D'); //no error thrown\r\n\t *     \r\n\t * @param {String} dataType The optional value: 'S', 'D', 'N'.\r\n\t *     \r\n\t * @return {this}\r\n\t */\r\n\tisDataType: function(dataType) {\r\n\t\tif(dataType == 'S') {\r\n\t\t\tthis.isString();\r\n\t\t}\r\n\t\tif(dataType == 'N') {\r\n\t\t\tthis.isNumber();\r\n\t\t}\r\n\t\tif(dataType == 'D') {\r\n\t\t\tthis.isDate();\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Check whether the testing variable is in the specified array.<br />\r\n\t * \r\n\t *     @example\r\n\t *     var x = 123;\r\n\t *     jslet.Checker.test('x', x).inArray([1,2,3]); //error thrown\r\n\t *     x = 2;\r\n\t *     jslet.Checker.test('x', x).inArray([1,2,3]); //no error thrown\r\n\t *     \r\n\t * @param {String} arryList An array.\r\n\t *     \r\n\t * @return {this}\r\n\t */\r\n\tinArray: function(arrlist) {\r\n\t\tif(this.varValue !== null && \r\n\t\t\tthis.varValue !== undefined &&\r\n\t\t\tthis.varValue !== false &&\r\n\t\t\tarrlist.indexOf(this.varValue) < 0) {\r\n\t\t\t//[{0}: {1}] must be one of [{2}]!\r\n\t\t\tthrow new Error(jslet.formatMessage(jsletlocale.Checker.inArray, [this.varName, this.varValue, arrlist.join(',')]));\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n};\r\n\r\njslet.JSON = {\r\n\tnormalize: function (json) {\r\n\t\t//json = jQuery.trim(json);\r\n\t\tvar result = [], c, next, isKey = false, isArray = false, isObj = true, last = '', quoteChar = null, append = false;\r\n\t\tc = json.charAt(0);\r\n\t\tif(c != '{' && c != '[') {\r\n\t\t\tresult.push('{\"');\r\n\t\t\tappend = true;\r\n\t\t}\t\t\r\n\t\tfor(var i = 0, len = json.length; i< len; i++) {\r\n\t\t\tc = json.charAt(i);\r\n\t\t\t\r\n\t\t\tif(quoteChar) {//Not process any char in a String value. \r\n\t\t\t\tif(c == quoteChar) {\r\n\t\t\t\t\tquoteChar = null;\r\n\t\t\t\t\tresult.push('\"');\r\n\t\t\t\t\tlast = '\"';\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.push(c);\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif(c == '[') {\r\n\t\t\t\tisArray = true;\r\n\t\t\t\tisObj = false;\r\n\t\t\t}\r\n\t\t\tif(c == ']' || c == '{') {\r\n\t\t\t\tisArray = false;\r\n\t\t\t\tisObj = true;\r\n\t\t\t}\r\n\t\t\tif(isKey && (c == ' ' || c == '\\b')) {//Trim blank char in a key.\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif(isObj && (c == '{' || c == ',')) {\r\n\t\t\t\tisKey = true;\r\n\t\t\t\tresult.push(c);\r\n\t\t\t\tlast = c;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif(last == '{' || last == ',') {\r\n\t\t\t\tresult.push('\"');\r\n\t\t\t}\r\n\t\t\tif(isKey && c == \"'\") {\r\n\t\t\t\tresult.push('\"');\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif(c == ':') {\r\n\t\t\t\tisKey = false;\r\n\t\t\t\tif(last != '\"') {\r\n\t\t\t\t\tresult.push('\"');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(!isKey) {\r\n\t\t\t\tif(c == \"'\" || c == '\"') {\r\n\t\t\t\t\tquoteChar = c;\r\n\t\t\t\t\tresult.push('\"');\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlast = c;\r\n\t\t\tresult.push(c);\r\n\t\t}\r\n\t\tif(append) {\r\n\t\t\tresult.push('}');\r\n\t\t}\r\n\t\treturn result.join('');\r\n\t},\r\n\t\r\n\tparse: function(json) {\r\n\t\ttry {\r\n//\t\t\treturn JSON.parse(this.normalize(json));//has bug\r\n\t\t\treturn JSON.parse(json);\r\n\t\t} catch(e) {\r\n\t\t\tthrow new Error(jslet.formatMessage(jsletlocale.Common.jsonParseError, [json]));\r\n\t\t}\r\n\t},\r\n\t\r\n\tstringify: function(value, replacer, space) {\r\n\t\treturn JSON.stringify(value, replacer, space);\r\n\t}\r\n\r\n};\r\n\r\n/**\r\n * Get specified function with function object or function name.\r\n * \r\n * @member jslet\r\n * \r\n * @param {String | Function} funcOrFuncName If its value is function name, find this function in specified context.\r\n * @param {Object} context The context which looking for function in, default is window.\r\n * \r\n * @return {Function}\r\n */\r\njslet.getFunction = function(funcOrFuncName, context) {\r\n\tif(!funcOrFuncName) {\r\n\t\treturn null;\r\n\t}\r\n\tif(jslet.isFunction(funcOrFuncName)) {\r\n\t\treturn funcOrFuncName;\r\n\t}\r\n\tif(!context) {\r\n\t\tcontext = window;\r\n\t}\r\n\t\r\n\tvar result = context[funcOrFuncName];\r\n\tif(!result) {\r\n\t\tconsole.warn('NOT found function:' + funcOrFuncName);\r\n\t}\r\n\treturn result;\r\n};\r\n\r\n/**\r\n * Cut the specified string and return the remaining string.\r\n * \r\n *     @example\r\n *     cutString('abcd','c'); //return 'abd'\r\n * \r\n * @member jslet\r\n * \r\n * @param {String} wholeStr Whole string.\r\n * @param {String} cuttingStr Cutting string.\r\n * \r\n * @return {String} Remaining string.\r\n */\r\njslet.cutString = function(wholeStr, cuttingStr) {\r\n\tif(!wholeStr || !cuttingStr) {\r\n\t\treturn wholeStr;\r\n\t}\r\n\tvar reg = new RegExp(cuttingStr,\"g\");\r\n\treturn wholeStr.replace(reg, '');\r\n};\r\n\r\n\r\n/**\r\n * Get year value from a date object.\r\n * \r\n *     @example\r\n *     jslet.getYear(new Date(2015,9,10); //return 2015\r\n * \r\n * @member jslet\r\n * \r\n * @param {Date} dateValue Date object.\r\n * \r\n * @return {Integer} Year of date.\r\n */\r\njslet.getYear = function(dateValue) {\r\n\tif(!dateValue || !jslet.isDate(dateValue)) {\r\n\t\treturn 0;\r\n\t}\r\n\treturn dateValue.getFullYear();\r\n};\r\n\r\n/**\r\n * Get year value from a date object.\r\n * \r\n *     @example\r\n *     jslet.getMonth(new Date(2015,9,10); //return 10\r\n *     \r\n * @member jslet\r\n * \r\n * @param {Date} dateValue Date object.\r\n * \r\n * @return {Integer} Month of date.\r\n */\r\njslet.getMonth = function(dateValue) {\r\n\tif(!dateValue || !jslet.isDate(dateValue)) {\r\n\t\treturn 0;\r\n\t}\r\n\treturn dateValue.getMonth() + 1;\r\n};\r\n\r\n/**\r\n * Get year and month value from a date object.\r\n * \r\n *     @example\r\n *     jslet.getYearMonth(new Date(2015,9,10); //return 201010\r\n *     \r\n * @member jslet\r\n * \r\n * @param {Date} dateValue Date object.\r\n * \r\n * @return {Integer} Year and month of date.\r\n */\r\njslet.getYearMonth = function(dateValue) {\r\n\tif(!dateValue || !jslet.isDate(dateValue)) {\r\n\t\treturn 0;\r\n\t}\r\n\treturn dateValue.getFullYear() * 100 + dateValue.getMonth() + 1;\r\n};\r\n\r\njslet.removeHtmlTag = function(str) {\r\n\tif(!str) {\r\n\t\treturn str;\r\n\t}\r\n\tif(str.indexOf('<') < 0) {\r\n\t\treturn str;\r\n\t} else {\r\n\t\treturn str.replace(/<(?:.|\\s)*?>/g, '')\r\n\t}\r\n};\r\n\r\n/**\r\n* Show error message.\r\n* \r\n* @member jslet\r\n* \r\n* @param {Error | String} e - Error object or error message\r\n* @param {Function} callBackFn - Call back function, pattern: function() {}.\r\n*/\r\njslet.showError = function (e, callBackFn) {\r\n\tvar msg;\r\n\tif (typeof (e) == 'string') {\r\n\t\tmsg = e;\r\n\t} else {\r\n\t\tmsg = e.message;\r\n\t}\r\n\tif (jslet.ui && jslet.ui.error) {\r\n\t\tjslet.ui.error(msg, null, callBackFn);\r\n\t} else {\r\n\t\twindow.alert(msg);\r\n\t}\r\n};\r\n\r\n/**\r\n* Show info message.\r\n* \r\n* @member jslet\r\n* \r\n* @param {Error | String} e - Error object or error message.\r\n* @param {Function} callBackFn - Call back function, pattern: function() {}.\r\n* @param {Integer} timeout - Timeout for close this dialog. \r\n*/\r\njslet.showInfo = function (e, callBackFn, timeout) {\r\n\tvar msg;\r\n\tif (typeof (e) == 'string') {\r\n\t\tmsg = e;\r\n\t} else {\r\n\t\tmsg = e.message;\r\n\t}\r\n\tif (jslet.ui && jslet.ui.info) {\r\n\t\tjslet.ui.info(msg, null, callBackFn, timeout);\r\n\t} else {\r\n\t\twindow.alert(msg);\r\n\t}\r\n};\r\n\r\njslet.urlUtil = {\r\n\tgetDomain: function(url) {\r\n\t\treturn url.replace(/([^:]+:\\/\\/[^\\/]+).*/, \"$1\");\r\n\t},\r\n\t\r\n\taddParam: function(url, param) {\r\n\t\tjslet.Checker.test('addParam#url', url).required().isString();\r\n\t\tif(!param) {\r\n\t\t\treturn url;\r\n\t\t}\r\n\t\tjslet.Checker.test('addParam#param', param).isPlanObject();\r\n\t\tvar url1 = '';\r\n\t\tvar k = url.indexOf('#');\r\n\t\tif(k >= 0) {\r\n\t\t\turl1 = url.substring(k);\r\n\t\t\turl = url.substring(0, k);\r\n\t\t}\r\n\t\tvar paramObj = jslet.urlUtil.getParams(url) || {};\r\n\t\tfor(var name in param) {\r\n\t\t\tparamObj[name] = escape((param[name] + '').trim());\r\n\t\t}\r\n\t\tvar paramStr = '';\r\n\t\tk = 0;\r\n\t\tfor(name in paramObj) {\r\n\t\t\tparamStr += (k++? '&': '') + name + '=' + paramObj[name];\r\n\t\t}\r\n\t\tk = url.indexOf('?');\r\n\t\tif(k >= 0) {\r\n\t\t\turl = url.substring(0, k);\r\n\t\t}\r\n\t\turl += '?' + paramStr + url1;\r\n\t\treturn url;\r\n\t},\r\n\r\n\taddHash: function(url, hash) {\r\n\t\tjslet.Checker.test('addUrlParam#url', url).required().isString();\r\n\t\tif(!hash) {\r\n\t\t\treturn url;\r\n\t\t}\r\n\t\tvar k = url.indexOf('#');\r\n\t\turl = url + (k >= 0?'':'#') + hash;\r\n\t\treturn url;\r\n\t},\r\n\t\r\n\tgetParams: function(url) {\r\n\t\tjslet.Checker.test('getParams#url', url).required().isString();\r\n    \tintPos = url.indexOf(\"?\");\r\n    \tif(intPos < 0) {\r\n    \t\treturn null;\r\n    \t}\r\n    \tvar url = url.substr(intPos + 1);\r\n    \tvar intPos = url.indexOf('#');\r\n    \tif(intPos >= 0) {\r\n    \t\turl = url.substring(0, intPos);\r\n    \t}\r\n    \t\r\n    \tvar arrTmp = url.split(\"&\");\r\n    \tvar result = {};\r\n    \tfor(var i = 0; i < arrTmp.length; i++){\r\n    \t\tvar arrParam = arrTmp[i].split(\"=\");\r\n    \t\tresult[arrParam[0]] = arrParam[1];\r\n    \t}\r\n    \treturn result;\r\n\t},\r\n\t\r\n\tgetParam: function(url, paramName) {\r\n\t\tjslet.Checker.test('getParam#paramName', paramName).required().isString();\r\n\t\tvar params = this.getParams(url);\r\n\t\tif(params) {\r\n\t\t\treturn params[paramName];\r\n\t\t}\r\n\t\treturn null\r\n\t},\r\n\t\r\n\tgetHash: function(url) {\r\n\t\tjslet.Checker.test('getHash#url', url).required().isString();\r\n    \tvar intPos = url.indexOf('#');\r\n    \tif(intPos < 0) {\r\n    \t\treturn null;\r\n    \t}\r\n    \tvar hash = url.substring(intPos + 1);\r\n    \tintPos = hash.indexOf(\"?\");\r\n    \tif(intPos >= 0) {\r\n    \t\thash = hash.substring(0, intPos);\r\n    \t}\r\n    \t\r\n    \treturn hash;\r\n\t}\r\n};\r\n\r\n/**\r\n * @class\r\n * \r\n * This class is used to split a long loop into ten short loops in order to refresh UI between two loops.\r\n * It's normally used for updating ProcessBar value. Example:\r\n * \r\n *     @example\r\n *     var list = [1, 2, 3, .....];\r\n *     function doLoop(start, end, percent) {\r\n *         for(var i = start; i <= end; i++) {\r\n *             //process biz logic\r\n *         }\r\n *         jslet('processBar').value(percent);\r\n *     }\r\n *     \r\n *     new jslet.StepProcessor(list.length, doLoop).run();\r\n * \r\n * @param {Integer} count The long loop count.\r\n * @param {Function} processingFn The processing function.\r\n * @param {Integer} processingFn.start The start position of the long loop.\r\n * @param {Integer} processingFn.end The end position of the long loop.\r\n * @param {Integer} processingFn.percent The processing percent of the loop.\r\n * @param {Integer} unit The unit of percent, like 5, 10, 20, it can't be greater than 100. \r\n * \r\n */\r\njslet.StepProcessor = function(count, processingFn, stepCount) {\r\n\tjslet.Checker.test('jslet.StepProcessor#count', count).isGTZero();\r\n\tjslet.Checker.test('jslet.StepProcessor#processingFn', processingFn).isFunction();\r\n\tjslet.Checker.test('jslet.StepProcessor#steps', stepCount).isNumber().between(1, 100);\r\n\tvar count = count;\r\n\tvar steps = [];\r\n\tvar index = 0;\r\n\tif(!stepCount) {\r\n\t\tstepCount = 10;\r\n\t}\r\n\tif(count <= stepCount) {\r\n\t\tsteps.push([0, count - 1, 100]);\r\n\t} else {\r\n\t\tvar k = Math.ceil(count / stepCount), start, end, percent;\r\n\t\tvar len = Math.ceil(count / k);\r\n\t\tvar lastIdx = len - 1;\r\n\t\tvar m = parseInt(100 / stepCount);\r\n\t\tfor(var i = 0; i <= lastIdx; i++) {\r\n\t\t\tstart = i * k;\r\n\t\t\tend = (i + 1) * k - 1;\r\n\t\t\tif(end >= count) {\r\n\t\t\t\tend = count - 1;\r\n\t\t\t}\r\n\t\t\tpercent = i < lastIdx? (i + 1) * m: 100;\r\n\t\t\tsteps.push([start, end, percent]);\r\n\t\t}\r\n\t}\r\n\tvar nextStep = function() {\r\n        var step = steps[index++];\r\n        var result = processingFn(step[0], step[1], step[2]);\r\n        if(result === false) {\r\n        \treturn;\r\n        }\r\n        \r\n        if (index != steps.length) {\r\n            var me = this;\r\n            window.setTimeout(function(){\r\n                nextStep();\r\n            }, 2);\r\n        }    \t\r\n    }\r\n\t\r\n\t/**\r\n\t * @method run\r\n\t * \r\n\t * Run the step processor.\r\n\t */\r\n\tthis.run = function() {\r\n\t\tindex = 0;\r\n\t\tnextStep();\r\n\t} \r\n};\r\n\r\n\r\n/**\r\n * @class\r\n * \r\n * Sync some async tasks. Example:\r\n * \r\n *     @example\r\n *     function doneFn() {\r\n *     \t\tconsole.log('All tasks are ended.');\r\n *     }\r\n *     \r\n *     var sync = new jslet.Synchronizer(2, doneFn)\r\n *     \r\n *     ds1.query().done(function() {\r\n *     \t\tsync.endTask();\r\n *     });\r\n *     ds2.query().done(function() {\r\n *     \t\tsync.endTask();\r\n *     });\r\n *     \r\n * \r\n * @param {Integer} taskCount Task count.\r\n * @param {Function} doneFn Done function when all async tasks have run.\r\n */\r\njslet.Synchronizer = function(taskCount, doneFn) {\r\n\tvar isValid = false;\r\n\tjslet.Checker.test('Synchronizer#taskCount', taskCount).required().isGTEZero();\r\n\tjslet.Checker.test('Synchronizer#doneFn', doneFn).required().isFunction();\r\n\tthis._taskCount = taskCount;\r\n\tthis._doneFn = doneFn;\r\n};\r\n\r\njslet.Synchronizer.prototype = {\r\n\t/**\r\n\t * End task. Call this method in each async task.\r\n\t */\r\n\tendTask: function() {\r\n\t\tthis._taskCount--;\r\n\t\tif(this._taskCount === 0) {\r\n\t\t\tthis._doneFn();\r\n\t\t}\r\n\t},\r\n}\n/**\r\n * @class\r\n * @private\r\n * \r\n * Dataset context rule.\r\n */\r\njslet.data.ContextRule = function(contextRuleCfg) {\r\n\tvar Z = this;\r\n\tZ._name = '';\r\n\tZ._description = '';\r\n\tZ._status = undefined;\r\n\tZ._selected = undefined;\r\n\tZ._condition = undefined;\r\n\tZ._rules = null;\r\n\tZ._otherwise = null;\r\n\tZ._create(contextRuleCfg);\r\n};\r\n\r\njslet.data.ContextRule.className = 'jslet.data.ContextRule';\r\n\r\njslet.data.ContextRule.prototype = {\r\n\tclassName: jslet.data.ContextRule.className,\r\n\t\r\n\tdataStatus: ['insert', 'update', 'other'],\r\n\t\r\n\t_create: function(cxtRuleCfg) {\r\n\t\tjslet.Checker.test('ContextRule.contextRuleConfig', cxtRuleCfg).required().isPlanObject();\r\n\t\tvar Z = this;\r\n\t\tif(cxtRuleCfg.status !== undefined) {\r\n\t\t\tZ.status(cxtRuleCfg.status);\r\n\t\t}\r\n\t\tif(cxtRuleCfg.selected !== undefined) {\r\n\t\t\tZ.selected(cxtRuleCfg.selected);\r\n\t\t} \r\n\t\tif(cxtRuleCfg.condition !== undefined) {\r\n\t\t\tZ.condition(cxtRuleCfg.condition);\r\n\t\t}\r\n\t\tvar rulesCfg = cxtRuleCfg.rules, i, len, rules;\r\n\t\tif(rulesCfg !== undefined) {\r\n\t\t\tjslet.Checker.test('ContextRule.rules', rulesCfg).isArray();\r\n\t\t\trules = [];\r\n\t\t\tZ.rules(rules);\r\n\t\t\tfor(i = 0, len = rulesCfg.length; i < len; i++) {\r\n\t\t\t\trules.push(createContextRuleItem(rulesCfg[i]));\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tvar otherwiseCfg = cxtRuleCfg.otherwise;\r\n\t\tif(otherwiseCfg !== undefined) {\r\n\t\t\tjslet.Checker.test('ContextRule.otherwise', otherwiseCfg).isArray();\r\n\t\t\trules = [];\r\n\t\t\tZ.otherwise(rules);\r\n\t\t\tfor(i = 0, len = otherwiseCfg.length; i < len; i++) {\r\n\t\t\t\trules.push(createContextRuleItem(otherwiseCfg[i]));\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tfunction createContextRuleItem(itemCfg) {\r\n\t\t\tvar item = new jslet.data.ContextRuleItem(itemCfg.field);\r\n\t\t\tif(itemCfg.meta !== undefined) {\r\n\t\t\t\titem.meta(createContextRuleMeta(itemCfg.meta));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(itemCfg.value !== undefined) {\r\n\t\t\t\titem.value(itemCfg.value);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(itemCfg.lookup !== undefined) {\r\n\t\t\t\titem.lookup(createContextRuleLookup(itemCfg.lookup));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(itemCfg.customized !== undefined) {\r\n\t\t\t\titem.customized(itemCfg.customized);\r\n\t\t\t}\r\n\t\t\treturn item;\r\n\t\t}\r\n\t\t\r\n\t\tfunction createContextRuleMeta(metaCfg) {\r\n\t\t\tvar meta = new jslet.data.ContextRuleMeta();\r\n\t\t\tif(metaCfg.label !== undefined) {\r\n\t\t\t\tmeta.label(metaCfg.label);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(metaCfg.tip !== undefined) {\r\n\t\t\t\tmeta.tip(metaCfg.tip);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(metaCfg.nullText !== undefined) {\r\n\t\t\t\tmeta.nullText(metaCfg.nullText);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(metaCfg.required !== undefined) {\r\n\t\t\t\tmeta.required(metaCfg.required);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(metaCfg.disabled !== undefined) {\r\n\t\t\t\tmeta.disabled(metaCfg.disabled);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(metaCfg.readOnly !== undefined) {\r\n\t\t\t\tmeta.readOnly(metaCfg.readOnly);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(metaCfg.visible !== undefined) {\r\n\t\t\t\tmeta.visible(metaCfg.visible);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(metaCfg.formula !== undefined) {\r\n\t\t\t\tmeta.formula(metaCfg.formula);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(metaCfg.scale !== undefined) {\r\n\t\t\t\tmeta.scale(metaCfg.scale);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(metaCfg.required !== undefined) {\r\n\t\t\t\tmeta.required(metaCfg.required);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(metaCfg.displayFormat !== undefined) {\r\n\t\t\t\tmeta.displayFormat(metaCfg.displayFormat);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(metaCfg.editMask !== undefined) {\r\n\t\t\t\tmeta.editMask(metaCfg.editMask);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(metaCfg.editControl !== undefined) {\r\n\t\t\t\tmeta.editControl(metaCfg.editControl);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(metaCfg.range !== undefined) {\r\n\t\t\t\tmeta.range(metaCfg.range);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(metaCfg.regularExpr !== undefined) {\r\n\t\t\t\tmeta.regularExpr(metaCfg.regularExpr);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(metaCfg.valueCountLimit !== undefined) {\r\n\t\t\t\tmeta.valueCountLimit(metaCfg.valueCountLimit);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(metaCfg.validChars !== undefined) {\r\n\t\t\t\tmeta.validChars(metaCfg.validChars);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(metaCfg.customValidator !== undefined) {\r\n\t\t\t\tmeta.customValidator(metaCfg.customValidator);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn meta;\r\n\t\t}\r\n\r\n\t\tfunction createContextRuleLookup(lookupCfg) {\r\n\t\t\tvar lookup = new jslet.data.ContextRuleLookup();\r\n\t\t\tif(lookupCfg.dataset !== undefined) {\r\n\t\t\t\tlookup.dataset(lookupCfg.dataset);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(lookupCfg.filter !== undefined) {\r\n\t\t\t\tlookup.filter(lookupCfg.filter);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(lookupCfg.fixedFilter !== undefined) {\r\n\t\t\t\tlookup.fixedFilter(lookupCfg.fixedFilter);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(lookupCfg.criteria !== undefined) {\r\n\t\t\t\tlookup.criteria(lookupCfg.criteria);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(lookupCfg.displayFields !== undefined) {\r\n\t\t\t\tlookup.displayFields(lookupCfg.displayFields);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(lookupCfg.onlyLeafLevel !== undefined) {\r\n\t\t\t\tlookup.onlyLeafLevel(lookupCfg.onlyLeafLevel);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn lookup;\r\n\t\t}\r\n\t},\r\n\t\r\n\tname: function(name) {\r\n\t\tif(name === undefined) {\r\n\t\t\treturn this._name;\r\n\t\t}\r\n\t\t\r\n\t\tjslet.Checker.test('ContextRule.name', name).isString();\r\n\t\tthis._name = jQuery.trim(name);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tstatus: function(status) {\r\n\t\tif(status === undefined) {\r\n\t\t\treturn this._status;\r\n\t\t}\r\n\t\t\r\n\t\tjslet.Checker.test('ContextRule.status', status).isArray();\r\n\t\tif(status) {\r\n\t\t\tvar item, checker;\r\n\t\t\tfor(var i = 0, len = status.length; i < len; i++) {\r\n\t\t\t\titem = jQuery.trim(status[i]);\r\n\t\t\t\tchecker = jslet.Checker.test('ContextRule.status' + i, item).isString().required();\r\n\t\t\t\titem = item.toLowerCase();\r\n\t\t\t\tchecker.testValue(item).inArray(this.dataStatus);\r\n\t\t\t\tstatus[i] = item;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._status = status;\r\n\t\treturn this;\r\n\t},\r\n\r\n\tselected: function(selected) {\r\n\t\tif(selected === undefined) {\r\n\t\t\treturn this._selected;\r\n\t\t}\r\n\t\t\r\n\t\tthis._selected = selected? true: false;\r\n\t},\r\n\t\r\n\tcondition: function(condition) {\r\n\t\tif(condition === undefined) {\r\n\t\t\treturn this._condition;\r\n\t\t}\r\n\t\t\r\n\t\tjslet.Checker.test('ContextRule.condition', condition).isString();\r\n\t\tthis._condition = jQuery.trim(condition);\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\trules: function(rules) {\r\n\t\tif(rules === undefined) {\r\n\t\t\treturn this._rules;\r\n\t\t}\r\n\r\n\t\tjslet.Checker.test('ContextRule.rules', rules).isArray();\r\n\t\tthis._rules = rules;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\totherwise: function(otherwise) {\r\n\t\tif(otherwise === undefined) {\r\n\t\t\treturn this._otherwise;\r\n\t\t}\r\n\r\n\t\tjslet.Checker.test('ContextRule.otherwise', otherwise).isArray();\r\n\t\tthis._otherwise = otherwise;\r\n\t\treturn this;\r\n\t}\r\n\r\n};\r\n\r\njslet.data.ContextRuleItem = function(fldName) {\r\n\tvar Z = this;\r\n\tjslet.Checker.test('ContextRule.field', fldName).isString();\r\n\tfldName = jQuery.trim(fldName);\r\n\tjslet.Checker.test('ContextRule.field', fldName).required();\r\n\tZ._field = fldName;\r\n\t\r\n\tZ._meta = undefined;\r\n\tZ._value = undefined;\r\n\tZ._lookup = undefined;\r\n\tZ._customized = undefined;\r\n};\r\n\r\njslet.data.ContextRuleItem.className = 'jslet.data.ContextRuleItem';\r\n\r\njslet.data.ContextRuleItem.prototype = {\r\n\tclassName: jslet.data.ContextRuleItem.className,\r\n\t\r\n\tfield: function() {\r\n\t\treturn this._field;\r\n\t},\r\n\t\r\n\tmeta: function(meta) {\r\n\t\tif(meta === undefined) {\r\n\t\t\treturn this._meta;\r\n\t\t}\r\n\t\t\r\n\t\tjslet.Checker.test('ContextRuleItem.meta', meta).isClass(jslet.data.ContextRuleMeta.className);\r\n\t\tthis._meta = meta;\r\n\t\treturn this;\r\n\t},\r\n\r\n\tlookup: function(lookup) {\r\n\t\tif(lookup === undefined) {\r\n\t\t\treturn this._lookup;\r\n\t\t}\r\n\t\t\r\n\t\tjslet.Checker.test('ContextRuleItem.lookup', lookup).isClass(jslet.data.ContextRuleLookup.className);\r\n\t\tthis._lookup = lookup;\r\n\t\treturn this;\r\n\t},\r\n\r\n\tvalue: function(value) {\r\n\t\tif(value === undefined) {\r\n\t\t\treturn this._value;\r\n\t\t}\r\n\t\t\r\n\t\tthis._value = value;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\tcustomized: function(customizedFn) {\r\n\t\tif(customizedFn === undefined) {\r\n\t\t\treturn this._customized;\r\n\t\t}\r\n\t\tjslet.Checker.test('ContextRuleItem.customized', customizedFn).isFunction();\r\n\t\tthis._customized = customizedFn;\r\n\t\treturn this;\r\n\t}\r\n};\r\n\r\njslet.data.ContextRuleMeta = function() {\r\n\tvar Z = this;\r\n\tZ._label = undefined;\r\n\tZ._tip = undefined;\r\n\tZ._nullText = undefined;\r\n\t\r\n\tZ._required = undefined;\r\n\tZ._disabled = undefined;\r\n\tZ._readOnly = undefined;\r\n\tZ._visible = undefined;\r\n\tZ._formula = undefined;\r\n\tZ._scale = undefined;\r\n\tZ._defaultValue = undefined;\r\n\tZ._displayFormat = undefined;\r\n\tZ._editMask = undefined;\r\n\tZ._editControl = undefined;\r\n\t\r\n\tZ._range = undefined;\r\n\tZ._regularExpr = undefined;\r\n\tZ._valueCountLimit = undefined;\r\n\tZ._validChars = undefined;\r\n\tZ._customValidator = undefined;\r\n};\r\n\r\njslet.data.ContextRuleMeta.className = 'jslet.data.ContextRuleMeta';\r\n\r\njslet.data.ContextRuleMeta.prototype = {\r\n\tclassName: jslet.data.ContextRuleMeta.className,\r\n\t\r\n\tproperties: ['label', 'tip','nullText', 'required','disabled','readOnly','visible',\r\n\t             'formula','scale','defaultValue','displayFormat','editMask','editControl',\r\n\t             'range','regularExpr','valueCountLimit','validChars','customValidator'],\r\n\t/**\r\n\t * Set or get field label.\r\n\t * \r\n\t * @param {String | undefined} label Field label.\r\n\t * @return {this | String}\r\n\t */\r\n\tlabel: function (label) {\r\n\t\tif (label === undefined) {\r\n\t\t\treturn this._label;\r\n\t\t}\r\n\t\tjslet.Checker.test('ContextRuleMeta.label', label).isString();\r\n\t\tthis._label = label;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Set or get field tip.\r\n\t * \r\n\t * @param {String | undefined} tip Field tip.\r\n\t * @return {this | String}\r\n\t */\r\n\ttip: function(tip) {\r\n\t\tif (tip === undefined) {\r\n\t\t\treturn this._tip;\r\n\t\t}\r\n\t\tjslet.Checker.test('ContextRuleMeta.tip', tip).isString();\r\n\t\tthis._tip = tip;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Set or get the display text if the field value is null.\r\n\t * \r\n\t * @param {String | undefined} nullText Field null text.\r\n\t * @return {this | String}\r\n\t */\r\n\tnullText: function (nullText) {\r\n\t\tif (nullText === undefined) {\r\n\t\t\treturn this._nullText;\r\n\t\t}\r\n\t\t\r\n\t\tjslet.Checker.test('ContextRuleMeta.nullText', nullText).isString();\r\n\t\tthis._nullText = jQuery.trim(nullText);\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Set or get flag required.\r\n\t * \r\n\t * @param {Boolean | undefined} required Field is required or not.\r\n\t * @return {this | Boolean}\r\n\t */\r\n\trequired: function (required) {\r\n\t\tvar Z = this;\r\n\t\tif (required === undefined) {\r\n\t\t\treturn Z._required;\r\n\t\t}\r\n\t\tZ._required = required ? true: false;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Set or get field is visible or not.\r\n\t * \r\n\t * @param {Boolean | undefined} visible Field is visible or not.\r\n\t * @return {this | Boolean}\r\n\t */\r\n\tvisible: function (visible) {\r\n\t\tvar Z = this;\r\n\t\tif (visible === undefined){\r\n\t\t\treturn Z._visible;\r\n\t\t}\r\n\t\tZ._visible = visible ? true: false;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Set or get field is disabled or not.\r\n\t * \r\n\t * @param {Boolean | undefined} disabled Field is disabled or not.\r\n\t * @return {this | Boolean}\r\n\t */\r\n\tdisabled: function (disabled) {\r\n\t\tvar Z = this;\r\n\t\tif (disabled === undefined) {\r\n\t\t\treturn Z._disabled;\r\n\t\t}\r\n\t\tZ._disabled = disabled ? true: false;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Set or get field is readOnly or not.\r\n\t * \r\n\t * @param {Boolean | undefined} readOnly Field is readOnly or not.\r\n\t * @return {this | Boolean}\r\n\t */\r\n\treadOnly: function (readOnly) {\r\n\t\tvar Z = this;\r\n\t\tif (readOnly === undefined){\r\n\t\t\treturn Z._readOnly;\r\n\t\t}\r\n\t\t\r\n\t\tZ._readOnly = readOnly? true: false;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Set or get field edit mask.\r\n\t * \r\n\t * @param {String | undefined} mask Field edit mask.\r\n\t * @return {this | String}\r\n\t */\r\n\teditMask: function (mask) {\r\n\t\tvar Z = this;\r\n\t\tif (mask === undefined) {\r\n\t\t\treturn Z._editMask;\r\n\t\t}\r\n\t\tZ._editMask = mask;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Set or get field decimal length.\r\n\t * \r\n\t * @param {Integer | undefined} scale Field decimal length.\r\n\t * @return {this | Integer}\r\n\t */\r\n\tscale: function (scale) {\r\n\t\tvar Z = this;\r\n\t\tif (scale === undefined) {\r\n\t\t\treturn Z._scale;\r\n\t\t}\r\n\t\tjslet.Checker.test('ContextRuleMeta.scale', scale).isNumber();\r\n\t\tZ._scale = parseInt(scale);\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Set or get field formula. Example: \r\n\t * \r\n\t *     contextRuleMetaObj.formula('[price]*[num]');\r\n\t * \r\n\t * @param {String | undefined} formula Field formula.\r\n\t * @return {this | String}\r\n\t */\r\n\tformula: function (formula) {\r\n\t\tvar Z = this;\r\n\t\tif (formula === undefined) {\r\n\t\t\treturn Z._formula;\r\n\t\t}\r\n\t\t\r\n\t\tjslet.Checker.test('ContextRuleMeta.formula', formula).isString();\r\n\t\tZ._formula = jQuery.trim(formula);\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Set or get field display format. <br />\r\n\t * For number field like: #,##0.00 <br />\r\n\t * For date field like: yyyy/MM/dd\r\n\t * \r\n\t * @param {String | undefined} format Field display format.\r\n\t * @return {this | String}\r\n\t */\r\n\tdisplayFormat: function (format) {\r\n\t\tvar Z = this;\r\n\t\tif (format === undefined) {\r\n\t\t\treturn Z._displayFormat;\r\n\t\t}\r\n\t\t\r\n\t\tjslet.Checker.test('ContextRuleMeta.format', format).isString();\r\n\t\tZ._displayFormat = jQuery.trim(format);\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Set or get field edit control. It is similar as DBControl configuration.\r\n\t * Here you need not set 'dataset' and 'field' property. Example:\r\n\t * \r\n\t *     var editCtrlCfg = {type:\"DBSpinEdit\",minValue:10,maxValue:100,step:5};\r\n\t *     contextRuleMetaObj.editControl(editCtrlCfg);\r\n\t * \r\n\t * @param {String | Object | undefined} editCtrl If String, it will convert to DBControl setting.\r\n\t * @return {this | Object}\r\n\t */\r\n\teditControl: function (editCtrl) {\r\n\t\tvar Z = this;\r\n\t\tif (editCtrl=== undefined){\r\n\t\t\treturn Z._editControl;\r\n\t\t}\r\n\r\n\t\tZ._editControl = (typeof (editCtrl) === 'string') ? { type: editCtrl } : editCtrl;\r\n\t},\r\n\r\n\t/**\r\n\t * Set or get field default value.\r\n\t * The data type of default value must be same as Field's.\r\n\t * Example:\r\n\t *   Number field: fldObj.defauleValue(100);\r\n\t *   Date field: fldObj.defaultValue(new Date());\r\n\t *   String field: fldObj.defaultValue('test');\r\n\t * \r\n\t * @param {Object | undefined} dftValue Field default value.\r\n\t * @return {this | Object}\r\n\t */\r\n\tdefaultValue: function (dftValue) {\r\n\t\tvar Z = this;\r\n\t\tif (dftValue === undefined) {\r\n\t\t\treturn Z._defaultValue;\r\n\t\t}\r\n\t\tZ._defaultValue = dftValue;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Set or get field rang.\r\n\t * Range is an object as: {min: x, max: y}. Example:\r\n\t * \r\n\t *     contextRuleMetaObj.range(range);\r\n\t * \r\n\t * @param {Object | undefined} range Field range;\r\n\t * @return {this | Object}\r\n\t */\r\n\trange: function (range) {\r\n\t\tvar Z = this;\r\n\t\tif (range === undefined) {\r\n\t\t\treturn Z._range;\r\n\t\t}\r\n\t\tif (jslet.isString(range)) {\r\n\t\t\t/* jshint ignore:start */\r\n\t\t\tZ._range = new Function('return ' + range);\r\n\t\t\t/* jshint ignore:end */\r\n\t\t} else {\r\n\t\t\tZ._range = range;\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Set or get regular expression.\r\n\t * You can specify your own validator with regular expression. If regular expression not specified, \r\n\t * The default regular expression for Date and Number field will be used. Example:\r\n\t * \r\n\t *     contextRuleMetaObj.regularExpr(/(\\(\\d{3,4}\\)|\\d{3,4}-|\\s)?\\d{8}/ig, 'Invalid phone number!');//like: 0755-12345678\r\n\t * \r\n\t * @param {Object | undefined} expr Regular expression, format: {expr: xxx, message: yyy};\r\n\t * @return {this | Object} An object like: { expr: expr, message: message }\r\n\t */\r\n\tregularExpr: function (regularExpr) {\r\n\t\tvar Z = this;\r\n\t\tif (regularExpr === undefined){\r\n\t\t\treturn Z._regularExpr;\r\n\t\t}\r\n\t\t\r\n\t\tif (jslet.isString(regularExpr)) {\r\n\t\t\t/* jshint ignore:start */\r\n\t\t\tZ._regularExpr = new Function('return ' + regularExpr);\r\n\t\t\t/* jshint ignore:end */\r\n\t\t} else {\r\n\t\t\tZ._regularExpr = regularExpr;\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Set or get allowed count when valueStyle is multiple.\r\n\t * \r\n\t * @param {String | undefined} count.\r\n\t * @return {this | String}\r\n\t */\r\n\tvalueCountLimit: function (count) {\r\n\t\tvar Z = this;\r\n\t\tif (count === undefined) {\r\n\t\t\treturn Z._valueCountLimit;\r\n\t\t}\r\n\t\tjslet.Checker.test('ContextRuleMeta.valueCountLimit', count).isNumber();\r\n\t\tZ._valueCountLimit = parseInt(count);\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Set or get customized validator.\r\n\t * \r\n\t * @param {Function} validator Validator function.\r\n\t * Pattern:\r\n\t *   function(fieldObj, fldValue){}\r\n\t *   //fieldObj: jslet.data.Field, Field object\r\n\t *   //fldValue: Object, Field value\r\n\t *   //return: String, if validate failed, return error message, otherwise return null; \r\n\t */\r\n\tcustomValidator: function (validator) {\r\n\t\tvar Z = this;\r\n\t\tif (validator === undefined) {\r\n\t\t\treturn Z._customValidator;\r\n\t\t}\r\n\t\tjslet.Checker.test('ContextRuleMeta.customValidator', validator).isFunction();\r\n\t\tZ._customValidator = validator;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Valid characters for this field.\r\n\t */\r\n\tvalidChars: function(chars){\r\n\t\tvar Z = this;\r\n\t\tif (chars === undefined){\r\n\t\t\treturn Z._validChars;\r\n\t\t}\r\n\t\t\r\n\t\tjslet.Checker.test('ContextRuleMeta.validChars', chars).isString();\r\n\t\tZ._validChars = jQuery.trim(chars);\r\n\t},\r\n\t\r\n};\r\n\r\njslet.data.ContextRuleLookup = function() {\r\n\tvar Z = this;\r\n\tZ._dataset = undefined;\r\n\tZ._filter = undefined;\r\n\tZ._fixedFilter = undefined;\r\n\tZ._criteria = undefined;\r\n\tZ._displayFields = undefined;\r\n\tZ._onlyLeafLevel = undefined;\r\n};\r\n\r\njslet.data.ContextRuleLookup.className = 'jslet.data.ContextRuleLookup';\r\n\r\njslet.data.ContextRuleLookup.prototype ={\r\n\tclassName: jslet.data.ContextRuleLookup.className,\r\n\t\r\n\tproperties: ['dataset', 'filter', 'fixedFilter', 'criteria', 'displayFields', 'onlyLeafLevel'],\r\n\t\r\n\tdataset: function(datasetName){\r\n\t\tvar Z = this;\r\n\t\tif (datasetName === undefined){\r\n\t\t\treturn Z._dataset;\r\n\t\t}\r\n\t\tjslet.Checker.test('ContextRuleLookup.dataset', datasetName).isString();\r\n\t\tZ._dataset = jQuery.trim(datasetName);\r\n\t},\r\n\r\n\tfilter: function(filter){\r\n\t\tvar Z = this;\r\n\t\tif (filter === undefined){\r\n\t\t\treturn Z._filter;\r\n\t\t}\r\n\t\tjslet.Checker.test('ContextRuleLookup.filter', filter).isString();\r\n\t\tZ._filter = jQuery.trim(filter);\r\n\t},\r\n\r\n\tfixedFilter: function(fixedFilter){\r\n\t\tvar Z = this;\r\n\t\tif (fixedFilter === undefined){\r\n\t\t\treturn Z._fixedFilter;\r\n\t\t}\r\n\t\tjslet.Checker.test('ContextRuleLookup.fixedFilter', fixedFilter).isString();\r\n\t\tZ._fixedFilter = jQuery.trim(fixedFilter);\r\n\t},\r\n\r\n\tcriteria: function(criteria){\r\n\t\tvar Z = this;\r\n\t\tif (criteria === undefined){\r\n\t\t\treturn Z._criteria;\r\n\t\t}\r\n\t\tjslet.Checker.test('ContextRuleLookup.criteria', criteria).isString();\r\n\t\tZ._criteria = jQuery.trim(criteria);\r\n\t},\r\n\r\n\tdisplayFields: function(displayFields){\r\n\t\tvar Z = this;\r\n\t\tif (displayFields === undefined){\r\n\t\t\treturn Z._displayFields;\r\n\t\t}\r\n\t\tjslet.Checker.test('ContextRuleLookup.displayFields', displayFields).isString();\r\n\t\tZ._displayFields = jQuery.trim(displayFields);\r\n\t},\r\n\r\n\tonlyLeafLevel: function(onlyLeafLevel){\r\n\t\tvar Z = this;\r\n\t\tif (onlyLeafLevel === undefined){\r\n\t\t\treturn Z._onlyLeafLevel;\r\n\t\t}\r\n\t\tZ._onlyLeafLevel = onlyLeafLevel ? true: false;\r\n\t}\r\n};\r\n\r\njslet.data.ContextRuleEngine = function(dataset) {\r\n\tthis._dataset = dataset;\r\n\tthis._matchedRules = [];\r\n\tthis._ruleEnv = {};\r\n};\r\n\r\njslet.data.ContextRuleEngine.prototype = {\r\n\r\n\tcompile: function() {\r\n\t\tvar contextRules = this._dataset.contextRules();\r\n\t\tfor(var i = 0, len = contextRules.length; i < len; i++) {\r\n\t\t\tthis._compileOneRule(contextRules[i]);\r\n\t\t}\r\n\t},\r\n\r\n\tevalRule: function(changingFldName){\r\n\t\tvar contextRules = this._dataset.contextRules();\r\n\t\tvar ruleObj;\r\n\t\tthis._matchedRules = [];\r\n\t\tthis._ruleEnv = {};\r\n\t\tfor(var i = 0, len = contextRules.length; i < len; i++) {\r\n\t\t\truleObj = contextRules[i];\r\n\t\t\tthis._evalOneRule(ruleObj, changingFldName);\r\n\t\t}\r\n\t\tthis._syncMatchedRules(changingFldName);\r\n\t},\r\n\t\r\n\t_compileOneRule: function(ruleObj) {\r\n\t\tvar condition = ruleObj.condition;\r\n\t\tthis._compileExpr(ruleObj, 'condition', true);\r\n\t\tvar rules = ruleObj.rules();\r\n\t\tfor(var i = 0, len = rules.length; i < len; i++) {\r\n\t\t\tthis._compileRuleItem(rules[i]);\r\n\t\t}\r\n\t},\r\n\t\r\n\t_compileRuleItem: function(ruleItem) {\r\n\t\tthis._compileExpr(ruleItem, 'value');\r\n\t\tvar metaObj = ruleItem.meta();\r\n\t\tvar props, propName, i, len;\r\n\t\tif(metaObj) {\r\n\t\t\tprops = metaObj.properties;\r\n\t\t\tlen = props.length;\r\n\t\t\tfor(i = 0; i < len; i++) {\r\n\t\t\t\tpropName = props[i];\r\n\t\t\t\tthis._compileExpr(metaObj, propName);\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar lookupObj = ruleItem.lookup();\r\n\t\tif(lookupObj) {\r\n\t\t\tprops = lookupObj.properties;\r\n\t\t\tlen = props.length;\r\n\t\t\tfor(i = 0; i < len; i++) {\r\n\t\t\t\tpropName = props[i];\r\n\t\t\t\tthis._compileExpr(lookupObj, propName);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\t_compileExpr: function(itemObj, propName, isExpr) {\r\n\t\tvar setting = itemObj[propName].call(itemObj),\r\n\t\t\texprName = propName +'Expr';\r\n\t\t\r\n\t\tif(setting !== null && setting !== undefined && jslet.isString(setting)) {\r\n\t\t\tif(setting.indexOf('expr:') === 0) {\r\n\t\t\t\tsetting = setting.substring(5);\r\n\t\t\t\tisExpr = true;\r\n\t\t\t}\r\n\t\t\tif(isExpr) {\r\n\t\t\t\titemObj[exprName] = new jslet.data.Expression(this._dataset, setting);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\t_evalOneRule: function(ruleObj, changingFldName) {\r\n\t\tvar matched = false;\r\n\t\tvar exprObj = ruleObj.conditionExpr;\r\n\t\tvar mainFields = null;\r\n\t\tvar hasRule = false;\r\n\t\t//Check if the rule matched or not\r\n\t\tif(exprObj) {\r\n\t\t\tmainFields = exprObj.mainFields();\r\n\t\t\tif(changingFldName) {\r\n\t\t\t\tif(mainFields && mainFields.indexOf(changingFldName) < 0) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tmatched = exprObj.eval();\r\n\t\t\thasRule = true;\r\n\t\t}\r\n\t\tif(!hasRule || matched) {\r\n\t\t\t//if exists 'status' condition\r\n\t\t\tvar ruleStatus = ruleObj.status();\r\n\t\t\tif(ruleStatus !== undefined) {\r\n\t\t\t\tvar dsStatus = 'other', \r\n\t\t\t\t\tchangedStatus = this._dataset.changedStatus();\r\n\t\t\t\tif(changedStatus == jslet.data.DataSetStatus.INSERT) {\r\n\t\t\t\t\tdsStatus = 'insert';\r\n\t\t\t\t} else if(changedStatus == jslet.data.DataSetStatus.UPDATE) {\r\n\t\t\t\t\tdsStatus = 'update';\r\n\t\t\t\t}\r\n\t\t\t\tif(!hasRule) {\r\n\t\t\t\t\tmatched = true;\r\n\t\t\t\t}\r\n\t\t\t\tmatched = (matched && ruleStatus.indexOf(dsStatus) >= 0);\r\n\t\t\t\thasRule = true;\r\n\t\t\t}\r\n\t\t\t//if exists 'selected' condition\r\n\t\t\tvar ruleSelected = ruleObj.selected();\r\n\t\t\tif(ruleSelected !== undefined) {\r\n\t\t\t\tif(!hasRule) {\r\n\t\t\t\t\tmatched = true;\r\n\t\t\t\t}\r\n\t\t\t\tmatched = (matched && ruleSelected === (this._dataset.selected()? true: false));\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar ruleEnv = null;\r\n\t\tif(mainFields) {\r\n\t\t\tvar fldName;\r\n\t\t\tfor(var i = 0, len = mainFields.length; i < len; i++) {\r\n\t\t\t\tfldName = mainFields[i];\r\n\t\t\t\tif(this._ruleEnv[fldName] === undefined) {\r\n\t\t\t\t\tthis._ruleEnv[fldName] = this._dataset.getFieldValue(fldName);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._evalRuleItems(matched? ruleObj.rules(): ruleObj.otherwise(), changingFldName? true: false);\r\n\t},\r\n\t\r\n\t_evalRuleItems: function(rules, isValueChanged) {\r\n\t\tif(!rules) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar fldName, ruleItem, matchedRule;\r\n\t\tfor(var i = 0, len = rules.length; i < len; i++) {\r\n\t\t\truleItem = rules[i];\r\n\t\t\tfldName = ruleItem.field();\r\n\t\t\tmatchedRule = new jslet.data.ContextRuleItem(fldName);\r\n\t\t\t\r\n\t\t\tvar meta = ruleItem.meta(); \r\n\t\t\tif(meta) {\r\n\t\t\t\tmatchedRule.meta(new jslet.data.ContextRuleMeta());\r\n\t\t\t\tthis._copyProperties(meta, matchedRule.meta());\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar lookup = ruleItem.lookup(); \r\n\t\t\tif(lookup) {\r\n\t\t\t\tmatchedRule.lookup(new jslet.data.ContextRuleLookup());\r\n\t\t\t\tthis._copyProperties(lookup, matchedRule.lookup());\r\n\t\t\t}\r\n\r\n\t\t\tif(isValueChanged && ruleItem.value() !== undefined) {\r\n\t\t\t\tmatchedRule.value(this._evalExpr(ruleItem, 'value'));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar customized = ruleItem.customized();\r\n\t\t\tif(customized) {\r\n\t\t\t\tmatchedRule.customized(customized);\r\n\t\t\t}\r\n\t\t\tthis._matchedRules.push(matchedRule);\r\n\t\t}\r\n\t},\r\n\t\r\n\t_copyProperties: function(srcObject, descObject) {\r\n\t\tvar props = srcObject.properties, propName, propValue;\r\n\t\tfor(var i = 0, len = props.length; i < len; i++) {\r\n\t\t\tpropName = props[i];\r\n\t\t\tpropValue = this._evalExpr(srcObject, propName);\r\n\t\t\tif(propValue !== undefined) {\r\n\t\t\t\tdescObject[propName].call(descObject, propValue);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\t_evalExpr: function(evalObj, propName) {\r\n\t\tvar exprObj = evalObj[propName + 'Expr'];\r\n\t\tif(exprObj) {\r\n\t\t\treturn exprObj.eval();\r\n\t\t} else {\r\n\t\t\treturn evalObj[propName].call(evalObj);\r\n\t\t}\r\n\t},\r\n\t\r\n\t_syncMatchedRules: function(changingFldName) {\r\n\t\tvar matchedRules = this._matchedRules,\r\n\t\t\truleObj, fldName, fldObj;\r\n\t\t\r\n\t\tfor(var i = 0, len = matchedRules.length; i < len; i++) {\r\n\t\t\truleObj = matchedRules[i];\r\n\t\t\tfldName = ruleObj.field();\r\n\t\t\tfldObj = this._dataset.getField(fldName);\r\n\t\t\tif(fldObj) {\r\n\t\t\t\tthis._syncMatchedRuleMeta(fldObj, ruleObj.meta());\r\n\t\t\t\tthis._syncMatchedRuleLookup(fldObj, ruleObj.lookup());\r\n\t\t\t\tthis._syncMatchedRuleValue(fldObj, ruleObj.value());\r\n\t\t\t\tvar customizedFn = ruleObj.customized();\r\n\t\t\t\tif(customizedFn) {\r\n\t\t\t\t\tcustomizedFn(fldObj, changingFldName);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\t_syncMatchedRuleMeta: function(fldObj, ruleMeta) {\r\n\t\tif(!ruleMeta) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar props = ruleMeta.properties, \r\n\t\t\tpropName, propValue;\r\n\t\tfor(var i = 0, len = props.length; i < len; i++) {\r\n\t\t\tpropName = props[i];\r\n\t\t\tpropValue = ruleMeta[propName].call(ruleMeta);\r\n\t\t\tif(propValue !== undefined) {\r\n\t\t\t\tfldObj[propName].call(fldObj, propValue);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\t_syncMatchedRuleLookup: function(fldObj, ruleLookup) {\r\n\t\tif(!ruleLookup) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar fieldLookup = fldObj.lookup();\r\n\t\tif(!fieldLookup) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar ruleDs = ruleLookup.dataset();\r\n\t\tif(ruleDs) {\r\n\t\t\tfieldLookup.dataset(ruleDs);\r\n\t\t}\r\n\t\tvar lkDsObj = fieldLookup.dataset();\r\n\t\tlkDsObj.autoRefreshHostDataset(true);\r\n\t\tvar ruleFilter = ruleLookup.filter();\r\n\t\tvar fldName;\r\n\t\tif(ruleFilter !== undefined) {\r\n\t\t\tfor(fldName in this._ruleEnv) {\r\n\t\t\t\truleFilter = ruleFilter.replace('${' + fldName + '}', this._ruleEnv[fldName]);\r\n\t\t\t}\r\n\t\t\tlkDsObj.filter(ruleFilter);\r\n\t\t\tlkDsObj.filtered(true);\r\n\t\t}\r\n\t\truleFilter = ruleLookup.fixedFilter();\r\n\t\tif(ruleFilter !== undefined) {\r\n\t\t\tfor(fldName in this._ruleEnv) {\r\n\t\t\t\truleFilter = ruleFilter.replace('${' + fldName + '}', this._ruleEnv[fldName]);\r\n\t\t\t}\r\n\t\t\tlkDsObj.fixedFilter(ruleFilter);\r\n\t\t\tlkDsObj.filtered(true);\r\n\t\t}\r\n\t\tvar ruleCriteria = ruleLookup.criteria();\r\n\t\tif(ruleCriteria !== undefined) {\r\n\t\t\tlkDsObj.query(ruleCriteria);\r\n\t\t}\r\n\t\tvar ruleDisplayFields = ruleLookup.displayFields();\r\n\t\tif(ruleDisplayFields !== undefined) {\r\n\t\t\tfieldLookup.displayFields(ruleDisplayFields);\r\n\t\t}\r\n\t\tvar ruleOnlyLeafLevel = ruleLookup.onlyLeafLevel();\r\n\t\tif(ruleOnlyLeafLevel !== undefined) {\r\n\t\t\tfieldLookup.onlyLeafLevel(ruleOnlyLeafLevel);\r\n\t\t}\r\n\t},\r\n\t\r\n\t_syncMatchedRuleValue: function(fldObj, value) {\r\n\t\tif(value !== undefined) {\r\n\t\t\tfldObj.setValue(value);\r\n\t\t}\r\n\t}\r\n};\n/**\r\n * @private\r\n * \r\n * keep all dataset object,\r\n * key for dataset name, value for dataset object.\r\n * @member jslet.data\r\n */\r\njslet.data.dataModule = {};\r\n\r\n/**\r\n * Get dataset object with dataset name. If dataset not exist, return null.\r\n * \r\n *     @example\r\n *     var dsObj = jslet.data.getDataset('employee');\r\n *     \r\n * @member jslet.data\r\n * @param {String} dsName Dataset name;\r\n * @return {jslet.data.Dataset} Dataset object.\r\n */\r\njslet.data.getDataset = function (dsName) {\r\n\tif(!dsName) {\r\n\t\treturn null;\r\n\t}\r\n\tif(jslet.isString(dsName)) {\r\n\t\treturn jslet.data.dataModule[dsName] || null;\r\n\t}\r\n\treturn dsName;\r\n};\r\n\r\n/**\r\n * @enum\r\n * \r\n * Dataset type.\r\n * \r\n */\r\njslet.data.DatasetType = {\r\n\t//0 - Normal dataset\r\n\tNORMAL: 0, \r\n\t//1 - Lookup dataset\r\n\tLOOKUP: 1, \r\n\t//2 - Detail dataset\r\n\tDETAIL: 2  \t \r\n};\r\n\r\njslet.data.onCreatingDataset = function(dsName, dsCatalog, realDsName, hostDatasetName) { };\r\n\r\n/**\r\n * @enum\r\n * \r\n * Field data type.\r\n */\r\njslet.data.DataType = {\r\n\t//N - Number\r\n\tNUMBER: 'N', \r\n\t//S - String\r\n\tSTRING: 'S',\r\n\t//D - Date\r\n\tDATE: 'D',\r\n\t//T - Time\r\n\tTIME: 'T',\r\n\t//B - Boolean\r\n\tBOOLEAN: 'B',\r\n\t//V - Dataset field\r\n\tDATASET: 'V',\r\n\t//C - Cross Field\r\n\tCROSS: 'C',\r\n\t//P - Proxy field\r\n\tPROXY: 'P',\r\n\t//X - Dynamic field\r\n\tEXTEND: 'X',\r\n\t//A - Action\r\n\tACTION: 'A',\r\n\t//E - Edit\r\n\tEDITACTION: 'E'\r\n};\r\n\r\n/**\r\n * @enum\r\n * \r\n * Field value style, used in {@link jslet.data.Field#valueStyle}. <br />\r\n * Normally, one field stores one value. In jslet, you can store two additional style value: <br />\r\n * 1. BETWEEN: one field stores an array value with two values: [startValue, endValue]; <br />\r\n * 2. MULTIPLE: one field stores an array value: [value1, value2, ...]; <br />\r\n */\r\njslet.data.FieldValueStyle = {\r\n\t//0 - one field stores one value.\r\n\tNORMAL: 0,\t\r\n\t//1 - one field stores an array value with two values: [startValue, endValue].\r\n\tBETWEEN: 1, \r\n\t//2 - one field stores an array value: [value1, value2, ...].\r\n\tMULTIPLE: 2 \r\n};\r\n\r\n/**\r\n * @enum\r\n * \r\n * Record range, used in submit and export method.\r\n */\r\njslet.data.RecordRange = {\r\n\t//0 - All data records.\r\n\tALL: 0, \r\n\t//1 - Selected data records.\r\n\tSELECTED: 1,\r\n\t//2 - The current data record.\r\n\tCURRENT: 2,\r\n\t//3 - Changed(Insert/Update/Delete) record\r\n\tCHANGED: 3\r\n}\r\n\r\n/**\r\n * @class\r\n *  \r\n * Edit Mask \r\n * \r\n * @param {String} mask Edit mask.\r\n * @param {Boolean} keepChar Keep the literal character or not.\r\n * @param {String} transform Transform character into UpperCase or LowerCase, optional value: upper, lower or null.\r\n */\r\njslet.data.EditMask = function(mask, keepChar, transform){\r\n\tjslet.Checker.test('jslet.data.EditMask#mask', mask).required().isString();\r\n\t/**\r\n\t * @property \r\n\t * \r\n\t * mask {String} mask rule: <br />\r\n\t *  '#': char set: 0-9 and -, not required <br />\r\n\t *  '0': char set: 0-9, required <br />\r\n\t *  '9': char set: 0-9, not required <br />\r\n\t *  'L': char set: A-Z,a-z, required <br />\r\n\t *  'l': char set: A-Z,a-z, not required <br />\r\n\t *  'A': char set: 0-9,a-z,A-Z, required <br />\r\n\t *  'a': char set: 0-9,a-z,A-Z, not required <br />\r\n\t *  'C': char set: any char, required <br />\r\n\t *  'c': char set: any char, not required\r\n\t */\r\n\tthis.mask = mask; \r\n\tif(keepChar === undefined) {\r\n\t\tkeepChar = true;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @property \r\n\t * \r\n\t * keepChar {Boolean} Keep the literal character or not\r\n\t */\r\n\tthis.keepChar = keepChar ? true: false;\r\n\t/**\r\n\t * @property \r\n\t * \r\n\t * transform {String} Transform character into UpperCase or LowerCase,\r\n\t *  optional value: upper, lower or null.\r\n\t */\r\n\tthis.transform = transform ? true: false;\r\n\t\r\n\tthis.clone = function(){\r\n\t\treturn new jslet.data.EditMask(this.mask, this.keepChar, this.transform);\r\n\t};\r\n};\r\n\r\n/**\r\n * @enum\r\n * \r\n * Dataset event type.\r\n */\r\njslet.data.DatasetEvent = {\r\n\tBEFORESCROLL: 'beforescroll',\r\n\tAFTERSCROLL: 'afterscroll',\r\n\t\r\n\tBEFOREINSERT: 'beforeinsert',\r\n\tAFTERINSERT: 'afterinsert',\r\n\t\r\n\tBEFOREUPDATE: 'beforeupdate',\r\n\tAFTERUPDATE: 'afterupdate',\r\n\t\r\n\tBEFOREDELETE: 'beforedelete',\r\n\tAFTERDELETE: 'afterdelete',\r\n\t\r\n\tBEFORECONFIRM: 'beforeconfirm',\r\n\tAFTERCONFIRM: 'afterconfirm',\r\n\t\r\n\tBEFORECANCEL: 'beforecancel',\r\n\tAFTERCANCEL: 'aftercancel',\r\n\t\r\n\tBEFORESELECT: 'beforeselect',\r\n\tAFTERSELECT: 'afterselect',\r\n\t\r\n\tBEFORESELECTALL: 'beforeselectall',\r\n\tAFTERSELECTALL: 'afterselectall'\r\n};\r\n\r\n/**\r\n * @enum\r\n * \r\n * Dataset status.\r\n */\r\njslet.data.DataSetStatus = {\r\n\t//Record is in 'browser' status.\r\n\tBROWSE: 0, \r\n\t//Record is in 'insert' status.\r\n\tINSERT: 1, \r\n\t//Record is in 'update' status.\r\n\tUPDATE: 2, \r\n\t//Record is in 'delete' status.\r\n\tDELETE: 3\r\n};\r\n\r\n/**\r\n * @class\r\n * Refrsh event.\r\n */\r\njslet.data.RefreshEvent = {\r\n\t/**\r\n\t * Create an update record event.\r\n\t * \r\n\t * @param {String} fldName Field name.\r\n\t * \r\n\t * @return this;\r\n\t */\r\n\tupdateRecordEvent: function(fldName) {\r\n\t\treturn {eventType: jslet.data.RefreshEvent.UPDATERECORD, fieldName: fldName};\r\n\t},\r\n\t\r\n\t/**\r\n\t * Create an update column event.\r\n\t * \r\n\t * @param {String} fldName Field name.\r\n\t * \r\n\t * @return this;\r\n\t */\r\n\tupdateColumnEvent: function(fldName) {\r\n\t\treturn {eventType: jslet.data.RefreshEvent.UPDATECOLUMN, fieldName: fldName};\r\n\t},\r\n\t\r\n\t/**\r\n\t * Create an update all event.\r\n\t * \r\n\t * @return this;\r\n\t */\r\n\tupdateAllEvent: function() {\r\n\t\treturn this._updateAllEvent;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Create an event when the field meta is changed.\r\n\t * \r\n\t * @param {String} metaName Field meta name.\r\n\t * @param {String} fldName Field name.\r\n\t * \r\n\t * @return this;\r\n\t */\r\n\tchangeMetaEvent: function(metaName, fieldName, changeAllRows) {\r\n\t\tvar result = {eventType: jslet.data.RefreshEvent.CHANGEMETA, metaName: metaName, fieldName: fieldName};\r\n\t\tif(changeAllRows !== undefined) {\r\n\t\t\tresult.changeAllRows = changeAllRows;\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Create an event before the record cursor is changing.\r\n\t * \r\n\t * @param {Integer} recno The record number.\r\n\t * \r\n\t * @return this;\r\n\t */\r\n\tbeforeScrollEvent: function(recno) {\r\n\t\treturn {eventType: jslet.data.RefreshEvent.BEFORESCROLL, recno: recno};\r\n\t},\r\n\t\r\n\t/**\r\n\t * Create an event when the record cursor is changed.\r\n\t * \r\n\t * @param {Integer} recno The record number.\r\n\t * @param {Integer} prevRecno The previous record number.\r\n\t * \r\n\t * @return this;\r\n\t */\r\n\tscrollEvent: function(recno, prevRecno) {\r\n\t\treturn {eventType: jslet.data.RefreshEvent.SCROLL, prevRecno: prevRecno, recno: recno};\r\n\t},\r\n\t\r\n\t/**\r\n\t * Create an event when appended a record.\r\n\t * \r\n\t * @param {Integer} prevRecno The previous record number.\r\n\t * @param {Integer} recno The record number.\r\n\t * \r\n\t * @return this;\r\n\t */\r\n\tinsertEvent: function(prevRecno, recno, needUpdateAll) {\r\n\t\treturn {eventType: jslet.data.RefreshEvent.INSERT, prevRecno: prevRecno, recno: recno, updateAll: needUpdateAll};\r\n\t},\r\n\t\r\n\t/**\r\n\t * Create an event when deleted a record.\r\n\t * \r\n\t * @param {Integer} recno The record number.\r\n\t * \r\n\t * @return this;\r\n\t */\r\n\tdeleteEvent: function(recno) {\r\n\t\treturn {eventType: jslet.data.RefreshEvent.DELETE, recno: recno};\r\n\t},\r\n\t\r\n\t/**\r\n\t * Create an event when selected a record.\r\n\t * \r\n\t * @param {Integer} recno The record number.\r\n\t * @param {Boolean} selected True - the record is selected, false - otherwise.\r\n\t * \r\n\t * @return this;\r\n\t */\r\n\tselectRecordEvent: function(recno, selected) {\r\n\t\treturn {eventType: jslet.data.RefreshEvent.SELECTRECORD, recno: recno, selected: selected};\r\n\t},\r\n\t\r\n\t/**\r\n\t * Create an event when selected all records.\r\n\t * \r\n\t * @param {Boolean} selected True - the record is selected, false - otherwise.\r\n\t * \r\n\t * @return this;\r\n\t */\r\n\tselectAllEvent: function(selected) {\r\n\t\treturn {eventType: jslet.data.RefreshEvent.SELECTALL, selected: selected};\r\n\t},\r\n\t\r\n\t/**\r\n\t * Create an event when the paging is changed.\r\n\t * \r\n\t * @return this;\r\n\t */\r\n\tchangePageEvent: function() {\r\n\t\treturn this._changePageEvent;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Create an event when thrown an error.\r\n\t * \r\n\t * @return this;\r\n\t */\r\n\terrorEvent: function(errMessage) {\r\n\t\treturn {eventType: jslet.data.RefreshEvent.ERROR, message: errMessage};\r\n\t},\r\n\t\r\n\t/**\r\n\t * Create an event when the field's lookup is changed.\r\n\t * \r\n\t * @param {String} fldName Field name.\r\n\t * \r\n\t * @return this;\r\n\t */\r\n\tlookupEvent: function(fieldName, isMetaChanged) {\r\n\t\treturn {eventType: jslet.data.RefreshEvent.UPDATELOOKUP, fieldName: fieldName, isMetaChanged: isMetaChanged};\r\n\t},\r\n\t\r\n\t/**\r\n\t * Create an event when records are aggregated.\r\n\t * \r\n\t * @return this;\r\n\t */\r\n\taggregatedEvent: function() {\r\n\t\treturn {eventType: jslet.data.RefreshEvent.AGGREGATED};\t\t\r\n\t}\r\n};\r\n\r\njslet.data.RefreshEvent.CHANGEMETA = 'changeMeta';// fieldname, metatype(title, readonly,disabled,format)\r\njslet.data.RefreshEvent.UPDATEALL = 'updateAll';\r\njslet.data.RefreshEvent.UPDATERECORD = 'updateRecord';// fieldname\r\njslet.data.RefreshEvent.UPDATECOLUMN = 'updateColumn';// fieldname\r\njslet.data.RefreshEvent.BEFORESCROLL = 'beforescroll';\r\njslet.data.RefreshEvent.SCROLL = 'scroll';// preRecno, recno\r\n\r\njslet.data.RefreshEvent.SELECTRECORD = 'selectRecord';//\r\njslet.data.RefreshEvent.SELECTALL = 'selectAll';//\r\njslet.data.RefreshEvent.INSERT = 'insert';\r\njslet.data.RefreshEvent.DELETE = 'delete';// recno\r\njslet.data.RefreshEvent.CHANGEPAGE = 'changePage';\r\njslet.data.RefreshEvent.UPDATELOOKUP = 'updateLookup';\r\njslet.data.RefreshEvent.AGGREGATED = 'aggregated';\r\n\r\njslet.data.RefreshEvent.ERROR = 'error';\r\n\r\njslet.data.RefreshEvent._updateAllEvent = {eventType: jslet.data.RefreshEvent.UPDATEALL};\r\njslet.data.RefreshEvent._changePageEvent = {eventType: jslet.data.RefreshEvent.CHANGEPAGE};\r\n\r\n/**\r\n * @private\r\n * \r\n * Convert dataset record to json.\r\n * \r\n * @member jslet.data\r\n * @param {Object[]} records Dataset records, required.\r\n * @param {String[]} excludeFields Excluded field names,optional.\r\n * \r\n * @return {String} Json String. \r\n */\r\njslet.data.record2Json = function(records, excludeFields) {\r\n\tfunction record2JsonFilter(key, value) {\r\n\t\tif(key == '_jl_') {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t\tif(excludeFields) {\r\n\t\t\tvar fldName;\r\n\t\t\tfor(var i = 0, len = excludeFields.length; i < len; i++) {\r\n\t\t\t\tfldName = excludeFields[i];\r\n\t\t\t\tif(key == fldName) {\r\n\t\t\t\t\treturn undefined;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn value;\t\t\r\n\t}\r\n\t\r\n\tif(!window.JSON || !JSON) {\r\n\t\tconsole.error('Your browser does not support JSON!');\r\n\t\treturn;\r\n\t}\r\n\tif(excludeFields) {\r\n\t\tjslet.Checker.test('record2Json#excludeFields', excludeFields).isArray();\t\t\r\n\t}\r\n\t\r\n\treturn JSON.stringify(records, record2JsonFilter);\r\n};\r\n\r\njslet.data.getRecInfo = function(record) {\r\n\tjslet.Checker.test('jslet.data.getRecInfo#record', record).required();\r\n\tvar recInfo = record._jl_;\r\n\tif(!recInfo) {\r\n\t\trecInfo = {};\r\n\t\trecord._jl_ = recInfo;\r\n\t}\r\n\treturn recInfo;\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\njslet.data.DatasetRelationManager = function() {\r\n\tvar relations= [];\r\n\t\r\n\t/**\r\n\t * Add dataset relation.\r\n\t * \r\n\t * @param {String} hostDsName host dataset name;\r\n\t * @param {String} hostFldName field name of host dataset;\r\n\t * @param {String} lookupOrDetailDsName lookup or detail dataset name;\r\n\t * @param {jslet.data.DatasetType} relationType, optional value: jslet.data.DatasetType.LOOKUP, jslet.data.DatasetType.DETAIL\r\n\t */\r\n\tthis.addRelation = function(hostDsName, hostFldName, lookupOrDetailDsName, relationType) {\r\n\t\tfor(var i = 0, len = relations.length; i < len; i++) {\r\n\t\t\tvar relation = relations[i];\r\n\t\t\tif(relation.hostDataset == hostDsName && \r\n\t\t\t\trelation.hostField == hostFldName && \r\n\t\t\t\trelation.lookupDataset == lookupOrDetailDsName) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\trelations.push({hostDataset: hostDsName, hostField: hostFldName, lookupOrDetailDataset: lookupOrDetailDsName, relationType: relationType});\r\n\t};\r\n\t\r\n\tthis.removeRelation = function(hostDsName, hostFldName, lookupOrDetailDsName) {\r\n\t\tfor(var i = relations.length - 1; i >= 0; i--) {\r\n\t\t\tvar relation = relations[i];\r\n\t\t\tif(relation.hostDataset == hostDsName && \r\n\t\t\t\trelation.hostField == hostFldName && \r\n\t\t\t\trelation.lookupOrDetailDataset == lookupOrDetailDsName) {\r\n\t\t\t\trelations.splice(i,1);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t\r\n\tthis.removeDataset = function(datasetName) {\r\n\t\tfor(var i = relations.length - 1; i >= 0; i--) {\r\n\t\t\tvar relation = relations[i];\r\n\t\t\tif(relation.hostDataset == datasetName || relation.lookupOrDetailDataset == datasetName) {\r\n\t\t\t\trelations.splice(i,1);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t\r\n\tthis.changeDatasetName = function(oldName, newName) {\r\n\t\tif(!oldName || !newName) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tfor(var i = 0, len = relations.length; i < len; i++) {\r\n\t\t\tvar relation = relations[i];\r\n\t\t\tif(relation.hostDataset == oldName) {\r\n\t\t\t\trelation.hostDataset = newName;\r\n\t\t\t}\r\n\t\t\tif(relation.lookupOrDetailDataset == oldName) {\r\n\t\t\t\trelation.lookupOrDetailDataset = newName;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t\r\n\tthis.refreshLookupHostDataset = function(lookupDsName) {\r\n\t\tif(!lookupDsName) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar relation, hostDataset;\r\n\t\tfor(var i = 0, len = relations.length; i < len; i++) {\r\n\t\t\trelation = relations[i];\r\n\t\t\tif(relation.lookupOrDetailDataset == lookupDsName &&\r\n\t\t\t\trelation.relationType == jslet.data.DatasetType.LOOKUP) {\r\n\t\t\t\thostDataset = jslet.data.getDataset(relation.hostDataset);\r\n\t\t\t\tif(hostDataset) {\r\n\t\t\t\t\thostDataset.handleLookupDatasetChanged(relation.hostField);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new Error('NOT found Host dataset: ' + relation.hostDataset);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t\r\n\tthis.getHostFieldObject = function(lookupOrDetailDsName) {\r\n\t\tif(!lookupOrDetailDsName) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar relation, hostDataset;\r\n\t\tfor(var i = 0, len = relations.length; i < len; i++) {\r\n\t\t\trelation = relations[i];\r\n\t\t\tif(relation.lookupOrDetailDataset == lookupOrDetailDsName &&\r\n\t\t\t\trelation.relationType == jslet.data.DatasetType.DETAIL) {\r\n\t\t\t\thostDataset = jslet.data.getDataset(relation.hostDataset);\r\n\t\t\t\tif(hostDataset) {\r\n\t\t\t\t\treturn hostDataset.getField(relation.hostField);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new Error('NOT found Host dataset: ' + relation.hostDataset);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} //end for i\t\r\n\t};\r\n};\r\njslet.data.datasetRelationManager = new jslet.data.DatasetRelationManager();\r\n\r\njslet.EmptyPromise = function(action) {\r\n\tvar action = action;\r\n\t\r\n\tthis.done = function(callBackFn) {\r\n\t\tif(action == 'done' && callBackFn) {\r\n\t\t\tcallBackFn();\r\n\t\t}\r\n\t\treturn this;\r\n\t};\r\n\t\r\n\tthis.fail = function(callBackFn) {\r\n\t\tif(action == 'fail' && callBackFn) {\r\n\t\t\tcallBackFn();\r\n\t\t}\r\n\t\treturn this;\r\n\t};\r\n\t\r\n\tthis.always = function(callBackFn) {\r\n\t\tif(callBackFn) {\r\n\t\t\tcallBackFn();\r\n\t\t}\r\n\t\treturn this;\r\n\t};\r\n};\r\n\r\njslet.data.displayOrderComparator = function(fldObj1, fldObj2) {\r\n\tvar order1 = fldObj1.displayOrder();\r\n\tvar order2 = fldObj2.displayOrder();\r\n\treturn order1 - order2;\r\n};\r\n\r\n/**\r\n * @private\r\n * @class\r\n * \r\n * Global data processing.\r\n */\r\njslet.data.GlobalDataHandler = function() {\r\n\tvar Z = this;\r\n\tZ._datasetMetaChanged = null;\r\n\tZ._fieldMetaChanged = null;\r\n\tZ._fieldValueChanged = null;\r\n};\r\n\r\njslet.data.GlobalDataHandler.prototype = {\r\n\t\t\r\n\t/**\r\n\t * Fired when dataset created.\r\n\t *  Pattern: \r\n\t *\tfunction(dataset}{}\r\n\t *  \t//dataset:{jslet.data.Dataset} Dataset Object\r\n\t *  \r\n\t * @param {Function | undefined} datasetCreated dataset created event handler.\r\n\t * @return {this | Function}\r\n\t */\r\n\tdatasetCreated: function(datasetCreated) {\r\n\t\tvar Z = this;\r\n\t\tif(datasetCreated === undefined) {\r\n\t\t\treturn Z._datasetCreated;\r\n\t\t}\r\n\t\tjslet.Checker.test('globalDataHandler.datasetCreated', datasetCreated).isFunction();\r\n\t\tZ._datasetCreated = datasetCreated;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Fired when dataset meta is changed.\r\n\t *  Pattern: \r\n\t *\tfunction(dataset, metaName}{}\r\n\t *  \t//dataset:{jslet.data.Dataset} Dataset Object\r\n\t *  \t//metaName: {String} dataset's meta name\r\n\t *  \r\n\t * @param {Function | undefined} datasetMetaChanged Dataset meta changed event handler.\r\n\t * @return {this | Function}\r\n\t */\r\n\tdatasetMetaChanged: function(datasetMetaChanged) {\r\n\t\tvar Z = this;\r\n\t\tif(datasetMetaChanged === undefined) {\r\n\t\t\treturn Z._datasetMetaChanged;\r\n\t\t}\r\n\t\tjslet.Checker.test('globalDataHandler.datasetMetaChanged', datasetMetaChanged).isFunction();\r\n\t\tZ._datasetMetaChanged = datasetMetaChanged;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Fired when field meta is changed.\r\n\t *  Pattern: \r\n\t *\tfunction(dataset, fieldName, metaName}{}\r\n\t *  \t//dataset:{jslet.data.Dataset} Dataset Object\r\n\t *  \t//fieldName: {String} field name\r\n\t *  \t//metaName: {String} dataset's meta name\r\n\t *  \r\n\t * @param {Function | undefined} fieldMetaChanged Dataset meta changed event handler.\r\n\t * @return {this | Function}\r\n\t */\r\n\tfieldMetaChanged: function(fieldMetaChanged) {\r\n\t\tvar Z = this;\r\n\t\tif(fieldMetaChanged === undefined) {\r\n\t\t\treturn Z._fieldMetaChanged;\r\n\t\t}\r\n\t\tjslet.Checker.test('globalDataHandler.fieldMetaChanged', fieldMetaChanged).isFunction();\r\n\t\tZ._fieldMetaChanged = fieldMetaChanged;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Fired when field value is changed.\r\n\t *  Pattern: \r\n\t *\tfunction(dataset, metaName}{}\r\n\t *  \t//dataset:{jslet.data.Dataset} Dataset Object\r\n\t *  \t//fieldName: {String} field name\r\n\t *  \t//fieldValue: {Object} field value\r\n\t *  \t//valueIndex: {Integer} value index\r\n\t *  \r\n\t * @param {Function | undefined} fieldValueChanged field value changed event handler.\r\n\t * @return {this | Function}\r\n\t */\r\n\tfieldValueChanged: function(fieldValueChanged) {\r\n\t\tvar Z = this;\r\n\t\tif(fieldValueChanged === undefined) {\r\n\t\t\treturn Z._fieldValueChanged;\r\n\t\t}\r\n\t\tjslet.Checker.test('globalDataHandler.fieldValueChanged', fieldValueChanged).isFunction();\r\n\t\tZ._fieldValueChanged = fieldValueChanged;\r\n\t}\r\n};\r\n\r\njslet.data.globalDataHandler = new jslet.data.GlobalDataHandler();\r\n\r\n\r\njslet.data.DatasetCreatingManager = function() {\r\n\tthis._maxCreatingLevels = {};\r\n\t\r\n\tthis._creatingDatasets = [];\r\n\t\r\n\tthis._doDatasetCreatedDebounce = jslet.debounce(this._doDatasetCreated, 100);\r\n}\r\n\r\njslet.data.DatasetCreatingManager.prototype = {\r\n\tsetMaxCreateLevel: function(dsName, maxCreatingLevel) {\r\n\t\tif(maxCreatingLevel) {\r\n\t\t\tthis._maxCreatingLevels[dsName] = maxCreatingLevel;\r\n\t\t}\r\n\t},\r\n\t\r\n\tstartCreateDataset: function(dsName, hostDsName, isLookup) {\r\n\t\tvar hostDsCfg;\r\n\t\tif(hostDsName) {\r\n\t\t\thostDsCfg = this._getDsCfg(hostDsName);\r\n\t\t\tif(!hostDsCfg) {\r\n\t\t\t\thostDsCfg = {name: hostDsName, level: 0, relative: []};\r\n\t\t\t\tthis._creatingDatasets.push(hostDsCfg);\r\n\t\t\t}\r\n\t\t\tif(!this._getDsCfg(dsName)) {\r\n\t\t\t\tvar relative = hostDsCfg.relative;\r\n\t\t\t\tif(!relative) {\r\n\t\t\t\t\thostDsCfg.relative = [];\r\n\t\t\t\t\trelative = hostDsCfg.relative;\r\n\t\t\t\t}\r\n\t\t\t\trelative.push({name: dsName, level: (isLookup? hostDsCfg.level + 1: 0), parent: hostDsCfg});\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\tendCreateDataset: function() {\r\n\t\tif(jslet.global.dataset.onDatasetCreated) {\r\n\t\t\tthis._doDatasetCreatedDebounce.call(this);\r\n\t\t}\r\n\t},\r\n\t\r\n\tallowCreatingDataset: function(hostDsName) {\r\n\t\tvar hostDsCfg = this._getDsCfg(hostDsName);\r\n\t\tif(!hostDsCfg) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tvar dsCfg = hostDsCfg;\r\n\t\tvar maxLevel = 0;\r\n\t\twhile(true) {\r\n\t\t\tif(!dsCfg.parent) {\r\n\t\t\t\tmaxLevel = this._maxCreatingLevels[dsCfg.name];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tdsCfg = dsCfg.parent;\r\n\t\t}\r\n\t\tif(maxLevel && hostDsCfg.level === maxLevel) {\r\n\t\t\treturn false\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\t\r\n\t_checkAllCreated: function(hostDsCfg) {\r\n\t\tvar result = true, \r\n\t\t\tdsCfg, \r\n\t\t\trelative = hostDsCfg.relative;\r\n\t\t\r\n\t\tfor(var i = 0, len = relative.length; i < len; i++) {\r\n\t\t\tdsCfg = relative[i];\r\n\t\t\tif(!jslet.data.getDataset(dsCfg.name)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(dsCfg.relative) {\r\n\t\t\t\tresult = this._checkAllCreated(dsCfg);\r\n\t\t\t\tif(!result) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\t\r\n\t_getDsCfg: function(dsName, datasets) {\r\n\t\tif(!dsName) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar datasets, dsCfg;\r\n\t\tif(datasets === undefined) {\r\n\t\t\tdatasets = this._creatingDatasets;\r\n\t\t}\r\n\t\tfor(var i = 0, len = datasets.length; i < len; i++) {\r\n\t\t\tdsCfg = datasets[i];\r\n\t\t\tif(dsCfg.name == dsName) {\r\n\t\t\t\treturn dsCfg;\r\n\t\t\t}\r\n\t\t\tif(dsCfg.relative) {\r\n\t\t\t\tdsCfg = this._getDsCfg(dsName, dsCfg.relative);\r\n\t\t\t\tif(dsCfg) {\r\n\t\t\t\t\treturn dsCfg;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t},\r\n\t\r\n\t_doDatasetCreated: function() {\r\n\t\tvar datasets = this._creatingDatasets,\r\n\t\t\trootDsCfg, rootDsName,\r\n\t\t\tallCreated = true;\r\n\t\tfor(var i = datasets.length - 1; i >= 0; i--) {\r\n\t\t\trootDsCfg = datasets[i];\r\n\t\t\trootDsName = rootDsCfg.name;\r\n\t\t\tif(this._checkAllCreated(rootDsCfg)) {\r\n\t\t\t\tdatasets.splice(i, 1);\r\n\t\t\t\tdelete this._maxCreatingLevels[rootDsName];\r\n\t\t\t} else {\r\n\t\t\t\tallCreated = false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(allCreated) {\r\n\t\t\tjslet.global.dataset.onDatasetCreated();\r\n\t\t}\r\n\t}\r\n}\r\njslet.data.defaultDatasetCreatingManager = new jslet.data.DatasetCreatingManager();\r\n\n/**\r\n * @class\r\n * @constructor\r\n * \r\n * Dataset is the core class in Jslet. \r\n */\r\njslet.data.Dataset = function (datasetCfg) {\r\n\t\r\n\tvar Z = this;\r\n\tZ._name = null; //Dataset name\r\n\tZ._description = null;\r\n\tZ._recordClass = jslet.global.defaultRecordClass; //Record class, used for serialized/deserialize\r\n\tZ._records = null; //Array of data records\r\n\tZ._oriRecords = null;\r\n\tZ._fields = []; //Array of jslet.data.Field\r\n\tZ._fieldsMap = {};\r\n\t\r\n\tZ._oriFields = null;\r\n\t\r\n\tZ._normalFields = []; //Array of jslet.data.Field except the fields with children.\r\n\tZ._recno = -1;\r\n\tZ._filteredRecnoArray = null;\r\n\r\n\tZ._unitConvertFactor = 1;\r\n\tZ._unitName = null;\r\n\tZ._aborted = false;\r\n\r\n\tZ._valueFollowEnabled = true;\r\n\t\r\n\tZ._status = 0; // dataset status, optional values: 0:browse;1:created;2:updated;3:deleted;\r\n\tZ._proxyFields = null;\r\n\t\r\n\tZ._fixedFilter = null;\t\r\n\tZ._filter = null;\r\n\tZ._filtered = false;\r\n\tZ._innerFilter = null; //inner variable\r\n\tZ._findCondition = null;\r\n\tZ._innerFindCondition = null; //inner variable\r\n\r\n\tZ._innerFormularFields = null; //inner variable\r\n\r\n\tZ._bof = false;\r\n\tZ._eof = false;\r\n\tZ._igoreEvent = false;\r\n\tZ._logChanges = true;\r\n\tZ._auditLogEnabled = true;\r\n\tZ._validationEnabled = true;\r\n\t\r\n\t\r\n\tZ._modiObject = null;\r\n\tZ._inputtingRecord = {};\r\n\tZ._lockCount = 0;\r\n\r\n\tZ._fixedIndexFields = null;\r\n\tZ._innerFixedIndexFields = [];\r\n\tZ._indexFields = null;\r\n\tZ._innerIndexFields = [];\r\n\tZ._sortingFields = null;\r\n\r\n\tZ._convertDestFields = null;\r\n\tZ._innerConvertDestFields = null;\r\n\r\n\tZ._masterDataset = null;\r\n\tZ._masterField = null;\r\n\tZ._detailDatasetFields = null; //Array of dataset field object\r\n\r\n\tZ._linkedControls = []; //Array of DBControl except DBLabel\r\n\tZ._linkedLabels = []; //Array of DBLabel\r\n\tZ._silence = 0;\r\n\tZ._keyField = null;\r\n\tZ._codeField = null;\r\n\tZ._nameField = null;\r\n\tZ._parentField = null;\r\n\tZ._levelOrderField = null;\r\n\tZ._selectField = null;\r\n\tZ._statusField = null;\r\n\t\r\n\tZ._contextRules = null;\r\n\tZ._contextRuleEngine = null;\r\n\tZ._contextRuleEnabled = false;\r\n\r\n\tZ._dataProvider = jslet.data.DataProvider ? new jslet.data.DataProvider() : null;\r\n\r\n\tZ._queryCriteria = null; //String query parameters \r\n\tZ._queryUrl = null; //String query URL \r\n\tZ._submitUrl = null; //String submit URL\r\n\tZ._pageSize = 500;\r\n\tZ._pageNo = 0;  \r\n\tZ._pageCount = 0;\r\n\t//The following attributes are used for private.\r\n\tZ._ignoreFilter = false;\r\n\tZ._ignoreFilterRecno = 0;\r\n\t\r\n\tZ._fieldValidator = new jslet.data.FieldValidator();\r\n\t\r\n\tZ._onFieldChanged = null;  \r\n\r\n\tZ._onFieldFocusing = null;\r\n\r\n\tZ._isFireGlobalEvent = true;\r\n\r\n\tZ._onCheckSelectable = null;\r\n\r\n\tZ._onDataQuerying = null;\r\n\t\r\n\tZ._onDataQueried = null;\r\n\t\r\n\tZ._onDataSubmitted = null;\r\n\t\r\n\tZ._datasetListener = null;\r\n\t\r\n\tZ._datasetEventHandler = null;\r\n\t\r\n\tZ._designMode = false;\r\n\t\r\n\tZ._autoShowError = true;\r\n\tZ._autoRefreshHostDataset = false;\r\n\tZ._readOnly = false;\r\n\tZ._aggregatedValues = null;\r\n\tZ._afterScrollDebounce = jslet.debounce(Z._innerAfterScrollDebounce, 30);\r\n\tZ._calcAggregatedValueDebounce = jslet.debounce(Z.calcAggregatedValue, 100);\r\n\tZ.selection = new jslet.data.DataSelection(Z);\r\n\tZ._changeLog = new jslet.data.ChangeLog(Z);\r\n\tZ._dataTransformer = new jslet.data.DataTransformer(Z);\r\n\tZ._followedValues = null;\r\n\tZ._focusedFields = null;\r\n\tZ._canFocusFields = null;\r\n\t\r\n\tZ._lastFindingValue = null;\r\n\tZ._inContextRule = false;\r\n\tZ._aggregatedFields = null;\r\n\tZ._aggregatingCount = 0;\r\n\t\r\n\tZ.createdByFactory = false;\r\n\tZ._isEnum = false;\r\n\tthis._create(datasetCfg);\r\n};\r\njslet.data.Dataset.className = 'jslet.data.Dataset';\r\n\r\njslet.data.Dataset.prototype = {\r\n\r\n\tclassName: jslet.data.Dataset.className,\r\n\t\r\n\t_create: function(dsCfg) {\r\n\t\tvar dsName = dsCfg.name, fieldConfig;\r\n\t\tjslet.Checker.test('createDataset#datasetName', dsName).required().isString();\r\n\t\tvar Z = this;\r\n\t\tZ.name(dsName);\r\n\t\tZ.createdByFactory = dsCfg.createdByFactory;\r\n\t\tZ._isEnum = dsCfg.isEnum;\r\n\t\tif(Z._isEnum) {\r\n\t\t\tfieldConfig =  [{name: 'code', type: 'S', length: 20, displayWidth: 10, label: jsletlocale.EnumDataset.code},\r\n\t\t\t                {name: 'name', type: 'S', length: 100, displayWidth: 16, label: jsletlocale.EnumDataset.name}];\r\n\t\t\tZ.createFields(fieldConfig);\r\n\t\t\tZ.keyField('code');\r\n\t\t\tZ.codeField('code');\r\n\t\t\tZ.nameField('name');\r\n\t\t\tif(dsCfg.indexFields !== undefined) {\r\n\t\t\t\tZ.indexFields(dsCfg.indexFields);\r\n\t\t\t}\r\n\t\t\tif(dsCfg.records) {\r\n\t\t\t\tZ.records(dsCfg.records);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tfieldConfig = dsCfg.fields;\r\n\t\tZ.createFields(fieldConfig);\r\n\t\t\r\n\t\tfunction setPropValue(propName) {\r\n\t\t\tvar propValue = dsCfg[propName];\r\n\t\t\tif (propValue !== undefined) {\r\n\t\t\t\tZ[propName](propValue);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tfunction setIntPropValue(propName) {\r\n\t\t\tvar propValue = dsCfg[propName];\r\n\t\t\tif (propValue !== undefined) {\r\n\t\t\t\tZ[propName](parseInt(propValue));\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tfunction setBooleanPropValue(propName) {\r\n\t\t\tvar propValue = dsCfg[propName];\r\n\t\t\tif (propValue !== undefined) {\r\n\t\t\t\tif(jslet.isString(propValue)) {\r\n\t\t\t\t\tif(propValue) {\r\n\t\t\t\t\t\tpropValue = propValue != '0' && propValue != 'false';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tZ[propName](propValue? true: false);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tsetPropValue('keyField');\r\n\t\tsetPropValue('codeField');\r\n\t\tsetPropValue('nameField');\r\n\t\tsetPropValue('parentField');\r\n\t\tsetPropValue('levelOrderField');\r\n\t\tsetPropValue('selectField');\r\n\t\tsetPropValue('statusField');\r\n\t\t\r\n\t\tsetPropValue('recordClass');\r\n\t\tsetPropValue('description');\r\n\t\t\r\n\t\tsetPropValue('queryUrl');\r\n\t\tsetPropValue('submitUrl');\r\n\t\tsetIntPropValue('pageNo');\r\n\t\tsetIntPropValue('pageSize');\r\n\t\tsetPropValue('fixedIndexFields');\r\n\t\tsetPropValue('indexFields');\r\n\t\tsetPropValue('fixedFilter');\r\n\t\tsetPropValue('filter');\r\n\t\tsetBooleanPropValue('filtered');\r\n\t\tsetBooleanPropValue('autoShowError');\r\n\t\tsetBooleanPropValue('autoRefreshHostDataset');\r\n\t\tsetBooleanPropValue('readOnly');\r\n\t\tsetBooleanPropValue('logChanges');\r\n\t\tsetBooleanPropValue('auditLogEnabled');\r\n\t\tsetBooleanPropValue('isFireGlobalEvent');\r\n\t\t\r\n\t\tsetPropValue('datasetListener');\r\n\t\tsetPropValue('onFieldChange');\r\n\t\tsetPropValue('onFieldChanged');\r\n\t\tsetPropValue('onFieldChanging');\r\n\t\tsetPropValue('onCheckSelectable');\r\n\t\tsetPropValue('contextRules');\r\n\t\t\r\n\t\tif(dsCfg.records) {\r\n\t\t\tZ.records(dsCfg.records);\r\n\t\t}\r\n\t},\r\n\t\t\r\n\t/**\r\n\t* @property\r\n\t* \r\n\t* Set or get dataset's name. \r\n\t* Dataset's name must be unique. Example:\r\n\t* \r\n\t*     @example\r\n\t*     dsObj.name('test'); //Set property, return this.\r\n\t*     var propValue = dsObj.name(); //Get property value.\r\n\t* \r\n\t* @param {String | undefined} name Dataset name.\r\n\t* \r\n\t* @return {this | String} \r\n\t*/\r\n\tname: function(name) {\r\n\t\tvar Z = this;\r\n\t\tif(name === undefined) {\r\n\t\t\treturn Z._name;\r\n\t\t}\r\n\t\tjslet.Checker.test('Dataset.name', name).required().isString();\r\n\t\tname = jslet.trim(name);\r\n\t\t\r\n\t\tvar dsName = this._name;\r\n\t\tif (dsName) {\r\n\t\t\tjslet.data.dataModule[dsName] = null;\r\n\t\t\tjslet.data.datasetRelationManager.changeDatasetName(dsName, name);\r\n\t\t}\r\n\t\tjslet.data.dataModule[name] = this;\r\n\t\tthis._name = name;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get dataset description. Dataset description is also used for dataset exporting as the default file name. \r\n\t * \r\n\t *     @example\r\n\t *     dsObj.description('test'); //Set property, return this.\r\n\t *     var propValue = dsObj.description(); //Get property value.\r\n\t * \r\n\t * @param {String | undefined} description Dataset's description.\r\n\t * \r\n\t * @return {this | String}\r\n\t */\r\n\tdescription: function(description) {\r\n\t\tif(description === undefined) {\r\n\t\t\treturn this._description || this._name;\r\n\t\t}\r\n\t\tthis._description = description;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set dataset's record class, recordClass is the server entity class quantified name.\r\n\t * It's used for automated serialization at server side.\r\n\t * \r\n\t *     @example\r\n\t *     dsObj.recordClass('test'); //Set property, return this.\r\n\t *     var propValue = dsObj.recordClass(); //Get property value.\r\n\t *     \r\n\t * @param {String | undefined} clazzName Server entity class name.\r\n\t * \r\n\t * @return {this | String}\r\n\t */\r\n\trecordClass: function(clazz) {\r\n\t\tvar Z = this;\r\n\t\tif (clazz === undefined) {\r\n\t\t\treturn Z._recordClass;\r\n\t\t}\r\n\t\tjslet.Checker.test('Dataset.recordClass', clazz).isString();\r\n\t\tZ._recordClass = clazz ? clazz.trim() : null;\r\n\t\treturn this;\r\n\t},\r\n\t\t\r\n\t/**\r\n\t* Clone this dataset's structure and return new dataset object..\r\n\t* \r\n\t* @param {String} newDsName New dataset's name.\r\n\t* @param {String[]} fieldNames a list of field names which will be cloned to new dataset.\r\n\t* \r\n\t* @return {jslet.data.Dataset} Cloned dataset object\r\n\t*/\r\n\tclone: function (newDsName, fieldNames) {\r\n\t\tvar Z = this;\r\n\t\tif (!newDsName) {\r\n\t\t\tnewDsName = Z._name + '_clone';\r\n\t\t}\r\n\t\tvar result = new jslet.data.Dataset({name: newDsName, fields: []});\r\n\t\tresult._datasetListener = Z._datasetListener;\r\n\r\n\t\tresult._unitConvertFactor = Z._unitConvertFactor;\r\n\t\tresult._unitName = Z._unitName;\r\n\r\n\t\tresult._fixedFilter = Z._fixedFilter;\r\n\t\tresult._filter = Z._filter;\r\n\t\tresult._filtered = Z._filtered;\r\n\t\tresult._logChanges = Z._logChanges;\r\n\t\tresult._fixedIndexFields = Z._fixedIndexFields;\r\n\t\tresult._indexFields = Z._indexFields;\r\n\t\t\r\n\t\tvar keyFldName = Z._keyField,\r\n\t\t\tcodeFldName = Z._codeField,\r\n\t\t\tnameFldName = Z._nameField,\r\n\t\t\tparentFldName = Z._parentField,\r\n\t\t\tlevelOrderField = Z._levelOrderField,\r\n\t\t\tselectFldName = Z._selectField,\r\n\t\t\tstatusFldName = Z._statusField;\r\n\t\tif (fieldNames) {\r\n\t\t\tkeyFldName = keyFldName && fieldNames.indexOf(keyFldName) >= 0 ? keyFldName: null;\r\n\t\t\tcodeFldName = codeFldName && fieldNames.indexOf(codeFldName) >= 0 ? codeFldName: null;\r\n\t\t\tnameFldName = nameFldName && fieldNames.indexOf(nameFldName) >= 0 ? nameFldName: null;\r\n\t\t\tparentFldName = parentFldName && fieldNames.indexOf(parentFldName) >= 0 ? parentFldName: null;\r\n\t\t\tlevelOrderField = levelOrderField && fieldNames.indexOf(levelOrderField) >= 0 ? levelOrderField: null;\r\n\t\t\tselectFldName = selectFldName && fieldNames.indexOf(selectFldName) >= 0 ? selectFldName: null;\r\n\t\t\tstatusFldName = statusFldName && fieldNames.indexOf(statusFldName) >= 0 ? statusFldName: null;\r\n\t\t}\r\n\t\tresult._keyField = keyFldName;\r\n\t\tresult._codeField = codeFldName;\r\n\t\tresult._nameField = nameFldName;\r\n\t\tresult._parentField = parentFldName;\r\n\t\tresult._levelOrderField = levelOrderField;\r\n\t\tresult._selectField = selectFldName;\r\n\t\tresult._statusField = statusFldName;\r\n\t\t\r\n\t\tresult._contextRules = Z._contextRules;\r\n\t\tvar fldObj, fldName;\r\n\t\tfor(var i = 0, cnt = Z._fields.length; i < cnt; i++) {\r\n\t\t\tfldObj = Z._fields[i];\r\n\t\t\tfldName = fldObj.name();\r\n\t\t\tif (fieldNames) {\r\n\t\t\t\tif (fieldNames.indexOf(fldName) < 0) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tresult.addField(fldObj.clone(fldName, result));\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\r\n\t/**\r\n\t * Clone one record to another\r\n\t * \r\n\t * @param {Object} srcRecord source record\r\n\t * @param {Object} destRecord destination record\r\n\t */\r\n\tcloneRecord: function(srcRecord, destRecord) {\r\n\t\tvar result = destRecord || {}, \r\n\t\t\tfldName, fldObj, fldValue, newValue, \r\n\t\t\tarrFieldObj = this.getNormalFields();\r\n\r\n\t\tfor(var i = 0, len = arrFieldObj.length; i < len; i++) {\r\n\t\t\tfldObj = arrFieldObj[i];\r\n\t\t\tfldName = fldObj.name();\r\n\t\t\tfldValue = srcRecord[fldName];\r\n\t\t\tif(fldValue === undefined) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif(fldValue && jslet.isArray(fldValue)) {\r\n\t\t\t\tnewValue = [];\r\n\t\t\t\tfor(var j = 0, cnt = fldValue.length; j < cnt; j++) {\r\n\t\t\t\t\tnewValue.push(fldValue[j]);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tnewValue = fldValue;\r\n\t\t\t}\r\n\t\t\tresult[fldName] = newValue;\r\n\t\t}\r\n\t\tjslet.data.FieldValueCache.removeCache(result);\r\n\t\treturn result;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property \r\n\t *     \r\n\t * Identity whether dataset is readonly or not. This porperty will override the field readOnly property.\r\n\t * <br />Default value: false.\r\n\t * \r\n\t *     @example\r\n\t *     dsObj.readOnly(true); //Set property, return this.\r\n\t *     var propValue = dsObj.readOnly(); //Get property value.\r\n\t * \r\n\t * @param {Boolean | undefined} readOnly.\r\n\t * \r\n\t * @return {this | Boolean}\r\n\t */\r\n\treadOnly: function(readOnly) {\r\n\t\tvar Z = this;\r\n\t\tif (readOnly === undefined) {\r\n\t\t\treturn Z._readOnly;\r\n\t\t}\r\n\t\t\r\n\t\tZ._readOnly = readOnly? true: false;\r\n\t\tvar fields = Z.getNormalFields(),\r\n\t\t\tfldObj;\r\n\t\tfor(var i = 0, len = fields.length; i < len; i++) {\r\n\t\t\tfldObj = fields[i];\r\n\t\t\tfldObj._fireMetaChangedEvent('readOnly');\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property \r\n\t * \r\n\t * Set or get page size. To query paging data, you must set this property.\r\n\t * <br />Default value: 0. \r\n\t * \r\n\t *     @example\r\n\t *     dsObj.pageSize(true); //Set property, return this.\r\n\t *     var propValue = dsObj.pageSize(); //Get property value.\r\n\t * \r\n\t * @param {Integer | undefined} pageSize Page size.\r\n\t * \r\n\t * @return {this | Integer}\r\n\t */\r\n\tpageSize: function(pageSize) {\r\n\t\tif (pageSize === undefined) {\r\n\t\t\treturn this._pageSize;\r\n\t\t}\r\n\t\t\r\n\t\tjslet.Checker.test('Dataset.pageSize#pageSize', pageSize).isGTEZero();\r\n\t\tthis._pageSize = pageSize;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * @property \r\n\t * \r\n\t * Set or get page number. To query paging data, you must set this property.\r\n\t * <br />Default value: 0. \r\n\t * \r\n\t *     @example\r\n\t *     dsObj.pageNo(true); //Set property, return this.\r\n\t *     var propValue = dsObj.pageNo(); //Get property value.\r\n\t * \r\n\t * @param {Integer | undefined} pageNo Page number.\r\n\t * \r\n\t * @return {this | Integer}\r\n\t */\r\n\tpageNo: function(pageNo) {\r\n\t\tif (pageNo === undefined) {\r\n\t\t\treturn this._pageNo;\r\n\t\t}\r\n\t\t\r\n\t\tjslet.Checker.test('Dataset.pageNo#pageNo', pageNo).isGTEZero();\r\n\t\tthis._pageNo = pageNo;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Get page count, it's a read only property.\r\n\t * \r\n\t *     @example\r\n\t *     var propValue = dsObj.pageCount(); //Get property value.\r\n\t * \r\n\t * @return {Integer}\r\n\t */\r\n\tpageCount: function() {\r\n\t\treturn this._pageCount;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Get the master dataset object for \"Detail Dataset\".\r\n\t * \r\n\t *     @example\r\n\t *     var propValue = dsObj.masterDataset(); //Get property value.\r\n\t * \r\n\t * @return {jslet.data.Dataset}\r\n\t */\r\n\tmasterDataset: function(masterDataset) {\r\n\t\tif(masterDataset === undefined) {\r\n\t\t\tif(this._masterDataset) {\r\n\t\t\t\treturn jslet.data.getDataset(this._masterDataset);\r\n\t\t\t} else {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._masterDataset = masterDataset;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Get the master field name for \"Detail Dataset\".\r\n\t * \r\n\t *     @example\r\n\t *     var propValue = dsObj.masterField(); //Get property value.\r\n\t * \r\n\t * @return {String}\r\n\t */\r\n\tmasterField: function(masterField) {\r\n\t\tif(masterField === undefined) {\r\n\t\t\treturn this._masterField;\r\n\t\t}\r\n\t\tjslet.Checker.test('Dataset.masterField', masterField).isString();\r\n\t\tthis._masterField = masterField;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Get the master field object.\r\n\t * \r\n\t *     @example\r\n\t *     var propValue = dsObj.getMasterFieldObject(); //Get property value.\r\n\t * \r\n\t * @return {jslet.data.Field} Master field object.\r\n\t */\r\n\tgetMasterFieldObject: function() {\r\n\t\tif(this._masterField) {\r\n\t\t\treturn this.masterDataset().getField(this._masterField);\r\n\t\t}\r\n\t\treturn null;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @private\r\n\t * \r\n\t * Identify whether dataset is in desin mode.\r\n\t * \r\n\t * @param {Boolean | undefined} designMode.\r\n\t * \r\n\t * @return {this | Boolean}\r\n\t */\r\n\tdesignMode: function(designMode) {\r\n\t\tif (designMode === undefined) {\r\n\t\t\treturn this._designMode;\r\n\t\t}\r\n\t\t\r\n\t\tthis._designMode = designMode ? true: false;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Identify whether alerting the error message when apply changes to server.\r\n\t * <br />Default value: true.\r\n\t * \r\n\t *     @example\r\n\t *     dsObj.autoShowError(true); //Set property, return this.\r\n\t *     var propValue = dsObj.autoShowError(); //Get property value.\r\n\t * \r\n\t * @param {Boolean | undefined} autoShowError.\r\n\t * \r\n\t * @return {this | Boolean}\r\n\t */\r\n\tautoShowError: function(autoShowError) {\r\n\t\tif (autoShowError === undefined) {\r\n\t\t\treturn this._autoShowError;\r\n\t\t}\r\n\t\t\r\n\t\tthis._autoShowError = autoShowError ? true: false;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Update the host dataset or not if this dataset is a lookup dataset and its data has changed.<br />\r\n\t * If true, all datasets which host this dataset will be refreshed.\r\n\t * <br />Default value: false.\r\n\t * \r\n\t *     @example\r\n\t *     dsObj.autoRefreshHostDataset(true); //Set property, return this.\r\n\t *     var propValue = dsObj.autoRefreshHostDataset(); //Get property value.\r\n\t * \r\n\t * @param {Boolean | undefined} flag.\r\n\t * \r\n\t * @return {this | Boolean}\r\n\t */\r\n\tautoRefreshHostDataset: function(flag) {\r\n\t\tif(flag === undefined) {\r\n\t\t\treturn this._autoRefreshHostDataset;\r\n\t\t}\r\n\t\tthis._autoRefreshHostDataset = flag ? true: false;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set unit converting factor.\r\n\t * \r\n\t * @param {Number} factor When changed this value, the field's display value will be changed by 'fldValue/factor'.\r\n\t * @param {String} unitName Unit name that displays after field value.\r\n\t * \r\n\t * @return {this}\r\n\t */\r\n\tunitConvertFactor: function (factor, unitName) {\r\n\t\tvar Z = this;\r\n\t\tif (arguments.length === 0) {\r\n\t\t\treturn Z._unitConvertFactor;\r\n\t\t}\r\n\t\t\r\n\t\tjslet.Checker.test('Dataset.unitConvertFactor#factor', factor).isGTZero();\r\n\t\tjslet.Checker.test('Dataset.unitConvertFactor#unitName', unitName).isString();\r\n\t\tif (factor > 0) {\r\n\t\t\tZ._unitConvertFactor = factor;\r\n\t\t}\r\n\t\telse{\r\n\t\t\tZ._unitConvertFactor = 1;\r\n\t\t}\r\n\r\n\t\tZ._unitName = unitName;\r\n\t\tfor (var i = 0, cnt = Z._normalFields.length, fldObj; i < cnt; i++) {\r\n\t\t\tfldObj = Z._normalFields[i];\r\n\t\t\tif (fldObj.getType() == jslet.data.DataType.NUMBER && fldObj.unitConverted()) {\r\n\t\t\t\tvar fldName = fldObj.name();\r\n\t\t\t\tjslet.data.FieldValueCache.clearAll(Z, fldName);\r\n\t\t\t\tvar evt = jslet.data.RefreshEvent.updateColumnEvent(fldName);\r\n\t\t\t\tZ.refreshControl(evt);\r\n\t\t\t}\r\n\t\t} //end for\r\n\t\treturn Z;\r\n\t},\r\n\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Identify whether enable value following when append record or not. This property is control the field's property \"valueFollow\".\r\n\t * \r\n\t * @param {Boolean | undefined} valueFollowEnabled True -(Default) enable value following, false - otherwise.\r\n\t * \r\n\t * @return {this | Boolean} \r\n\t */\r\n\tvalueFollowEnabled: function(valueFollowEnabled) {\r\n\t\tif(valueFollowEnabled === undefined) {\r\n\t\t\treturn this._valueFollowEnabled;\r\n\t\t}\r\n\t\tthis._valueFollowEnabled = valueFollowEnabled;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get dataset event listener. Example:\r\n\t * \r\n\t *     @example\r\n\t *     dsFoo.datasetListener(function(eventType, dataset) {\r\n\t *\t\t console.log(eventType);\r\n\t *     });\r\n\t * \r\n\t * @param {Function} listener Dataset event listener.\r\n\t * @param {jslet.data.DatasetEvent} listener.eventType Event type.\r\n\t * @param {jslet.data.Dataset} listener.dataset Dataset object.\r\n\t * \r\n\t * @return {this | Function}\r\n\t */\r\n\tdatasetListener: function(listener) {\r\n\t\tif (arguments.length === 0) {\r\n\t\t\treturn this._datasetListener;\r\n\t\t}\r\n\t\t\r\n\t\tthis._datasetListener = listener;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Add event handler for dataset events. Example:\r\n\t * \r\n\t *     @example\r\n\t *     var handler = function() {\r\n\t *         console.log('After scroll event fired!');\r\n\t *     };\r\n\t *     dsObj.on('afterScroll', handler);\r\n\t * \r\n\t * @param {jslet.data.DatasetEvent | String} eventName Event name.\r\n\t * @param {Function | String} eventHanlder Event handler.\r\n\t */\r\n\ton: function(eventName, eventHanlder) {\r\n\t\tjslet.Checker.test('Dataset.on#eventName', eventName).isString().required();\r\n\t\tjslet.Checker.test('Dataset.on#eventHanlder', eventHanlder).required();\r\n\t\tvar Z = this;\r\n\t\tvar dsHandlers = Z._datasetEventHandler;\r\n\t\tif(!dsHandlers) {\r\n\t\t\tdsHandlers = {};\r\n\t\t\tZ._datasetEventHandler = dsHandlers;\r\n\t\t}\r\n\t\tvar evtHandlers = dsHandlers[eventName];\r\n\t\tif(!evtHandlers) {\r\n\t\t\tevtHandlers = [];\r\n\t\t\tdsHandlers[eventName] = evtHandlers;\r\n\t\t}\r\n\t\tevtHandlers.push(eventHanlder);\r\n\t},\r\n\t\r\n\t/**\r\n\t * Remove event handler. Example:\r\n\t * \r\n\t *     @example\r\n\t *     //Remove all event handlers.\r\n\t *     dsObj.off();\r\n\t *     \r\n\t *     //Remove the specified event handlers.\r\n\t *     dsObj.off('afterScroll');\r\n\t *     \r\n\t *     //Remove one event handler.\r\n\t *     var handler = function() {\r\n\t *         console.log('After scroll event fired!');\r\n\t *     };\r\n\t *     dsObj.on('afterScroll', handler);\r\n\t *     dsObj.off('afterScroll', handler);\r\n\t *     \r\n\t * \r\n\t * @param {jslet.data.DatasetEvent | String} eventName Event name.\r\n\t * @param {Function | String} eventHanlder Event handler.\r\n\t */\r\n\toff: function(eventName, eventHanlder) {\r\n\t\tvar dsHandlers = this._datasetEventHandler;\r\n\t\tif(!dsHandlers) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(!eventName && !eventHanlder) {\r\n\t\t\tthis._datasetEventHandler = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(!eventName) {\r\n\t\t\treturn;\r\n\t\t} \r\n\t\tvar evtHandlers = dsHandlers[eventName];\r\n\t\tif(!evtHandlers) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(!eventHanlder) {\r\n\t\t\tdsHandlers[eventName] = null;\r\n\t\t\tdelete dsHandlers[eventName];\r\n\t\t} else {\r\n\t\t\tvar handler;\r\n\t\t\tfor(var i = 0, len = evtHandlers.length; i < len; i++) {\r\n\t\t\t\thandler = evtHandlers[i];\r\n\t\t\t\tif(eventHanlder === handler) {\r\n\t\t\t\t\tevtHandlers.splice(i, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t * @event\r\n\t * \r\n\t * Fired when check a record if it's selectable or not. Example:\r\n\t * \r\n\t *     @example\r\n\t *     dsObj.onCheckSelectable(function(recno) {\r\n\t *       return true;\r\n\t *     });\r\n\t *  \r\n\t * @param {Function | undefined} onCheckSelectable Check selectable event.\r\n\t * @param {Boolean} onCheckSelectable.recno Record number. \r\n\t * @param {Boolean} onCheckSelectable.return Identify whether the record is selectable or not, true - record can be selected, false - otherwise.\r\n\t * \r\n\t * @return {this | Function}\r\n\t */\r\n\tonCheckSelectable: function(onCheckSelectable) {\r\n\t\tif (onCheckSelectable === undefined) {\r\n\t\t\treturn this._onCheckSelectable;\r\n\t\t}\r\n\t\t\r\n\t\tthis._onCheckSelectable = onCheckSelectable;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @event\r\n\t * \r\n\t * Fired when querying data from server.\r\n\t * \r\n\t *     @example\r\n\t *     dsObj.onDataQuerying(function(queryResult) {\r\n\t *       \r\n\t *     });\r\n\t *  \r\n\t * @param {Function | undefined} onDataQuerying Data quering event.\r\n\t * @param {Object} onDataQuerying.queryResult The data from server.\r\n\t * \r\n\t * @return {this | Function}\r\n\t */\r\n\tonDataQuerying: function(onDataQuerying) {\r\n\t\tif (onDataQuerying === undefined) {\r\n\t\t\treturn this._onDataQuerying;\r\n\t\t}\r\n\t\t\r\n\t\tthis._onDataQuerying = onDataQuerying;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @event\r\n\t * \r\n\t * Fired after querying data from server.\r\n\t * \r\n\t *     @example\r\n\t *     dsObj.onDataQueried(function() {\r\n\t *       \r\n\t *     });\r\n\t *  \r\n\t * @param {Function | undefined} onDataQueried Data queried event.\r\n\t * \r\n\t * @return {this | Function}\r\n\t */\r\n\tonDataQueried: function(onDataQueried) {\r\n\t\tif (onDataQueried === undefined) {\r\n\t\t\treturn this._onDataQueried;\r\n\t\t}\r\n\t\t\r\n\t\tthis._onDataQueried = onDataQueried;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @event\r\n\t * \r\n\t * Fired after submitting data to server.\r\n\t * \r\n\t *     @example\r\n\t *     dsObj.onDataSubmitted(function() {\r\n\t *       \r\n\t *     });\r\n\t *  \r\n\t * @param {Function | undefined} onDataSubmitted Data submitted event.\r\n\t * \r\n\t * @return {this | Function}\r\n\t */\r\n\tonDataSubmitted: function(onDataSubmitted) {\r\n\t\tif (onDataSubmitted === undefined) {\r\n\t\t\treturn this._onDataSubmitted;\r\n\t\t}\r\n\t\t\r\n\t\tthis._onDataSubmitted = onDataSubmitted;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tfieldValidator: function() {\r\n\t\treturn this._fieldValidator;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @event\r\n\t * \r\n\t * Set or get dataset onFieldChanged event handler. Example:\r\n\t * \r\n\t *     @example\r\n\t *     dsFoo.onFieldChanged(function(fldName, value, valueIndex) {\r\n\t *     });\r\n\t * \r\n\t * @param {Function} onFieldChanged Dataset on field change event handler.\r\n\t * @param {String} onFieldChanged.fldName Field name.\r\n\t * @param {Object} onFieldChanged.fldValue Field value.\r\n\t * @param {Integer} onFieldChanged.valueIndex Field value index, only worked when field value style is BETWEEN or MULTIPLE.\r\n\t * \r\n\t * @return {this | Function}\r\n\t */\r\n\tonFieldChanged: function(onFieldChanged) {\r\n\t\tif (onFieldChanged === undefined) {\r\n\t\t\treturn this._onFieldChanged;\r\n\t\t}\r\n\t\t\r\n\t\tthis._onFieldChanged = onFieldChanged;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @deprecated\r\n\t * Use onFieldChanged instead.\r\n\t */\r\n\tonFieldChange: function(onFieldChanged) {\r\n\t\tif (onFieldChanged === undefined) {\r\n\t\t\treturn this._onFieldChanged;\r\n\t\t}\r\n\t\t\r\n\t\tthis._onFieldChanged = onFieldChanged;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\tonFieldFocusing: function(onFieldFocusing) {\r\n\t\tif(onFieldFocusing === undefined) {\r\n\t\t\treturn this._onFieldFocusing;\r\n\t\t}\r\n\t\tthis._onFieldFocusing = onFieldFocusing;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Identify if firing global event or not when field value or field meta changed.\r\n\t */\r\n\tisFireGlobalEvent: function(isFireGlobalEvent) {\r\n\t\tif(isFireGlobalEvent === undefined) {\r\n\t\t\treturn this._isFireGlobalEvent;\r\n\t\t}\r\n\t\tthis._isFireGlobalEvent = isFireGlobalEvent? true: false;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Get dataset fields.\r\n\t * \r\n\t * @return {jslet.data.Field[]} Dataset fields.\r\n\t */\r\n\tgetFields: function () {\r\n\t\treturn this._fields;\r\n\t},\r\n\r\n\t/**\r\n\t * Get fields which is without child fields.\r\n\t * \r\n\t * @return {jslet.data.Field[]}\r\n\t */\r\n\tgetNormalFields: function() {\r\n\t\treturn this._normalFields;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Get field names exclude the fields with children.\r\n\t * \r\n\t * @return {String[]} Editable field names.\r\n\t */\r\n\tgetEditableFields: function() {\r\n\t\tvar fields = this._normalFields,\r\n\t\t\tfldObj,\r\n\t\t\tresult = [];\r\n\t\t\r\n\t\tfor(var i = 0, len = fields.length; i < len; i++) {\r\n\t\t\tfldObj = fields[i];\r\n\t\t\tif(fldObj.visible() && !fldObj.disabled() && !fldObj.readOnly()) {\r\n\t\t\t\tresult.push(fldObj.name());\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\t\r\n\tgetFirstFocusField: function() {\r\n\t\tvar Z = this;\r\n\t\tvar fields = Z.mergedFocusedFields();\r\n\t\tif(fields && fields.length > 0) {\r\n\t\t\treturn fields[0];\r\n\t\t}\r\n\t\tfields = Z.getEditableFields();\r\n\t\tif(fields && fields.length > 0) {\r\n\t\t\treturn fields[0];\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t * Set the specified fields to be visible, others to be hidden. Example:\r\n\t * \r\n\t *     @example\r\n\t *     dsFoo.setVisibleFields(['field1', 'field3']);\r\n\t * \r\n\t * @param {String[]} visibleFields Array of visible field name.\r\n\t * \r\n\t * @return {this}\r\n\t */\r\n\tsetVisibleFields: function(fieldNameArray) {\r\n\t\tif(!fieldNameArray) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tif(jslet.isString(fieldNameArray)) {\r\n\t\t\tfieldNameArray = fieldNameArray.split(',');\r\n\t\t}\r\n\t\tjslet.Checker.test('Dataset.setVisibleFields#fieldNameArray', fieldNameArray).isArray();\r\n\t\tthis._travelField(this._fields, function(fldObj) {\r\n\t\t\tfldObj.visible(false);\r\n\t\t\treturn false; //Identify if cancel traveling or not\r\n\t\t});\r\n\t\tfor(var i = 0, len = fieldNameArray.length; i < len; i++) {\r\n\t\t\tvar fldName = jslet.trim(fieldNameArray[i]);\r\n\t\t\tvar fldObj = this.getField(fldName);\r\n\t\t\tif(fldObj) {\r\n\t\t\t\tfldObj.visible(true);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t_travelField: function(fields, callBackFn) {\r\n\t\tif (!callBackFn || !fields) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar isBreak = false;\r\n\t\tfor(var i = 0, len = fields.length; i < len; i++) {\r\n\t\t\tvar fldObj = fields[i];\r\n\t\t\tisBreak = callBackFn(fldObj);\r\n\t\t\tif (isBreak) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar children = fldObj.children();\r\n\t\t\tif(children && children.length > 0) {\r\n\t\t\t\tisBreak = this._travelField(fldObj.children(), callBackFn);\r\n\t\t\t\tif (isBreak) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn isBreak;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t_cacheNormalFields: function() {\r\n\t\tvar arrFields = this._normalFields = [];\r\n\t\tthis._travelField(this._fields, function(fldObj) {\r\n\t\t\tvar children = fldObj.children();\r\n\t\t\tvar dataType = fldObj.dataType();\r\n\t\t\tif((!children || children.length === 0) && dataType !== jslet.data.DataType.ACTION && dataType !== jslet.data.DataType.EDITACTION) {\r\n\t\t\t\tarrFields.push(fldObj);\r\n\t\t\t}\r\n\t\t\treturn false; //Identify if cancel traveling or not\r\n\t\t});\r\n\t\tthis._normalFields = arrFields;\r\n\t\tthis.calcFocusedFields();\r\n\t},\r\n\t\r\n\t/**\r\n\t * Add some field objects.\r\n\t * \r\n\t * @param {jslet.data.Field[]} fldObjs Field objects.\r\n\t * \r\n\t * @return {this}\r\n\t */\r\n\taddFields: function(arrFldObj) {\r\n\t\tjslet.Checker.test('Dataset.addFields#arrFldObj', arrFldObj).required().isArray();\r\n\t\tvar Z = this,\r\n\t\t\tlen = arrFldObj.length;\r\n\t\tif(len === 0) {\r\n\t\t\treturn Z;\r\n\t\t}\r\n\t\tfor(var i = 0; i < len; i++) {\r\n\t\t\tZ.addField(arrFldObj[i], true);\r\n\t\t}\r\n\t\tZ.refreshDisplayOrder();\r\n\t\tZ.refreshAggregatedFields();\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t* Add an exist field object. If creating a new field, use \"createField\" instead.\r\n\t* \r\n\t*     @example\r\n\t*     dsObj.addField(fldObj);\r\n\t* \r\n\t* @param {jslet.data.Field} fldObj Field object.\r\n\t* \r\n\t* @return {this}\r\n\t*/\r\n\taddField: function (fldObj, batchMode) {\r\n\t\tjslet.Checker.test('Dataset.addField#fldObj', fldObj).required().isClass(jslet.data.Field.className);\r\n\t\tvar Z = this,\r\n\t\t\tfldName = fldObj.name();\r\n\t\tif(Z.getField(fldName)) {\r\n\t\t\tZ.removeField(fldName);\r\n\t\t}\r\n\t\tfldObj.dataset(Z);\r\n\t\tZ._fields.push(fldObj);\r\n\t\tvar dispOrder = fldObj.displayOrder(); \r\n\t\tif (!dispOrder && dispOrder !== 0) {\r\n\t\t\tfldObj.displayOrder(Z._fields.length);\r\n\t\t}\r\n\t\tvar dataType = fldObj.dataType();\r\n\t\tif (dataType == jslet.data.DataType.DATASET) {\r\n\t\t\tif (!Z._detailDatasetFields) {\r\n\t\t\t\tZ._detailDatasetFields = [];\r\n\t\t\t}\r\n\t\t\tZ._detailDatasetFields.push(fldObj);\r\n\t\t}\r\n\t\tif (dataType == jslet.data.DataType.PROXY) {\r\n\t\t\tif (!Z._proxyFields) {\r\n\t\t\t\tZ._proxyFields = [];\r\n\t\t\t}\r\n\t\t\tZ._proxyFields.push(fldObj);\r\n\t\t}\r\n\t\t\r\n\t\tfunction addFormulaField(fldName, fldObj) {\r\n\t\t\tvar children = fldObj.children();\r\n\t\t\tif(!children || children.length === 0) {\r\n\t\t\t\tZ._fieldsMap[fldName] = fldObj;\r\n\t\t\t\tZ.addInnerFormulaField(fldName, fldObj.formula());\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar childFldObj;\r\n\t\t\tfor(var i = 0, len = children.length; i < len; i++) {\r\n\t\t\t\tchildFldObj = children[i]; \r\n\t\t\t\taddFormulaField(childFldObj.name, childFldObj);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\taddFormulaField(fldName, fldObj);\r\n\t\t\r\n\t\tif(!batchMode) {\r\n\t\t\tZ.refreshDisplayOrder();\r\n\t\t\tZ.refreshAggregatedFields();\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Add specified fields of source dataset into this dataset.\r\n\t * \r\n\t *     @example\r\n\t *     var srcDsObj = jslet.data.getDataset('srcDataset');\r\n\t *     dsObj.addFieldFromDataset(srcDsObj, ['fld1', 'fld2']);\r\n\t * \r\n\t * @param {jslet.data.Dataset} srcDataset Source dataset where fields are added from.\r\n\t * @param {String[]} fieldNames A list of field names which are copied to this dataset.\r\n\t * \r\n\t * @return {this}\r\n\t */\r\n\taddFieldFromDataset: function(srcDataset, fieldNames) {\r\n\t\tjslet.Checker.test('Dataset.addFieldFromDataset#srcDataset', srcDataset).required().isClass(jslet.data.Dataset.className);\r\n\t\tjslet.Checker.test('Dataset.addFieldFromDataset#fieldNames', fieldNames).isArray();\r\n\t\tvar Z = this,\r\n\t\t\tfldObj, fldName, \r\n\t\t\tsrcFields = srcDataset.getFields();\r\n\t\tfor(var i = 0, cnt = srcFields.length; i < cnt; i++) {\r\n\t\t\tfldObj = srcFields[i];\r\n\t\t\tfldName = fldObj.name();\r\n\t\t\tif (fieldNames) {\r\n\t\t\t\tif (fieldNames.indexOf(fldName) < 0) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.addField(fldObj.clone(fldName, this), true);\r\n\t\t}\r\n\t\tZ.refreshDisplayOrder();\r\n\t\tZ.refreshAggregatedFields();\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\trefreshDisplayOrder: function() {\r\n\t\tthis._fields.sort(jslet.data.displayOrderComparator);\r\n\t\tthis._cacheNormalFields();\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\tmoveField: function(fromFldName, toFldName) {\r\n\t\tvar Z = this,\r\n\t\t\tfromFldObj = Z.getField(fromFldName),\r\n\t\t\ttoFldObj = Z.getField(toFldName),\r\n\t\t\tfromParent = fromFldObj.parent(),\r\n\t\t\ttoParent = toFldObj.parent();\r\n\t\tif(!fromFldObj || !toFldObj || fromParent != toParent) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tvar fields;\r\n\t\tif(fromParent) {\r\n\t\t\tfields = fromParent.children();\r\n\t\t} else {\r\n\t\t\tfields = Z._fields;\r\n\t\t}\r\n\t\tvar fldObj, fldName, i,\r\n\t\t\tfromOrder = fromFldObj.displayOrder(),\r\n\t\t\ttoOrder = toFldObj.displayOrder(),\r\n\t\t\tfromIndex = fields.indexOf(fromFldObj),\r\n\t\t\ttoIndex = fields.indexOf(toFldObj),\r\n\t\t\toldDesignMode = Z.designMode();\r\n\t\tZ.designMode(false);\r\n\t\ttry {\r\n\t\t\tfromFldObj.displayOrder(toFldObj.displayOrder());\r\n\t\t\tif(fromIndex < toIndex) {\r\n\t\t\t\tfor(i = fromIndex + 1; i <= toIndex; i++) {\r\n\t\t\t\t\tfldObj = fields[i];\r\n\t\t\t\t\tfldObj.displayOrder(fldObj.displayOrder() - 1);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfor(i = toIndex; i < fromIndex; i++) {\r\n\t\t\t\t\tfldObj = fields[i];\r\n\t\t\t\t\tfldObj.displayOrder(fldObj.displayOrder() + 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} finally {\r\n\t\t\tZ.designMode(oldDesignMode);\r\n\t\t}\r\n\t\tZ.refreshDisplayOrder();\r\n\t\tif(Z.designMode() && Z.isFireGlobalEvent()) {\r\n\t\t\tvar handler = jslet.data.globalDataHandler.fieldMetaChanged();\r\n\t\t\tif(handler) {\r\n\t\t\t\thandler.call(this, Z, null, 'displayOrder');\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Remove field by field name.\r\n\t * \r\n\t * @param {String} fldName Field name.\r\n\t * \r\n\t * @return {this}\r\n\t */\r\n\tremoveField: function (fldName) {\r\n\t\tfunction removeFormulaField(fldName, fldObj) {\r\n\t\t\tvar children = fldObj.children();\r\n\t\t\tif(!children || children.length === 0) {\r\n\t\t\t\tdelete Z._fieldsMap[fldName];\r\n\t\t\t\tZ.removeInnerFormulaField(fldName);\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\tvar childFldObj;\r\n\t\t\tfor(var i = 0, len = children.length; i < len; i++) {\r\n\t\t\t\tchildFldObj = children[i];\r\n\t\t\t\tremoveFormulaField(childFldObj.name(), childFldObj);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tjslet.Checker.test('Dataset.removeField#fldName', fldName).required().isString();\r\n\t\tfldName = jslet.trim(fldName);\r\n\t\tvar Z = this,\r\n\t\t\tfldObj = Z.getField(fldName);\r\n\t\tif (fldObj) {\r\n\t\t\tif (fldObj.dataType() == jslet.data.DataType.DATASET) {\r\n\t\t\t\tvar k = Z._detailDatasetFields.indexOf(fldObj);\r\n\t\t\t\tif (k >= 0) {\r\n\t\t\t\t\tZ._detailDatasetFields.splice(k, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar i = Z._fields.indexOf(fldObj);\r\n\t\t\tif(i >= 0) {\r\n\t\t\t\tZ._fields.splice(i, 1);\r\n\t\t\t}\r\n\t\t\tfldObj.dataset(null);\r\n\t\t\tZ._cacheNormalFields();\r\n\t\t\tjslet.data.FieldValueCache.clearAll(Z, fldName);\r\n\r\n\t\t\tremoveFormulaField(fldName, fldObj);\r\n\t\t\tZ.refreshAggregatedFields();\r\n\t\t}\r\n\t\tvar parentFldObj = fldObj.parent();\r\n\t\tif(parentFldObj) {\r\n\t\t\tvar children = parentFldObj.children();\r\n\t\t\tvar k = children.indexOf(fldObj);\r\n\t\t\tchildren.splice(k, 1);\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Clear all fields.\r\n\t */\r\n\tclearFields: function(fields) {\r\n\t\tif (!fields) {\r\n\t\t\tfields = this._fields;\r\n\t\t}\r\n\t\tvar start = fields.length - 1;\r\n\t\tfor(var i = start; i >= 0; i--) {\r\n\t\t\tvar fldObj = fields[i];\r\n\t\t\tvar children = fldObj.children();\r\n\t\t\tif(children && children.length > 0) {\r\n\t\t\t\tthis.clearFields(children);\r\n\t\t\t}\r\n\t\t\tthis.removeField(fldObj.name());\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\trefreshAggregatedFields: function() {\r\n\t\tvar Z = this;\r\n\t\tZ._aggregatedFields = null;\r\n\t\tvar fields = Z.getNormalFields(), \r\n\t\t\tfldObj, aggregatedFields = [];\r\n\t\tfor(var i = 0, len = fields.length; i< len; i++) {\r\n\t\t\tfldObj = fields[i];\r\n\t\t\tif(fldObj.aggregated()) {\r\n\t\t\t\taggregatedFields.push(fldObj);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(aggregatedFields.length > 0) {\r\n\t\t\tZ._aggregatedFields = aggregatedFields;\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Get field object by name.\r\n\t * \r\n\t * @param {String} fldName Field name.\r\n\t * \r\n\t * @return jslet.data.Field\r\n\t */\r\n\tgetField: function (fldName) {\r\n\t\tjslet.Checker.test('Dataset.getField#fldName', fldName).isString().required();\r\n\t\tfldName = jslet.trim(fldName);\r\n\r\n\t\tvar arrField = fldName.split('.'), fldName1 = arrField[0], foundInMap = true;\r\n\t\tvar fldObj = this._fieldsMap[fldName1];\r\n\t\tif(!fldObj) {\r\n\t\t\tfoundInMap = false;\r\n\t\t\tthis._travelField(this._fields, function(fldObj1) {\r\n\t\t\t\tvar cancelTravel = false;\r\n\t\t\t\tif (fldObj1.name() == fldName1) {\r\n\t\t\t\t\tfldObj = fldObj1;\r\n\t\t\t\t\tcancelTravel = true;\r\n\t\t\t\t}\r\n\t\t\t\treturn cancelTravel; //Identify if cancel traveling or not\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (!fldObj) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tif(!foundInMap) {\r\n\t\t\tthis._fieldsMap[fldName1] = fldObj;\r\n\t\t}\r\n\t\tif (arrField.length == 1) {\r\n\t\t\treturn fldObj;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tarrField.splice(0, 1);\r\n\t\t\tvar lkf = fldObj.lookup();//Lookup dataset\r\n\t\t\tif (lkf) {\r\n\t\t\t\tvar lkds = lkf.dataset();\r\n\t\t\t\tif (lkds) {\r\n\t\t\t\t\treturn lkds.getField(arrField.join('.'));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvar dsDetail = fldObj.detailDataset(); //Detail dataset\r\n\t\t\t\tif(dsDetail) {\r\n\t\t\t\t\treturn dsDetail.getField(arrField.join('.'));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t},\r\n\r\n\t/**\r\n\t * Get top field object by name.\r\n\t * \r\n\t * @param {String} fldName Field name.\r\n\t * \r\n\t * @return jslet.data.Field\r\n\t */\r\n\tgetTopField: function (fldName) {\r\n\t\tjslet.Checker.test('Dataset.getField#fldName', fldName).isString().required();\r\n\t\tfldName = jslet.trim(fldName);\r\n\t\t\r\n\t\tvar fldObj = this.getField(fldName);\r\n\t\tif (fldObj) {\r\n\t\t\twhile(true) {\r\n\t\t\t\tif (fldObj.parent() === null) {\r\n\t\t\t\t\treturn fldObj;\r\n\t\t\t\t}\r\n\t\t\t\tfldObj = fldObj.parent();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @private\r\n\t * Sort function.\r\n\t * \r\n\t * @param {Object} rec1: dataset record.\r\n\t * @param {Object} rec2: dataset record.\r\n\t */\r\n\tsortFunc: function (rec1, rec2) {\r\n\t\tvar dsObj = jslet.temp.sortDataset;\r\n\t\t\r\n\t\tvar indexFlds = dsObj._sortingFields,\r\n\t\t\tstrFields = [],\r\n\t\t\tfname, idxFldCfg, i, cnt;\r\n\t\tfor (i = 0, cnt = indexFlds.length; i < cnt; i++) {\r\n\t\t\tidxFldCfg = indexFlds[i];\r\n\t\t\tfname = idxFldCfg.fieldName;\r\n\t\t\tif(idxFldCfg.useTextToSort || dsObj.getField(fname).getType() === jslet.data.DataType.STRING) {\r\n\t\t\t\tstrFields.push(fname);\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar  v1, v2, flag = 1;\r\n\t\tfor (i = 0, cnt = indexFlds.length; i < cnt; i++) {\r\n\t\t\tidxFldCfg = indexFlds[i];\r\n\t\t\tfname = idxFldCfg.fieldName;\r\n\t\t\tif(idxFldCfg.useTextToSort) {\r\n\t\t\t\tv1 = dsObj.getFieldTextByRecord(rec1, fname);\r\n\t\t\t\tv2 = dsObj.getFieldTextByRecord(rec2, fname);\r\n\t\t\t} else {\r\n\t\t\t\tv1 = dsObj.getFieldValueByRecord(rec1, fname);\r\n\t\t\t\tv2 = dsObj.getFieldValueByRecord(rec2, fname);\r\n\t\t\t}\r\n\t\t\tif (v1 == v2) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (v1 !== null && v2 !== null) {\r\n\t\t\t\tif(strFields.indexOf(fname) >= 0) {\r\n\t\t\t\t\tv1 = v1.toLowerCase();\r\n\t\t\t\t\tv2 = v2.toLowerCase();\r\n\t\t\t\t\tflag = (v1.localeCompare(v2) < 0? -1: 1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tflag = (v1 < v2 ? -1: 1);\r\n\t\t\t\t}\r\n\t\t\t} else if (v1 === null && v2 !== null) {\r\n\t\t\t\tflag = -1;\r\n\t\t\t} else {\r\n\t\t\t\tif (v1 !== null && v2 === null) {\r\n\t\t\t\t\tflag = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn flag * idxFldCfg.order;\r\n\t\t} //end for\r\n\t\treturn 0;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get fixed index fields, field names separated by comma(','). <br />\r\n\t * If this property is set, data records will be ordered by properties: fixedIndexFields and indexFields. <br />\r\n\t * Diffence of fixedIndexFields and indexFields: indexFields can changed by UI control dynamically(like clicking the column head of {@link jslet.ui.DBTable}), and fixedIndexFields won't.<br />\r\n\t * Example:\r\n\t * \r\n\t *     @example\r\n\t *     dsObj.fixedIndexFields('fld2,fld3'); //Set property, return this.\r\n\t *     var propValue = dsObj.fixedIndexFields(); //Get property value.\r\n\t * \r\n\t * @param {String | undefined} fixedIndexFields Fixed index field name.\r\n\t * \r\n\t * @return {this | String}\r\n\t */\r\n\tfixedIndexFields: function (fixedIndexFields) {\r\n\t\tvar Z = this;\r\n\t\tif (fixedIndexFields === undefined) {\r\n\t\t\treturn Z._fixedIndexFields;\r\n\t\t}\r\n\t\t\r\n\t\tjslet.Checker.test('Dataset.fixedIndexFields', fixedIndexFields).isString();\r\n\t\t\r\n\t\tZ._fixedIndexFields = fixedIndexFields? jslet.trim(fixedIndexFields): null;\r\n\t\tZ._innerFixedIndexFields = fixedIndexFields? Z._parseIndexFields(fixedIndexFields): [];\r\n\t\tvar idxFld, fixedIdxFld;\r\n\t\tfor(var i = Z._innerIndexFields.length - 1; i>=0; i--) {\r\n\t\t\tidxFld = Z._innerIndexFields[i];\r\n\t\t\tfor(var j = 0, len = Z._innerFixedIndexFields.length; j < len; j++) {\r\n\t\t\t\tfixedIdxFld = Z._innerFixedIndexFields[j];\r\n\t\t\t\tif(idxFld.fieldName === fixedIdxFld.fieldName) {\r\n\t\t\t\t\tZ._innerIndexFields.splice(i, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tZ._sortByFields();\r\n\t\treturn Z;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get index fields, field names separated by comma(','). <br />\r\n\t * If this property is set, data records will be ordered by properties: fixedIndexFields and indexFields. <br />\r\n\t * Diffence of fixedIndexFields and indexFields: indexFields can changed by UI control dynamically(like clicking the column head of {@link jslet.ui.DBTable}), and fixedIndexFields won't.<br />\r\n\t * Example:\r\n\t * \r\n\t *     @example\r\n\t *     dsObj.indexFields('fld2,fld3'); //Set property, return this.\r\n\t *     var propValue = dsObj.indexFields(); //Get property value.\r\n\t * \r\n\t * @param {String | undefined} indexFields Index field name.\r\n\t * \r\n\t * @return {this | String}\r\n\t */\r\n\tindexFields: function (indFlds) {\r\n\t\tvar Z = this;\r\n\t\tif (indFlds === undefined) {\r\n\t\t\treturn Z._indexFields;\r\n\t\t}\r\n\t\t\r\n\t\tjslet.Checker.test('Dataset.indexFields', indFlds).isString();\r\n\t\tindFlds = indFlds? jslet.trim(indFlds): null;\r\n\t\tif(!indFlds && !Z._indexFields && !Z._fixedIndexFields) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tZ._indexFields = indFlds;\r\n\t\tZ._innerIndexFields = indFlds? Z._parseIndexFields(indFlds): [];\r\n\t\tvar idxFld, fixedIdxFld;\r\n\t\tfor(var i = Z._innerIndexFields.length - 1; i>=0; i--) {\r\n\t\t\tidxFld = Z._innerIndexFields[i];\r\n\t\t\tfor(var j = 0, len = Z._innerFixedIndexFields.length; j < len; j++) {\r\n\t\t\t\tfixedIdxFld = Z._innerFixedIndexFields[j];\r\n\t\t\t\tif(idxFld.fieldName === fixedIdxFld.fieldName) {\r\n\t\t\t\t\tfixedIdxFld.order = idxFld.order;\r\n\t\t\t\t\tZ._innerIndexFields.splice(i, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tZ._sortByFields();\r\n\t\treturn Z;\r\n\t},\r\n\r\n\tmergedIndexFields: function() {\r\n\t\tvar Z = this, i, len,\r\n\t\t\tresult = [];\r\n\t\tfor(i = 0, len = Z._innerFixedIndexFields.length; i < len; i++) {\r\n\t\t\tresult.push(Z._innerFixedIndexFields[i]);\r\n\t\t}\r\n\t\tfor(i = 0, len = Z._innerIndexFields.length; i < len; i++) {\r\n\t\t\tresult.push(Z._innerIndexFields[i]);\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\t\r\n\ttoggleIndexField: function(fldName, emptyIndexFields) {\r\n\t\tvar Z = this,\r\n\t\t\tidxFld, i, \r\n\t\t\tfound = false;\r\n\t\t//Check fixed index fields\r\n\t\tfor(i = Z._innerFixedIndexFields.length - 1; i>=0; i--) {\r\n\t\t\tidxFld = Z._innerFixedIndexFields[i];\r\n\t\t\tif(idxFld.fieldName === fldName) {\r\n\t\t\t\tidxFld.order = (idxFld.order === 1 ? -1: 1);\r\n\t\t\t\tfound = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(found) {\r\n\t\t\tif(emptyIndexFields) {\r\n\t\t\t\tZ._innerIndexFields = [];\r\n\t\t\t}\r\n\t\t\tZ._sortByFields();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t//Check index fields\r\n\t\tfound = false;\r\n\t\tfor(i = Z._innerIndexFields.length - 1; i>=0; i--) {\r\n\t\t\tidxFld = Z._innerIndexFields[i];\r\n\t\t\tif(idxFld.fieldName === fldName) {\r\n\t\t\t\tidxFld.order = (idxFld.order === 1 ? -1: 1);\r\n\t\t\t\tfound = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(found) {\r\n\t\t\tif(emptyIndexFields) {\r\n\t\t\t\tZ._innerIndexFields = [];\r\n\t\t\t\tZ._innerIndexFields.push(idxFld);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif(emptyIndexFields) {\r\n\t\t\t\tZ._innerIndexFields = [];\r\n\t\t\t}\r\n\t\t\tidxFld = {fieldName: fldName, order: 1};\r\n\t\t\tZ._innerIndexFields.push(idxFld);\r\n\t\t}\r\n\t\tZ._sortByFields();\r\n\t},\r\n\t\r\n\t_parseIndexFields: function(indexFields) {\r\n\t\tvar arrFields = indexFields.split(','), \r\n\t\t\tfname, fldObj, arrFName, indexNameObj, \r\n\t\t\torder = 1;//asce\r\n\t\tvar result = [];\r\n\t\tfor (var i = 0, cnt = arrFields.length; i < cnt; i++) {\r\n\t\t\tfname = jslet.trim(arrFields[i]);\r\n\t\t\tarrFName = fname.split(' ');\r\n\t\t\tif (arrFName.length == 1) {\r\n\t\t\t\torder = 1;\r\n\t\t\t} else if (arrFName[1].toLowerCase() == 'asce') {\r\n\t\t\t\torder = 1; //asce\r\n\t\t\t} else {\r\n\t\t\t\torder = -1; //desc\r\n\t\t\t}\r\n\t\t\tresult.push({fieldName: arrFName[0], order: order});\r\n\t\t} //end for\r\n\t\treturn result;\r\n\t},\r\n\t\r\n\t_sortByFields: function() {\r\n\t\tvar Z = this;\r\n\t\tif (!Z.hasRecord()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tZ.selection.removeAll();\r\n\r\n\t\tZ._sortingFields = [];\r\n\t\tvar idxFld, i, cnt;\r\n\t\tfor (i = 0, cnt = Z._innerFixedIndexFields.length; i < cnt; i++) {\r\n\t\t\tidxFld = Z._innerFixedIndexFields[i];\r\n\t\t\tZ._createIndexCfg(idxFld.fieldName, idxFld.order);\r\n\t\t} //end for\r\n\t\tfor (i = 0, cnt = Z._innerIndexFields.length; i < cnt; i++) {\r\n\t\t\tidxFld = Z._innerIndexFields[i];\r\n\t\t\tZ._createIndexCfg(idxFld.fieldName, idxFld.order);\r\n\t\t} //end for\r\n\r\n\t\tif(Z._sortingFields.length === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar currRec = Z.getRecord(), \r\n\t\t\tflag = Z.isContextRuleEnabled();\r\n\t\tif (flag) {\r\n\t\t\tZ.disableContextRule();\r\n\t\t}\r\n\t\tZ.disableControls();\r\n\t\tjslet.temp.sortDataset = Z;\r\n\t\ttry {\r\n\t\t\tZ.records().sort(Z.sortFunc);\r\n\t\t\tZ._refreshInnerRecno();\r\n\t\t} finally {\r\n\t\t\tjslet.temp.sortDataset = null;\r\n\t\t\tZ.moveToRecord(currRec);\r\n\t\t\tif (flag) {\r\n\t\t\t\tZ.enableContextRule();\r\n\t\t\t}\r\n\t\t\tZ.enableControls();\r\n\t\t}\t\t\r\n\t},\r\n\t\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t_createIndexCfg: function(fname, order) {\r\n\t\tvar Z = this,\r\n\t\t\tfldObj = fname;\r\n\t\tif(jslet.isString(fname)) {\r\n\t\t\tfldObj = Z.getField(fname);\r\n\t\t}\r\n\t\tif (!fldObj) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(fldObj.dataset() !== Z) {\r\n\t\t\tZ._combineIndexCfg(fname, order);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar children = fldObj.children();\r\n\t\tif (!children || children.length === 0) {\r\n\t\t\tvar useTextToSort = true;\r\n\t\t\tif(fldObj.getType() === 'N' && !fldObj.lookup()) {\r\n\t\t\t\tuseTextToSort = false;\r\n\t\t\t}\r\n\t\t\tZ._combineIndexCfg(fldObj.name(), order, useTextToSort);\r\n\t\t} else {\r\n\t\t\tfor(var k = 0, childCnt = children.length; k < childCnt; k++) {\r\n\t\t\t\tZ._createIndexCfg(children[k], order);\r\n\t\t\t}\r\n\t\t}\t\t\r\n\t},\r\n\t\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t_combineIndexCfg: function(fldName, order, useTextToSort) {\r\n\t\tfor(var i = 0, len = this._sortingFields.length; i < len; i++) {\r\n\t\t\tif (this._sortingFields[i].fieldName == fldName) {\r\n\t\t\t\tthis._sortingFields.splice(i,1);//remove duplicated field\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar indexNameObj = {\r\n\t\t\t\tfieldName: fldName,\r\n\t\t\t\torder: order,\r\n\t\t\t\tuseTextToSort: useTextToSort\r\n\t\t\t};\r\n\t\tthis._sortingFields.push(indexNameObj);\r\n\t},\r\n\t\r\n\t_getWholeFilter: function() {\r\n\t\tvar Z = this, \r\n\t\t\tresult = Z._fixedFilter;\r\n\t\tif(result) {\r\n\t\t\tif(Z._filter) {\r\n\t\t\t\treturn '(' + result + ') && (' + Z._filter + ')';\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tresult = Z._filter;\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get dataset fixed filter expression.<br />\r\n\t * If this property is set, data records will be filtered by properties: fixedFilter and Filter. <br />\r\n\t * Diffence of fixedFilter and filter: filter can changed by UI control dynamically(like {@link jslet.ui.DBAutoComplete}, {@link jslet.ui.DBTable}), and fixedFilter won't.\r\n\t * Example:\r\n\t * \r\n\t *     @example\r\n\t *     dsObj.fixedFilter('[age] > 20'); //Set property, return this.\r\n\t *     var propValue = dsObj.fixedFilter(); //Get property value.\r\n\t * \r\n\t * @param {String | undefined} fixedFilter Fixed filter expression.\r\n\t * \r\n\t * @return {this | String}\r\n\t */\r\n\tfixedFilter: function (fixedFilter) {\r\n\t\tvar Z = this;\r\n\t\tif (fixedFilter === undefined) {\r\n\t\t\treturn Z._fixedFilter;\r\n\t\t}\r\n\t\t\r\n\t\tjslet.Checker.test('dataset.fixedFilter', fixedFilter).isString();\r\n\t\tif(fixedFilter) {\r\n\t\t\tfixedFilter = jslet.trim(fixedFilter);\r\n\t\t}\r\n\t\tvar oldFilter = Z._getWholeFilter();\r\n\t\tZ._fixedFilter = fixedFilter;\r\n\t\tvar newFilter = Z._getWholeFilter();\r\n\t\t\r\n\t\tif (!newFilter) {\r\n\t\t\tZ._innerFilter = null;\r\n\t\t\tZ._filtered = false;\r\n\t\t\tZ._filteredRecnoArray = null;\r\n\t\t} else {\r\n\t\t\tif(oldFilter == newFilter) {\r\n\t\t\t\treturn this;\r\n\t\t\t} else {\r\n\t\t\t\tZ._innerFilter = new jslet.data.Expression(Z, newFilter);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(Z._filtered) {\r\n\t\t\tZ._doFilterChanged();\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get dataset filter expression.<br />\r\n\t * If this property is set, data records will be filtered by properties: fixedFilter and Filter. <br />\r\n\t * Diffence of fixedFilter and filter: filter can changed by UI control dynamically(like {@link jslet.ui.DBAutoComplete}, {@link jslet.ui.DBTable}), and fixedFilter won't.\r\n\t * Example:\r\n\t * \r\n\t *     @example\r\n\t *     dsObj.filter('[age] > 20'); //Set property, return this.\r\n\t *     dsObj.filter('[name] like \"Bob%\"');\r\n\t *     var propValue = dsObj.filter(); //Get property value.\r\n\t * \r\n\t * @param {String | undefined} filter Filter expression.\r\n\t * \r\n\t * @return {this | String}\r\n\t */\r\n\tfilter: function (filterExpr) {\r\n\t\tvar Z = this;\r\n\t\tif (filterExpr === undefined) {\r\n\t\t\treturn Z._filter;\r\n\t\t}\r\n\t\t\r\n\t\tjslet.Checker.test('dataset.filter#filterExpr', filterExpr).isString();\r\n\t\tif(filterExpr) {\r\n\t\t\tfilterExpr = jslet.trim(filterExpr);\r\n\t\t}\r\n\r\n\t\tvar oldFilter = Z._getWholeFilter();\r\n\t\tZ._filter = filterExpr;\r\n\t\tvar newFilter = Z._getWholeFilter();\r\n\t\t\r\n\t\tif (!newFilter) {\r\n\t\t\tZ._innerFilter = null;\r\n\t\t\tvar oldFiltered = Z._filtered;\r\n\t\t\tZ._filtered = false;\r\n\t\t\tZ._filteredRecnoArray = null;\r\n\t\t\tif(oldFiltered) {\r\n\t\t\t\tZ._doFilterChanged();\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif(oldFilter == newFilter) {\r\n\t\t\t\treturn this;\r\n\t\t\t} else {\r\n\t\t\t\tZ._innerFilter = new jslet.data.Expression(Z, newFilter);\r\n\t\t\t}\r\n\t\t\tif(Z._filtered) {\r\n\t\t\t\tZ._doFilterChanged();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get filtered flag. Only 'filtered' is true, 'filter' and 'fixedFilter' would work.<br />\r\n\t * Example:\r\n\t * \r\n\t *     @example\r\n\t *     dsObj.filter('[age] > 20 && [name] like \"Bob%\"');\r\n\t *     dsObj.filtered(true); // Set property, return this.\r\n\t *     var propValue = dsObj.filtered(); // Get property value.\r\n\t * \r\n\t * @param {Boolean | undefined} filtered Filter flag.\r\n\t * \r\n\t * @return {this | Boolean}\r\n\t */\r\n\tfiltered: function (afiltered) {\r\n\t\tvar Z = this;\r\n\t\tif (afiltered === undefined) {\r\n\t\t\treturn Z._filtered;\r\n\t\t}\r\n\t\t\r\n\t\tvar oldFilter = Z._getWholeFilter(), \r\n\t\t\toldFiltered = Z._filtered;\r\n\t\tif (afiltered && !oldFilter) {\r\n\t\t\tZ._filtered = false;\r\n\t\t} else {\r\n\t\t\tZ._filtered = afiltered ? true: false;\r\n\t\t}\r\n\r\n\t\tif(oldFiltered == Z._filtered) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tthis._doFilterChanged();\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t_doFilterChanged: function() {\r\n\t\tvar Z = this;\r\n\t\tZ.selection.removeAll();\r\n\t\tvar flag = Z.isContextRuleEnabled();\r\n\t\tif (flag) {\r\n\t\t\tZ.disableContextRule();\r\n\t\t}\r\n\t\tZ.disableControls();\r\n\t\ttry {\r\n\t\t\tif (!Z._filtered) {\r\n\t\t\t\tZ._filteredRecnoArray = null;\r\n\t\t\t} else {\r\n\t\t\t\tZ._refreshInnerRecno();\r\n\t\t\t}\r\n\t\t} finally {\r\n\t\t\tif(flag) {\r\n\t\t\t\tZ.enableContextRule();\r\n\t\t\t}\r\n\t\t\tZ.enableControls();\r\n\t\t}\r\n\t\tZ.first();\r\n\t\tZ._calcAggregatedValueDebounce.call(Z);\t\t\r\n\t\tZ.refreshLookupHostDataset();\r\n\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @private, filter data\r\n\t */\r\n\t_filterData: function () {\r\n\t\tvar Z = this,\r\n\t\t \tfilter = Z._getWholeFilter();\r\n\t\tif (!Z._filtered || !filter || \r\n\t\t\t\tZ._status == jslet.data.DataSetStatus.INSERT || \r\n\t\t\t\tZ._status == jslet.data.DataSetStatus.UPDATE) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tvar result = Z._innerFilter.eval();\r\n\t\treturn result;\r\n\t},\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t_refreshInnerRecno: function () {\r\n\t\tvar Z = this;\r\n\t\tif (!Z.hasData()) {\r\n\t\t\tZ._filteredRecnoArray = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tZ._filteredRecnoArray = null;\r\n\t\tif(!Z._filtered) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar tempRecno = [];\r\n\t\tvar oldRecno = Z._recno;\r\n\t\ttry {\r\n\t\t\tfor (var i = 0, cnt = Z.records().length; i < cnt; i++) {\r\n\t\t\t\tZ._recno = i;\r\n\t\t\t\tif (Z._filterData()) {\r\n\t\t\t\t\ttempRecno.push(i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tZ._recno = oldRecno;\r\n\t\t}\r\n\t\tZ._filteredRecnoArray = tempRecno;\r\n\t},\r\n\r\n\t_innerAfterScrollDebounce: function() {\r\n\t\tvar Z = this,\r\n\t\t\teventFunc = jslet.getFunction(Z._datasetListener);\r\n\t\tif(eventFunc) {\r\n\t\t\teventFunc.call(Z, jslet.data.DatasetEvent.AFTERSCROLL);\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t_fireDatasetEvent: function (evtType) {\r\n\t\tvar Z = this;\r\n\t\tif (Z._silence || Z._igoreEvent) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(Z._datasetListener) {\r\n\t\t\tif(evtType == jslet.data.DatasetEvent.AFTERSCROLL) {\r\n\t\t\t\tZ._afterScrollDebounce.call(Z);\r\n\t\t\t} else {\r\n\t\t\t\tvar eventFunc = jslet.getFunction(Z._datasetListener);\r\n\t\t\t\tif(eventFunc) {\r\n\t\t\t\t\teventFunc.call(Z, evtType);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tvar dsHandlers = Z._datasetEventHandler;\r\n\t\tif(dsHandlers) {\r\n\t\t\tvar evtHandlers = dsHandlers[evtType];\r\n\t\t\tif(evtHandlers) {\r\n\t\t\t\tfor(var i = 0, len = evtHandlers.length; i < len; i++) {\r\n\t\t\t\t\tvar eventFunc = jslet.getFunction(evtHandlers[i]);\r\n\t\t\t\t\tif(eventFunc) {\r\n\t\t\t\t\t\teventFunc.call(Z);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Get record count.\r\n\t * \r\n\t * @return {Integer}\r\n\t */\r\n\trecordCount: function () {\r\n\t\tvar records = this.records();\r\n\t\tif (records) {\r\n\t\t\tif (!this._filteredRecnoArray) {\r\n\t\t\t\treturn records.length;\r\n\t\t\t} else {\r\n\t\t\t\treturn this._filteredRecnoArray.length;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn 0;\r\n\t},\r\n\r\n\t/**\r\n\t * Check whether dataset exists records.\r\n\t * It checks on datase filter. \r\n\t * \r\n\t *     @example\r\n\t *     //dsObj has 2 records first.\r\n\t *     dsObj.hasRecord(); //return true\r\n\t *     dsObj.filter('false'); //Filter out all records.\r\n\t *     dsObj.filtered(true);\r\n\t *     dsObj.hasRecord(); //return false\r\n\t *     \r\n\t * @return {Boolean}\r\n\t */\r\n\thasRecord: function () {\r\n\t\treturn this.recordCount() > 0;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Check whether dataset exists records.\r\n\t * It checks no matter whether dataset has filter or not. \r\n\t * \r\n\t *     @example\r\n\t *     //dsObj has 2 records first.\r\n\t *     dsObj.hasData(); //return true\r\n\t *     dsObj.filter('false'); //Filter out all records.\r\n\t *     dsObj.filtered(true);\r\n\t *     dsObj.hasData(); //still return true\r\n\t *     \r\n\t * @return {Boolean}\r\n\t */\r\n\thasData: function() {\r\n\t\tvar records = this.records();\r\n\t\treturn records && records.length > 0;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get record number, record number starts with 0.<br />\r\n\t * Record number is relative to many data manuplating. Example:\r\n\t * \r\n\t *     @example\r\n\t *     var oldRecno = dsObj.recno();\r\n\t *     dsObj.recno(2);\r\n\t *     try {\r\n\t *       dsObj.setFieldValue('fld1', 'test');\r\n\t *     } finally {\r\n\t *       dsObj.recno(oldRecno);\r\n\t *     }\r\n\t * \r\n\t * @param {Integer | undefined} recno Record number.\r\n\t * @return {this | Integer}\r\n\t */\r\n\trecno: function (recno) {\r\n\t\tvar Z = this;\r\n\t\tif (recno === undefined) {\r\n\t\t\tif(Z.recordCount() > 0) {\r\n\t\t\t\treturn Z._recno;\r\n\t\t\t} else {\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tjslet.Checker.test('dataset.recno#recno', recno).isGTEZero();\r\n\t\trecno = parseInt(recno);\r\n\t\tif(!Z.hasRecord()) {\r\n\t\t\tZ._bof = Z._eof = true;\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\t\r\n\t\tif (recno == Z._recno) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tZ.confirm();\r\n\t\tZ._gotoRecno(recno);\r\n\t\tZ._bof = Z._eof = false;\r\n\t\treturn true;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get record number silently, it will not fire any event.\r\n\t * \r\n\t * @param {Integer | undefined} recno Record number.\r\n\t * @return {this | Integer}\r\n\t */\r\n\trecnoSilence: function (recno) {\r\n\t\tvar Z = this;\r\n\t\tif (recno === undefined) {\r\n\t\t\tif(Z.recordCount() > 0) {\r\n\t\t\t\treturn Z._recno;\r\n\t\t\t} else {\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(recno < 0) {\r\n\t\t\trecno = 0;\r\n\t\t}\r\n\t\tvar last = Z.recordCount() - 1;\r\n\t\tif(recno > last) {\r\n\t\t\trecno = last;\r\n\t\t}\r\n\t\tZ._recno = recno > last? last: recno;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * @private\r\n\t * Goto specified record number(Private)\r\n\t * \r\n\t * @param {Integer}recno Record number.\r\n\t */\r\n\t_gotoRecno: function (recno) {\r\n\t\tvar Z = this,\r\n\t\t\trecCnt = Z.recordCount();\r\n\t\tif(recCnt === 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (recno >= recCnt) {\r\n\t\t\trecno = recCnt - 1;\r\n\t\t} else if (recno < 0) {\r\n\t\t\trecno = 0;\r\n\t\t}\r\n\t\t\r\n\t\tif (Z._recno == recno) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tvar evt;\r\n\t\tif (!Z._silence) {\r\n\t\t\tZ._aborted = false;\r\n\t\t\ttry {\r\n\t\t\t\tZ._fireDatasetEvent(jslet.data.DatasetEvent.BEFORESCROLL);\r\n\t\t\t\tif (Z._aborted) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t} finally {\r\n\t\t\t\tZ._aborted = false;\r\n\t\t\t}\r\n\t\t\tif (!Z._lockCount) {\r\n\t\t\t\tevt = jslet.data.RefreshEvent.beforeScrollEvent(Z._recno);\r\n\t\t\t\tZ.refreshControl(evt);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar preno = Z._recno;\r\n\t\tZ._recno = recno;\r\n\t\t\r\n\t\tif (Z._recno != preno && Z._detailDatasetFields && Z._detailDatasetFields.length > 0) {\r\n\t\t\tvar fldObj, dsDetail;\r\n\t\t\tfor (var i = 0, len = Z._detailDatasetFields.length; i < len; i++) {\r\n\t\t\t\tfldObj = Z._detailDatasetFields[i];\r\n\t\t\t\tdsDetail = fldObj.detailDataset();\r\n\t\t\t\tif (dsDetail) {\r\n\t\t\t\t\tdsDetail._initialize(true);\r\n\t\t\t\t}\r\n\t\t\t} //end for\r\n\t\t} //end if\r\n\t\tZ._refreshProxyField(null, Z._silenc);\r\n\t\tif (Z._contextRuleEnabled) {\r\n\t\t\tthis.calcContextRule();\r\n\t\t}\r\n\t\tif (!Z._silence) {\r\n\t\t\tZ._fireDatasetEvent(jslet.data.DatasetEvent.AFTERSCROLL);\r\n\t\t\tif (!Z._lockCount) {\r\n\t\t\t\tevt = jslet.data.RefreshEvent.scrollEvent(Z._recno, preno);\r\n\t\t\t\tZ.refreshControl(evt);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\r\n\t/**\r\n\t * Abort insert/update/delete action before insert/update/delete.\r\n\t * It's usually used with event: {@link jslet.data.DatasetEvent}\r\n\t */\r\n\tabort: function () {\r\n\t\tthis._aborted = true;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Get aborted status.\r\n\t * \r\n\t * @return {Boolean}\r\n\t */\r\n\taborted: function() {\r\n\t\treturn this._aborted;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @private\r\n\t * \r\n\t * Move cursor back to startRecno(Private)\r\n\t * \r\n\t * @param {Integer}startRecno - record number\r\n\t */\r\n\t_moveCursor: function (recno) {\r\n\t\tvar Z = this;\r\n\t\tZ.confirm();\r\n\t\tZ._gotoRecno(recno);\r\n\t},\r\n\r\n\t/**\r\n\t * Move record cursor by record object.\r\n\t * \r\n\t *     @example\r\n\t *     var data = [{fld1: 'v1', fld2: 123}, {fld1: 'v2', fld2: 345}];\r\n\t *     dsObj.records(data);\r\n\t *     dsObj.moveToRecord(data[1]);\r\n\t *     dsObj.recno(); //return 1\r\n\t * \r\n\t * @param {Object} recordObj Record object.\r\n\t * \r\n\t * @return {Boolean} True - Move successfully, false - otherwise. \r\n\t */\r\n\tmoveToRecord: function (recordObj) {\r\n\t\tvar Z = this;\r\n\t\tZ.confirm();\r\n\t\tif (!Z.hasRecord() || !recordObj) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tjslet.Checker.test('dataset.moveToRecord#recordObj', recordObj).isObject();\r\n\t\tvar k = Z.records().indexOf(recordObj);\r\n\t\tif (k < 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (Z._filteredRecnoArray) {\r\n\t\t\tk = Z._filteredRecnoArray.indexOf(k);\r\n\t\t\tif (k < 0) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\tZ._gotoRecno(k);\r\n\t\treturn true;\r\n\t},\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tstartSilenceMove: function (notLogPos) {\r\n\t\tvar Z = this;\r\n\t\tvar context = {};\r\n\t\tif (!notLogPos) {\r\n\t\t\tcontext.recno = Z._recno;\r\n\t\t} else {\r\n\t\t\tcontext.recno = -999;\r\n\t\t}\r\n\r\n\t\tZ._silence++;\r\n\t\treturn context;\r\n\t},\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tendSilenceMove: function (context) {\r\n\t\tvar Z = this;\r\n\t\tif (context && context.recno != -999 && context.recno != Z._recno) {\r\n\t\t\tZ._gotoRecno(context.recno);\r\n\t\t}\r\n\t\tZ._silence--;\r\n\t},\r\n\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Check dataset cursor at the last record\r\n\t * \r\n\t * @return {Boolean}\r\n\t */\r\n\tisBof: function () {\r\n\t\treturn this._bof;\r\n\t},\r\n\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Check dataset cursor at the first record\r\n\t * \r\n\t * @return {Boolean}\r\n\t */\r\n\tisEof: function () {\r\n\t\treturn this._eof;\r\n\t},\r\n\r\n\t/**\r\n\t * Move cursor to first record\r\n\t */\r\n\tfirst: function () {\r\n\t\tvar Z = this;\r\n\t\tif(!Z.hasRecord()) {\r\n\t\t\tZ._bof = Z._eof = true;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tZ._moveCursor(0);\r\n\t\tZ._bof = Z._eof = false;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Move cursor to last record\r\n\t */\r\n\tnext: function () {\r\n\t\tvar Z = this;\r\n\t\tvar recCnt = Z.recordCount();\r\n\t\tif(recCnt === 0) {\r\n\t\t\tZ._bof = Z._eof = true;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(Z._recno == recCnt - 1) {\r\n\t\t\tZ._bof = false;\r\n\t\t\tZ._eof = true;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tZ._bof = Z._eof = false;\r\n\t\tZ._moveCursor(Z._recno + 1);\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Move cursor to prior record\r\n\t */\r\n\tprior: function () {\r\n\t\tvar Z = this;\r\n\t\tif(!Z.hasRecord()) {\r\n\t\t\tZ._bof = Z._eof = true;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(Z._recno === 0) {\r\n\t\t\tZ._bof = true;\r\n\t\t\tZ._eof = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tZ._bof = Z._eof = false;\r\n\t\tZ._moveCursor(Z._recno - 1);\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Move cursor to next record\r\n\t */\r\n\tlast: function () {\r\n\t\tvar Z = this;\r\n\t\tif(!Z.hasRecord()) {\r\n\t\t\tZ._bof = Z._eof = true;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tZ._bof = Z._eof = false;\r\n\t\tZ._moveCursor(Z.recordCount() - 1);\r\n\t\tZ._bof = Z._eof = false;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Move cursor to the first record which exists invalid data.\r\n\t * \r\n\t * @return {Boolean} If move successfully, return true, otherwise false.\r\n\t */\r\n\tfirstError: function() {\r\n\t\treturn this._moveToError(0);\r\n\t},\r\n\t\r\n\t/**\r\n\t * Move cursor to the next record which exists invalid data.\r\n\t * \r\n\t * @return {Boolean} If move successfully, return true, otherwise false.\r\n\t */\r\n\tnextError: function() {\r\n\t\treturn this._moveToError(this.recno() + 1);\r\n\t},\r\n\t\r\n\t/**\r\n\t * Move cursor to the prior record which exists invalid data.\r\n\t * \r\n\t * @return {Boolean} If move successfully, return true, otherwise false.\r\n\t */\r\n\tpriorError: function() {\r\n\t\treturn this._moveToError(this.recno() - 1, true);\r\n\t},\r\n\t\r\n\t/**\r\n\t * Move cursor to the last record which exists invalid data.\r\n\t * \r\n\t * @return {Boolean} If move successfully, return true, otherwise false.\r\n\t */\r\n\tlastError: function() {\r\n\t\treturn this._moveToError(this.recordCount() - 1, true);\r\n\t},\r\n\t\r\n\t_moveToError: function(startRecno, reverse) {\r\n\t\tvar Z = this, i,\r\n\t\t\trecCnt = Z.recordCount() - 1;\r\n\t\tif(recCnt < 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif(!reverse) {\r\n\t\t\tif(startRecno < 0) {\r\n\t\t\t\tstartRecno = 0;\r\n\t\t\t}\r\n\t\t\tfor(i = startRecno; i <= recCnt; i++) {\r\n\t\t\t\tif(Z.existRecordError(i)) {\r\n\t\t\t\t\tZ._moveCursor(i);\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif(startRecno > recCnt) {\r\n\t\t\t\tstartRecno = recCnt;\r\n\t\t\t}\r\n\t\t\tfor(i = startRecno; i >= 0; i--) {\r\n\t\t\t\tif(Z.existRecordError(i)) {\r\n\t\t\t\t\tZ._moveCursor(i);\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @private\r\n\t * Check dataset status and cancel dataset \r\n\t */\r\n\tcheckStatusByCancel: function () {\r\n\t\tif (this._status != jslet.data.DataSetStatus.BROWSE) {\r\n\t\t\tthis.cancel();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Insert child record by parentId, and move cursor to the newly record.\r\n\t * \r\n\t *     @example\r\n\t *     var parentId = dsObj.keyValue();\r\n\t *     dsObj.insertChild(parentId);\r\n\t *     dsObj.setFieldValue('fld1', 'test');\r\n\t *     dsObj.confirm();\r\n\t * \r\n\t * @param {Object} parentId (optional) Key value of parent record, it not apply, use current record key value instead.\r\n\t *  \r\n\t * @return {this}\r\n\t */\r\n\tinsertChild: function (parentId) {\r\n\t\tvar Z = this;\r\n\t\tif (!Z._parentField || !Z.keyField()) {\r\n\t\t\t//Dataset properties: [parentField] and [keyField] not set, use insertRecord() instead!\r\n\t\t\tthrow new Error(jsletlocale.Dataset.parentFieldNotSet);\r\n\t\t}\r\n\r\n\t\tif (!Z.hasRecord()) {\r\n\t\t\tZ.innerInsert();\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tvar context = Z.startSilenceMove(true);\r\n\t\ttry {\r\n\t\t\tZ.expanded(true);\r\n\t\t\tif (parentId) {\r\n\t\t\t\tif (!Z.findByKey(parentId)) {\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tparentId = Z.keyValue();\r\n\t\t\t}\r\n\r\n\t\t\tvar pfldname = Z.parentField(), \r\n\t\t\t\tparentParentId = Z.getFieldValue(pfldname);\r\n\t\t\twhile (true) {\r\n\t\t\t\tZ.next();\r\n\t\t\t\tif (Z.isEof()) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (parentParentId == Z.getFieldValue(pfldname)) {\r\n\t\t\t\t\tZ.prior();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} finally {\r\n\t\t\tZ.endSilenceMove(context);\r\n\t\t}\r\n\r\n\t\tZ.innerInsert(function (newRec) {\r\n\t\t\tnewRec[Z._parentField] = parentId;\r\n\t\t});\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Insert sibling record of current record, and move cursor to the newly record.\r\n\t * \r\n\t *     @example\r\n\t *     dsObj.insertSibling();\r\n\t *     dsObj.setFieldValue('fld1', 'test');\r\n\t *     dsObj.confirm();\r\n\t *     \r\n\t * @return {this}\r\n\t */\r\n\tinsertSibling: function () {\r\n\t\tvar Z = this;\r\n\t\tif (!Z._parentField || !Z._keyField) {\r\n\t\t\t//Dataset properties: [parentField] and [keyField] not set, use insertRecord() instead!\r\n\t\t\tthrow new Error(jsletlocale.Dataset.parentFieldNotSet);\r\n\t\t}\r\n\r\n\t\tif (!Z.hasRecord()) {\r\n\t\t\tZ.innerInsert();\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tvar parentId = Z.getFieldValue(Z.parentField()),\r\n\t\t\tcontext = Z.startSilenceMove(true),\r\n\t\t\tfound = false,\r\n\t\t\tparentKeys = [],\r\n\t\t\tcurrPKey, \r\n\t\t\tprePKey = Z.keyValue(),\r\n\t\t\tlastPKey = prePKey;\r\n\t\ttry {\r\n\t\t\tZ.next();\r\n\t\t\twhile (!Z.isEof()) {\r\n\t\t\t\tcurrPKey = Z.parentValue();\r\n\t\t\t\tif(currPKey == prePKey) {\r\n\t\t\t\t\tparentKeys.push(prePKey);\r\n\t\t\t\t\tlastPKey = prePKey;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif(lastPKey != currPKey) {\r\n\t\t\t\t\t\tif(parentKeys.indexOf(currPKey) < 0) {\r\n\t\t\t\t\t\t\tZ.prior();\r\n\t\t\t\t\t\t\tfound = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tprePKey = currPKey;\r\n\t\t\t\tZ.next();\r\n\t\t\t}\r\n\t\t\tif (!found) {\r\n\t\t\t\tZ.last();\r\n\t\t\t}\r\n\t\t} finally {\r\n\t\t\tZ.endSilenceMove(context);\r\n\t\t}\r\n\r\n\t\tZ.innerInsert(function (newRec) {\r\n\t\t\tnewRec[Z._parentField] = parentId;\r\n\t\t});\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Insert record after current record, and move cursor to the newly record.\r\n\t * \r\n\t *     @example\r\n\t *     dsObj.insertRecord();\r\n\t *     dsObj.setFieldValue('fld1', 'test');\r\n\t *     dsObj.confirm();\r\n\t * \r\n\t * @return {this}\r\n\t */\r\n\tinsertRecord: function () {\r\n\t\tthis.innerInsert();\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Add record after last record, and move cursor to the newly record.\r\n\t * \r\n\t *     @example\r\n\t *     dsObj.appendRecord();\r\n\t *     dsObj.setFieldValue('fld1', 'test');\r\n\t *     dsObj.confirm();\r\n\t * \r\n\t * @return {this}\r\n\t */\r\n\tappendRecord: function () {\r\n\t\tvar Z = this;\r\n\r\n\t\tZ._silence++;\r\n\t\ttry {\r\n\t\t\tZ.last();\r\n\t\t} finally {\r\n\t\t\tZ._silence--;\r\n\t\t}\r\n\t\tZ.insertRecord();\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tstatus: function(status) {\r\n\t\tif(status === undefined) {\r\n\t\t\treturn this._status;\r\n\t\t}\r\n\t\tthis._status = status;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get the current record is expanded or not. Example:\r\n\t * \r\n\t *     @example\r\n\t *     dsObj.expanded(true); //Set property, return this.\r\n\t *     var propValue = dsObj.expanded(); //Get property value.\r\n\t * \r\n\t * @param {Boolean | undefined} expanded True - expanded, false - collapsed.\r\n\t * \r\n\t * @return {this | Boolean}\r\n\t */\r\n\texpanded: function(expanded) {\r\n\t\treturn this.expandedByRecno(this.recno(), expanded);\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get the specified record is expanded or not. Example:\r\n\t * \r\n\t *     @example\r\n\t *     var recno = dsObj.recno();\r\n\t *     dsObj.expandedByRecno(recno, true); //Set property, return this.\r\n\t *     var propValue = dsObj.expandedByRecno(recno); //Get property value.\r\n\t * \r\n\t * @param {Integer | undefined} recno Record number.\r\n\t * @param {this | Boolean} True - expanded, false - collapsed.\r\n\t * \r\n\t * @return {this | Boolean}\r\n\t */\r\n\texpandedByRecno: function(recno, expanded) {\r\n\t\tjslet.Checker.test('dataset.expandedByRecno', recno).required().isNumber();\r\n\t\tvar record = this.getRecord(recno);\r\n\t\tvar recInfo = jslet.data.getRecInfo(record);\r\n\t\tif(expanded === undefined) {\r\n\t\t\tvar result = recInfo && recInfo.expanded;\r\n\t\t\treturn result? true: false;\r\n\t\t}\r\n\t\tif(recInfo === null) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\trecInfo.expanded = expanded;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get the specified record is inserted or not. Example:\r\n\t * \r\n\t *     @example\r\n\t *     var recno = dsObj.recno();\r\n\t *     dsObj.insertedByRecno(recno, true); //Set property, return this.\r\n\t *     var propValue = dsObj.insertedByRecno(recno); //Get property value.\r\n\t * \r\n\t * @param {Integer} recno Record number.\r\n\t * @param {Boolean | undefined} inserted True - inserted, false - not changed.\r\n\t * \r\n\t * @return {this | Boolean}\r\n\t */\r\n\tinsertedByRecno: function(recno, inserted) {\r\n\t\tif(inserted === undefined) {\r\n\t\t\treturn this.changedStatusByRecno(recno) === jslet.data.DataSetStatus.INSERT;\r\n\t\t}\r\n\t\tvar recObj = this.getRecord(recno);\r\n\t\tif(inserted) {\r\n\t\t\tthis.changedStatusByRecno(recno, jslet.data.DataSetStatus.INSERT);\r\n\t\t\tthis._changeLog.log(recObj);\r\n\t\t} else {\r\n\t\t\tthis.changedStatusByRecno(recno, jslet.data.DataSetStatus.BROWSE);\r\n\t\t\tthis._changeLog.unlog(recObj);\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Get or set the specified record is updated or not. Example:\r\n\t * \r\n\t *     @example\r\n\t *     var recno = dsObj.recno();\r\n\t *     dsObj.updatedByRecno(recno, true); //Set property, return this.\r\n\t *     var propValue = dsObj.updatedByRecno(recno); //Get property value.\r\n\t * \r\n\t * @param {Integer} recno Record number.\r\n\t * @param {Boolean | undefined} updated True - updated, false - not changed.\r\n\t * \r\n\t * @return {Boolean | this}\r\n\t */\r\n\tupdatedByRecno: function(recno, updated) {\r\n\t\tif(updated === undefined) {\r\n\t\t\treturn this.changedStatusByRecno(recno) === jslet.data.DataSetStatus.UPDATE;\r\n\t\t}\r\n\t\tvar recObj = this.getRecord(recno);\r\n\t\tif(updated) {\r\n\t\t\tthis.changedStatusByRecno(recno, jslet.data.DataSetStatus.UPDATE);\r\n\t\t\tthis._changeLog.log(recObj);\r\n\t\t} else {\r\n\t\t\tthis.changedStatusByRecno(recno, jslet.data.DataSetStatus.BROWSE);\r\n\t\t\tthis._changeLog.unlog(recObj);\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tchangedStatus: function(status) {\r\n\t\tif(status === undefined) {\r\n\t\t\treturn this.changedStatusByRecno(this._recno, status);\r\n\t\t}\r\n\t\tthis.changedStatusByRecno(this._recno, status);\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tchangedStatusByRecno: function(recno, status) {\r\n\t\tvar Z = this, record, recInfo;\r\n\t\tif(status === undefined) {\r\n\t\t\trecord = Z.getRecord(recno);\r\n\t\t\tif(!record) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\trecInfo = jslet.data.getRecInfo(record);\r\n\t\t\tif(!recInfo) {\r\n\t\t\t\treturn jslet.data.DataSetStatus.BROWSE;\r\n\t\t\t}\r\n\t\t\treturn recInfo.status;\r\n\t\t}\r\n\t\tif(!Z._logChanges) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\trecord = Z.getRecord(recno);\r\n\t\tif(!record) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\trecInfo = jslet.data.getRecInfo(record);\r\n\t\tif(status === jslet.data.DataSetStatus.DELETE) {\r\n\t\t\trecInfo.status = status;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar\toldStatus = recInfo.status;\r\n\t\tif(oldStatus === jslet.data.DataSetStatus.INSERT) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(oldStatus != status) {\r\n\t\t\trecInfo.status = status;\r\n\t\t\tif (Z._contextRuleEnabled) {\r\n\t\t\t\tZ.calcContextRule();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tinnerInsert: function (beforeInsertFn) {\r\n\t\tvar Z = this;\r\n\t\tZ.confirm();\r\n\r\n\t\tZ.selection.removeAll();\r\n\t\tvar dsMaster = Z.masterDataset();\r\n\t\tif (dsMaster) {\r\n\t\t\tif (!dsMaster.hasRecord()) {\r\n\t\t\t\tdsMaster.appendRecord();\r\n\t\t\t} else {\r\n\t\t\t\tdsMaster.editRecord();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tZ._aborted = false;\r\n\t\ttry {\r\n\t\t\tZ._fireDatasetEvent(jslet.data.DatasetEvent.BEFOREINSERT);\r\n\t\t\tif (Z._aborted) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} finally {\r\n\t\t\tZ._aborted = false;\r\n\t\t}\r\n\r\n\t\tvar records = Z.records();\r\n\t\tif (records === null) {\r\n\t\t\trecords = [];\r\n\t\t\tif(Z._masterField) { //Detail dataset doesn't have its own records.\r\n\t\t\t\tZ.masterDataset().setFieldValue(Z._masterField, records);\r\n\t\t\t} else {\r\n\t\t\t\tZ._records = records;\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar preRecno = Z.recno(), k;\r\n\t\tif (Z.hasRecord()) {\r\n\t\t\tk = records.indexOf(this.getRecord()) + 1;\r\n\t\t} else {\r\n\t\t\tk = 0;\r\n\t\t}\r\n\r\n\t\tvar newRecord = {};\r\n\t\trecords.splice(k, 0, newRecord);\r\n\r\n\t\tif (Z._filteredRecnoArray && Z._filteredRecnoArray.length > 0) {\r\n\t\t\tfor (var i = Z._filteredRecnoArray.length - 1; i >= 0; i--) {\r\n\t\t\t\tif (Z._filteredRecnoArray[i] < k) {\r\n\t\t\t\t\tZ._filteredRecnoArray.splice(i + 1, 0, k);\r\n\t\t\t\t\tZ._recno = k;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tZ._filteredRecnoArray[i] += 1;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif(Z._filteredRecnoArray) {\r\n\t\t\t\tZ._filteredRecnoArray[0] = k;\r\n\t\t\t}\r\n\t\t\tZ._recno = k;\r\n\t\t}\r\n\t\t\r\n\t\tZ.status(jslet.data.DataSetStatus.INSERT);\r\n\t\tZ.changedStatus(jslet.data.DataSetStatus.INSERT);\r\n\t\tZ._lockCount++;\r\n\t\ttry {\r\n\t\t\tZ._calcDefaultValue();\r\n\t\t\tif (beforeInsertFn) {\r\n\t\t\t\tbeforeInsertFn(newRecord);\r\n\t\t\t}\r\n\t\r\n\t\t\t//calc other fields' range to use context rule\r\n\t\t\tif (Z._contextRuleEnabled) {\r\n\t\t\t\tZ.calcContextRule();\r\n\t\t\t}\r\n\t\r\n\t\t\tZ._fireDatasetEvent(jslet.data.DatasetEvent.AFTERINSERT);\r\n\t\t\tZ._fireDatasetEvent(jslet.data.DatasetEvent.AFTERSCROLL);\r\n\t\t} finally {\r\n\t\t\tZ._lockCount--;\r\n\t\t}\r\n\t\tvar evt = jslet.data.RefreshEvent.insertEvent(preRecno, Z.recno(), Z._recno < Z.recordCount() - 1);\r\n\t\tZ.refreshControl(evt);\r\n\t},\r\n\r\n\t/**\r\n\t * Insert all records of source dataset into current dataset; <br />\r\n\t * Source dataset's structure must be same as current dataset.\r\n\t * \r\n\t * @param {jslet.data.Dataset} srcDataset Source dataset.\r\n\t * \r\n\t * @return {this}\r\n\t */\r\n\tinsertDataset: function (srcDataset) {\r\n\t\tvar Z = this,\r\n\t\t\toldFiltered = Z.filtered(),\r\n\t\t\tthisContext = Z.startSilenceMove(true),\r\n\t\t\tsrcContext = srcDataset.startSilenceMove(true), rec;\r\n\t\ttry {\r\n\t\t\tZ.filtered(false);\r\n\t\t\tsrcDataset.first();\r\n\t\t\twhile (!srcDataset.isEof()) {\r\n\t\t\t\tZ.insertRecord();\r\n\t\t\t\tZ.cloneRecord(srcDataset.getRecord(), Z.getRecord());\r\n\t\t\t\tZ.confirm();\r\n\t\t\t\tsrcDataset.next();\r\n\t\t\t}\r\n\t\t} finally {\r\n\t\t\tsrcDataset.endSilenceMove(srcContext);\r\n\t\t\tZ.filtered(oldFiltered);\r\n\t\t\tZ.endSilenceMove(thisContext);\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Append all records of source dataset into current dataset; <br />\r\n\t * Source dataset's structure must be same as current dataset .\r\n\t * \r\n\t * @param {jslet.data.Dataset} srcDataset Source dataset.\r\n\t * \r\n\t * @return {this}\r\n\t */\r\n\tappendDataset: function (srcDataset) {\r\n\t\tvar Z = this;\r\n\t\tZ._silence++;\r\n\t\ttry {\r\n\t\t\tZ.last();\r\n\t\t} finally {\r\n\t\t\tZ._silence--;\r\n\t\t}\r\n\t\tZ.insertDataset(srcDataset);\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Append records into dataset.\r\n\t * \r\n\t * @param {Object[]} records An array of object which need to append to dataset.\r\n\t * @param {Boolean} replaceExists True - replace the record if it exists, false - skip to append if it exists.\r\n\t *  \r\n\t * @return {this}\r\n\t */\r\n\tbatchAppendRecords: function(records, replaceExists) {\r\n\t\tjslet.Checker.test('dataset.records', records).required().isArray();\r\n\t\tvar Z = this;\r\n\t\tZ.confirm();\r\n\t\t\r\n\t\tZ.selection.removeAll();\r\n\t\tZ.disableControls();\r\n\t\ttry{\r\n\t\t\tvar keyField = Z.keyField(), rec, found,\r\n\t\t\t\tkeyValue;\r\n\t\t\tfor(var i = 0, len = records.length; i < len; i++) {\r\n\t\t\t\trec = records[i];\r\n\t\t\t\tfound = false;\r\n\t\t\t\tif(keyField) {\r\n\t\t\t\t\tkeyValue = rec[keyField];\r\n\t\t\t\t\tif(keyValue && Z.findByKey(keyValue)) {\r\n\t\t\t\t\t\tfound = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(found) {\r\n\t\t\t\t\tif(replaceExists) {\r\n\t\t\t\t\t\tZ.editRecord();\r\n\t\t\t\t\t\tZ.cloneRecord(rec, Z.getRecord());\r\n\t\t\t\t\t\tZ.confirm();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tZ.appendRecord();\r\n\t\t\t\t\tZ.cloneRecord(rec, Z.getRecord());\r\n\t\t\t\t\tZ.confirm();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} finally {\r\n\t\t\tZ.enableControls();\r\n\t\t\tZ.refreshControl(jslet.data.RefreshEvent._updateAllEvent);\r\n\t\t\tZ.refreshLookupHostDataset();\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @private\r\n\t * Calculate default value.\r\n\t */\r\n\t_calcDefaultValue: function () {\r\n\t\tvar Z = this, fldObj, expr, value, fldName;\r\n\t\tfor (var i = 0, fldcnt = Z._normalFields.length; i < fldcnt; i++) {\r\n\t\t\tfldObj = Z._normalFields[i];\r\n\t\t\tfldName = fldObj.name();\r\n\t\t\tif (fldObj.getType() == jslet.data.DataType.DATASET) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(Z._valueFollowEnabled && fldObj.valueFollow() && Z._followedValues) {\r\n\t\t\t\tvar fValue = Z._followedValues[fldName];\r\n\t\t\t\tif(fValue !== null && fValue !== undefined) {\r\n\t\t\t\t\tfldObj.setValue(fValue);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvalue = fldObj.defaultValue();\r\n\t\t\tif (value === undefined || value === null || value === '') {\r\n\t\t\t\texpr = fldObj.defaultExpr();\r\n\t\t\t\tif (!expr) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tvalue = window.eval(expr);\r\n\t\t\t} else {\r\n\t\t\t\tif(fldObj.getType() === jslet.data.DataType.NUMBER) {\r\n\t\t\t\t\tvalue = fldObj.scale() > 0 ? parseFloat(value): parseInt(value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar valueStyle = fldObj.valueStyle();\r\n\t\t\tif(value && jslet.isDate(value)) {\r\n\t\t\t\tvalue = new Date(value.getTime());\r\n\t\t\t}\r\n\t\t\tif(valueStyle == jslet.data.FieldValueStyle.BETWEEN) {\r\n\t\t\t\tif(value) {\r\n\t\t\t\t\tvalue = [value, value];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvalue = [null, null];\r\n\t\t\t\t}\r\n\t\t\t} else if(valueStyle == jslet.data.FieldValueStyle.MULTIPLE) {\r\n\t\t\t\tvalue = [value];\r\n\t\t\t}\r\n\t\t\tZ.setFieldValue(fldName, value);\t\t\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * @private\r\n\t * Calculate default value.\r\n\t */\r\n\tcheckAggregated: function(fldName) {\r\n\t\tvar Z = this,\r\n\t\t\taggrFields = Z._aggregatedFields;\r\n\t\tif(!aggrFields || aggrFields.length === 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif(!fldName) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tvar fldObj;\r\n\t\tfor(var i = 0, len = aggrFields.length; i < len; i++) {\r\n\t\t\tif(aggrFields[i].name() === fldName) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @private\r\n\t * \r\n\t * Disable aggregate value. It's used for improving performance for batch operating, especially for huge data.\r\n\t */\r\n\tdisableAggregating: function() {\r\n\t\tthis._aggregatingCount++;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @private\r\n\t * \r\n\t * Enable aggregate value.\r\n\t */\r\n\tenableAggregating: function() {\r\n\t\tvar Z = this;\r\n\t\tif(Z._aggregatingCount > 0) {\r\n\t\t\tZ._aggregatingCount--;\r\n\t\t\tif(Z._aggregatingCount === 0) {\r\n\t\t\t\tZ._calcAggregatedValueDebounce.call(Z);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @private\r\n\t * \r\n\t * Calculate aggregated value.\r\n\t */\r\n\tcalcAggregatedValue: function(fldName) {\r\n\t\tvar Z = this;\r\n\t\t\r\n\t\tif(Z._aggregatingCount > 0 || !Z.checkAggregated(fldName)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar aggrFields = Z._aggregatedFields,\r\n\t\t\tfldObj, aggregatedBy,\r\n\t\t\tarrAggregateBy = {},\r\n\t\t\taggregatedValues = null,\r\n\t\t\tnotCalcFields = [],\r\n\t\t\tisNum, i, len;\r\n\t\tfor(i = 0, len = aggrFields.length; i < len; i++) {\r\n\t\t\tfldObj = aggrFields[i];\r\n\t\t\taggregatedBy = fldObj.aggregatedBy();\r\n\t\t\tisNum = fldObj.getType() === jslet.data.DataType.NUMBER;\r\n\t\t\tif((!isNum || isNum && fldObj.lookup()) && !aggregatedBy) {\r\n\t\t\t\tif(!aggregatedValues) {\r\n\t\t\t\t\taggregatedValues = {};\r\n\t\t\t\t}\r\n\t\t\t\tfldName = fldObj.name();\r\n\t\t\t\taggregatedValues[fldName] = {count: Z.recordCount(), sum: 0};\r\n\t\t\t\tnotCalcFields.push(fldName);\r\n\t\t\t}\r\n\t\t\tif(aggregatedBy && !arrAggregateBy[aggregatedBy]) {\r\n\t\t\t\tarrAggregateBy[aggregatedBy] = {aggregatedBy: aggregatedBy, values: {}, exists: false};\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(aggrFields.length === notCalcFields.length) {\r\n\t\t\tZ.aggregatedValues(aggregatedValues);\t\t\t\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(!aggregatedValues) {\r\n\t\t\taggregatedValues = {};\r\n\t\t}\r\n\t\t\r\n\t\tfunction getAggregateByValue(aggregatedBy) {\r\n\t\t\tif(aggregatedBy.indexOf(',') < 0) {\r\n\t\t\t\treturn Z.getFieldValue(aggregatedBy);\r\n\t\t\t}\r\n\t\t\tvar fieldNames = aggregatedBy.split(',');\r\n\t\t\tvar values = [];\r\n\t\t\tfor(var i = 0, len = fieldNames.length; i < len; i++) {\r\n\t\t\t\tvalues.push(Z.getFieldValue(fieldNames[i]));\r\n\t\t\t}\r\n\t\t\treturn values.join(',');\r\n\t\t}\r\n\t\t\r\n\t\tfunction updateAggrByValues(arrAggregateBy) {\r\n\t\t\tvar aggrByObj, \r\n\t\t\t\taggrByValue,\r\n\t\t\t\tarrAggrByValues;\r\n\t\t\tfor(var name in arrAggregateBy) {\r\n\t\t\t\taggrByObj = arrAggregateBy[name];\r\n\t\t\t\tarrAggrByValues = aggrByObj.values;\r\n\t\t\t\taggrByValue = getAggregateByValue(aggrByObj.aggregatedBy);\r\n\t\t\t\tif(arrAggrByValues[aggrByValue] === undefined) {\r\n\t\t\t\t\tarrAggrByValues[aggrByValue] = null;\r\n\t\t\t\t\taggrByObj.exists = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\taggrByObj.exists = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tfunction existAggrBy(arrAggregateBy, aggregatedBy) {\r\n\t\t\tvar aggrByObj;\r\n\t\t\tfor(var name in arrAggregateBy) {\r\n\t\t\t\taggrByObj = arrAggregateBy[name];\r\n\t\t\t\treturn aggrByObj.exists;\r\n\t\t\t}\r\n\t\t\tconsole.warn('Not found aggregatedBy value!');\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tvar oldRecno = Z.recnoSilence(),\r\n\t\t\tfldCnt = aggrFields.length, \r\n\t\t\tvalue, totalValue,\r\n\t\t\taggregatedValueObj;\r\n\t\ttry {\r\n\t\t\tfor(var k = 0, recCnt = Z.recordCount(); k < recCnt; k++) {\r\n\t\t\t\tZ.recnoSilence(k);\r\n\t\t\t\tupdateAggrByValues(arrAggregateBy);\r\n\t\t\t\t\r\n\t\t\t\tfor(i = 0; i < fldCnt; i++) {\r\n\t\t\t\t\tfldObj = aggrFields[i];\r\n\t\t\t\t\tfldName = fldObj.name();\r\n\t\t\t\t\tif(notCalcFields.indexOf(fldName) >= 0) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\taggregatedBy = fldObj.aggregatedBy();\r\n\t\t\t\t\tif(aggregatedBy && existAggrBy(arrAggregateBy, aggregatedBy)) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\taggregatedValueObj = aggregatedValues[fldName];\r\n\t\t\t\t\tif(!aggregatedValueObj) {\r\n\t\t\t\t\t\taggregatedValueObj = {count: 0, sum: 0};\r\n\t\t\t\t\t\taggregatedValues[fldName] = aggregatedValueObj; \r\n\t\t\t\t\t}\r\n\t\t\t\t\taggregatedValueObj.count = aggregatedValueObj.count + 1;\r\n\t\t\t\t\tif(fldObj.getType() === jslet.data.DataType.NUMBER) {\r\n\t\t\t\t\t\tvalue = Z.getFieldValue(fldName) || 0;\r\n\t\t\t\t\t\tif(jslet.isString(value)) {\r\n\t\t\t\t\t\t\t//Invalid value: [{1}] for NUMBER field: [{0}]!\r\n\t\t\t\t\t\t\tthrow new Error(jslet.formatMessage(jsletlocale.Dataset.invalidNumberFieldValue, [fldName, value]));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\taggregatedValueObj.sum = aggregatedValueObj.sum + value;\r\n\t\t\t\t\t}\r\n\t\t\t\t} //end for i\r\n\t\t\t} //end for k\r\n\t\t} finally {\r\n\t\t\tZ.recnoSilence(oldRecno);\r\n\t\t}\r\n\t\tvar scale;\r\n\t\tfor(i = 0; i < fldCnt; i++) {\r\n\t\t\tfldObj = aggrFields[i];\r\n\t\t\tfldName = fldObj.name();\r\n\t\t\tscale = fldObj.scale() || 0;\r\n\t\t\taggregatedValueObj = aggregatedValues[fldName];\r\n\t\t\tif(!aggregatedValueObj ) {\r\n\t\t\t\taggregatedValueObj = {count: 0, sum: 0};\r\n\t\t\t\taggregatedValues[fldName] = aggregatedValueObj;\r\n\t\t\t}\r\n\t\t\tvar sumValue = aggregatedValueObj.sum;\r\n\t\t\tif(sumValue) {\r\n\t\t\t\tvar pow = Math.pow(10, scale);\r\n\t\t\t\tsumValue = Math.round(sumValue * pow) / pow;\r\n\t\t\t\taggregatedValueObj.sum = sumValue;\r\n\t\t\t}\r\n\t\t} //end for i\r\n\t\tZ.aggregatedValues(aggregatedValues);\t\t\t\r\n\t},\r\n\t\r\n\t/**\r\n\t * Get aggregated values. Example:\r\n\t * \r\n\t *     @example\r\n\t *     var aggregated = dsObj.aggregatedValues();\r\n\t *     var fldName = 'fld1';\r\n\t *     var fldAggregated = aggregated[fldName];\r\n\t *     var sum = fldAggregated.sum;\r\n\t *     var count = fldAggregated.count;\r\n\t * \r\n\t * @return {Object[]} Aggregated values\r\n\t */\r\n\taggregatedValues: function(aggregatedValues) {\r\n\t\tvar Z = this;\r\n\t\tif(aggregatedValues === undefined) {\r\n\t\t\treturn Z._aggregatedValues;\r\n\t\t}\r\n\t\tZ._aggregatedValues = aggregatedValues;\r\n\t\tif(!Z._aggregatedValues && !aggregatedValues) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar evt = jslet.data.RefreshEvent.aggregatedEvent();\r\n\t\tZ.refreshControl(evt);\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Get record object by record number.\r\n\t * \r\n\t * @param {Integer} recno (optional) Record number, if not applied, get current record instead.\r\n\t * \r\n\t * @return {Object} Dataset record.\r\n\t */\r\n\tgetRecord: function (recno) {\r\n\t\tvar Z = this, k;\r\n\t\tif (recno === undefined || recno === null) {\r\n\t\t\trecno = Z._recno >= 0 ? Z._recno : 0;\r\n\t\t} else {\r\n\t\t\tif (recno < 0 || recno >= Z.recordCount()) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(!Z.hasData()) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar records = Z.records();\r\n\t\t//Used to convert field value for performance purpose. \r\n\t\tif(Z._ignoreFilter) {\r\n\t\t\treturn records[Z._ignoreFilterRecno || 0];\r\n\t\t}\r\n\t\t\r\n\t\tif (Z.recordCount() === 0) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\t\r\n\t\tif (Z._filteredRecnoArray) {\r\n\t\t\tk = Z._filteredRecnoArray[recno];\r\n\t\t} else {\r\n\t\t\tk = recno;\r\n\t\t}\r\n\r\n\t\treturn records[k];\r\n\t},\r\n\r\n\t/**\r\n\t * Set field values with a plan object.\r\n\t *  \r\n\t *     @example\r\n\t *     var recObj = {fld1: 'test', fld2: 234};\r\n\t *     dsObj.setRecord(recObj);\r\n\t *     dsObj.confirm();\r\n\t *     dsObj.getFieldValue('fld1'); //return 'test'\r\n\t *     \r\n\t * @param {Object} recObj A plan object which contains field values.\r\n\t * @param {Integer} recno (optional) Record number.\r\n\t * \r\n\t * @return {this}\r\n\t */\r\n\tsetRecord: function(recObj, recno) {\r\n\t\tif(!recObj) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tvar Z = this;\r\n\t\tZ.disableControls();\r\n\t\ttry {\r\n\t\t\tif(recno) {\r\n\t\t\t\tZ.recno(recno);\r\n\t\t\t}\r\n\t\t\tfor(var name in recObj) {\r\n\t\t\t\tif(name == '_jl_') {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tZ.setFieldValue(name, recObj[name]);\r\n\t\t\t}\r\n\t\t} finally {\r\n\t\t\tZ.enableControls();\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tgetRelativeRecord: function (delta) {\r\n\t\treturn this.getRecord(this._recno + delta);\r\n\t},\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tisSameAsPrevious: function (fldName) {\r\n\t\tvar Z = this,\r\n\t\t\tpreRec = Z.getRelativeRecord(-1);\r\n\t\tif (!preRec) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tvar currRec = Z.getRecord(),\r\n\t\t\tpreValue = Z.getFieldValueByRecord(preRec, fldName),\r\n\t\t\tcurrValue = Z.getFieldValueByRecord(currRec, fldName),\r\n\t\t\tisSame = false;\r\n\t\t\r\n\t\tif(!preValue && preValue !== 0 && preValue !== false && \r\n\t\t\t\t!currValue && currValue !== 0 && currValue !== false) {\r\n\t\t\tisSame = false;\r\n\t\t} else if(preValue && currValue) {\r\n\t\t\tif(jslet.isDate(preValue)) { //Date time comparing\r\n\t\t\t\tisSame = (preValue.getTime() === currValue.getTime());\r\n\t\t\t} else {\r\n\t\t\t\tisSame = (preValue === currValue);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(!isSame) {\r\n\t\t\treturn isSame;\r\n\t\t}\r\n\t\tvar\tfldObj = Z.getField(fldName),\r\n\t\t\tmergeSameBy = fldObj.mergeSameBy();\r\n\t\tif(mergeSameBy) {\r\n\t\t\tvar arrFlds = mergeSameBy.split(','), groupFldName;\r\n\t\t\tfor(var i = 0, len = arrFlds.length; i < len; i++) {\r\n\t\t\t\tgroupFldName = jslet.trim(arrFlds[i]);\r\n\t\t\t\tif(preRec[groupFldName] != currRec[groupFldName]) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn isSame;\r\n\t},\r\n\r\n\t/**\r\n\t * Check wheather the current record has parent record or not.\r\n\t * \r\n\t * @return {Boolean} True - has parent record. \r\n\t */\r\n\thasParent: function() {\r\n\t\tvar Z = this,\r\n\t\t\tpFldName = Z.parentField();\r\n\t\tif(!pFldName || Z.recno() === 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tvar recno = Z.recno() - 1;\r\n\t\tfor(var k = recno; k >= 0; k--) {\r\n\t\t\tvar pKeyValue = Z.getFieldValue(pFldName),\r\n\t\t\t\tprevRec = this.getRelativeRecord(k - recno),\r\n\t\t\t\tkeyValue = this.getFieldValueByRecord(prevRec, Z.keyField());\r\n\t\t\t\r\n\t\t\tif(jslet.compareValue(pKeyValue, keyValue) === 0) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tvar prePKeyValue = this.getFieldValueByRecord(prevRec, Z.parentField());\r\n\t\t\tif(jslet.compareValue(pKeyValue, prePKeyValue) !== 0) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Check the current record has child records or not\r\n\t * \r\n\t * @return {Boolean} True - has child records.\r\n\t */\r\n\thasChildren: function () {\r\n\t\tvar Z = this;\r\n\t\tif (!Z._parentField) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif(Z._recno < Z.recordCount() - 1) {\r\n\t\t\tif (Z.parentValue(Z._recno + 1) === Z.keyValue()) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\t\r\n\t/** \r\n\t* Iterate the child records of current record, and run the specified callback function. Example: \r\n\t* \r\n\t*     @example\r\n\t*     dataset.iterateChildren(function(isDirectChild){\r\n\t* \t    var fldValue = this.getFieldValue('xxx');\r\n\t* \t    this.setFieldValue('xxx', fldValue);\r\n\t*     }); \r\n\t* \r\n\t* @param {Function} callBackFn Callback function.\r\n\t* @param {Boolean} callBackFn.isDirectChild True - is direct child, false - otherwise.\r\n\t* @param {Boolean} callBackFn.return Identify continue iterating or not, true - break iterating, false -continue iterating.\r\n\t* \r\n\t* @return {this}\r\n\t*/ \r\n\titerateChildren: function(callBackFn) {\r\n\t\tvar Z = this;\r\n\t\tif (!Z._parentField) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tvar context = Z.startSilenceMove(),\r\n\t\t\tpreKeyValue = Z.keyValue(),\r\n\t\t\trootValue = preKeyValue,\r\n\t\t\tarrPValues = [];\r\n\t\ttry {\r\n\t\t\tZ.next();\r\n\t\t\tvar keyValue, pValue, isExist;\r\n\t\t\twhile (!Z.isEof()) {\r\n\t\t\t\tpValue = Z.parentValue();\r\n\t\t\t\tisExist = (arrPValues.indexOf(pValue) >= 0);\r\n\t\t\t\tif(jslet.compareValue(pValue, preKeyValue) === 0 && !isExist) {\r\n\t\t\t\t\tarrPValues.push(preKeyValue);\r\n\t\t\t\t\tisExist = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (!isExist) {\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t}\r\n\t\t\t\tif(callBackFn) {\r\n\t\t\t\t\tvar breakIterator = callBackFn.call(Z, jslet.compareValue(pValue, rootValue) === 0);\r\n\t\t\t\t\tif(breakIterator) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tpreKeyValue = Z.keyValue();\r\n\t\t\t\tZ.next();\r\n\t\t\t}\r\n\t\t} finally {\r\n\t\t\tZ.endSilenceMove(context);\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Update record and send dataset to update status. <br />\r\n\t * You can use cancel() or confirm() method to return browse status.\r\n\t * \r\n\t *     @example\r\n\t *     dsObj.editRecord();\r\n\t *     dsObj.setFieldValue('fld1', 123);\r\n\t *     dsObj.confirm();\r\n\t * \r\n\t * @fires BEFOREUPDATE\r\n\t * @fires AFTERUPDATE\r\n\t * \r\n\t * @return {this}\r\n\t */\r\n\teditRecord: function () {\r\n\t\tvar Z = this;\r\n\t\tif (Z._status == jslet.data.DataSetStatus.UPDATE ||\r\n\t\t\tZ._status == jslet.data.DataSetStatus.INSERT) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tZ.selection.removeAll();\r\n\t\tif (!Z.hasRecord()) {\r\n\t\t\tZ.insertRecord();\r\n\t\t} else {\r\n\t\t\tZ._aborted = false;\r\n\t\t\ttry {\r\n\t\t\t\tZ._fireDatasetEvent(jslet.data.DatasetEvent.BEFOREUPDATE);\r\n\t\t\t\tif (Z._aborted) { \r\n\t\t\t\t\treturn this;\r\n\t\t\t\t}\r\n\t\t\t} finally {\r\n\t\t\t\tZ._aborted = false;\r\n\t\t\t}\r\n\r\n\t\t\tZ._modiObject = {};\r\n\t\t\tjQuery.extend(Z._modiObject, Z.getRecord());\r\n\t\t\tvar dsMaster = Z.masterDataset();\r\n\t\t\tif (dsMaster) {\r\n\t\t\t\tdsMaster.editRecord();\r\n\t\t\t}\r\n\r\n\t\t\tZ.status(jslet.data.DataSetStatus.UPDATE);\r\n\t\t\tZ._fireDatasetEvent(jslet.data.DatasetEvent.AFTERUPDATE);\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Delete curent record.\r\n\t * \r\n\t * @fires BEFOREUPDATE\r\n\t * @fires AFTERUPDATE\r\n\t * \r\n\t * @return {Boolean} Identify whether the record is deleted. If delete the new record which is not submit to server, it returns false. \r\n\t */\r\n\tdeleteRecord: function () {\r\n\t\tvar Z = this,\r\n\t\t\trecCnt = Z.recordCount();\r\n\t\tif (recCnt === 0 || Z.changedStatus() === jslet.data.DataSetStatus.DELETE) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tZ._aborted = false;\r\n\t\ttry {\r\n\t\t\tZ._fireDatasetEvent(jslet.data.DatasetEvent.BEFOREDELETE);\r\n\t\t\tif (Z._aborted) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t} finally {\r\n\t\t\tZ._aborted = false;\r\n\t\t}\r\n\t\t\r\n\t\tZ.selection.removeAll();\r\n\t\tif (Z._status === jslet.data.DataSetStatus.INSERT) {\r\n\t\t\tZ.cancel();\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tZ._silence++;\r\n\t\ttry {\r\n\t\t\tZ.checkStatusByCancel();\r\n\t\t} finally {\r\n\t\t\tZ._silence--;\r\n\t\t}\r\n\r\n\t\tif (Z.hasChildren()) {\r\n\t\t\tjslet.showInfo(jsletlocale.Dataset.cannotDelParent);\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tvar preRecno = Z.recno(), \r\n\t\t\tisLast = preRecno == (recCnt - 1), \r\n\t\t\tk = Z._recno,\r\n\t\t\tdeleted = false;\r\n\t\tif(Z.changedStatus() === jslet.data.DataSetStatus.INSERT) {\r\n\t\t\tZ._changeLog.unlog();\r\n\t\t} else {\r\n\t\t\tZ.changedStatus(jslet.data.DataSetStatus.DELETE);\r\n\t\t\tZ._changeLog.log();\r\n\t\t\tdeleted = true;\r\n\t\t}\r\n\t\tZ.records().splice(k, 1);\r\n\t\tZ._refreshInnerRecno();\r\n\t\t\r\n\t\tvar dsMaster = Z.masterDataset();\r\n\t\tif (dsMaster) {\r\n\t\t\tdsMaster.editRecord();\r\n\t\t}\r\n\r\n\t\tZ.status(jslet.data.DataSetStatus.BROWSE);\r\n\t\t\r\n\t\tif (isLast) {\r\n\t\t\tZ._silence++;\r\n\t\t\ttry {\r\n\t\t\t\tZ.prior();\r\n\t\t\t} finally {\r\n\t\t\t\tZ._silence--;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tZ._refreshProxyField();\r\n\t\t\tif (Z._contextRuleEnabled) {\r\n\t\t\t\tthis.calcContextRule();\r\n\t\t\t}\r\n\t\t}\r\n\t\tZ._calcAggregatedValueDebounce.call(Z);\r\n\t\tvar evt = jslet.data.RefreshEvent.deleteEvent(preRecno);\r\n\t\tZ.refreshControl(evt);\r\n\t\t\r\n\t\tZ._fireDatasetEvent(jslet.data.DatasetEvent.AFTERSCROLL);\t\r\n\t\tZ.refreshLookupHostDataset();\r\n\t\tvar detailFields = Z._detailDatasetFields;\r\n\t\tif(detailFields) {\r\n\t\t\tvar dtlFldObj, dsDetail;\r\n\t\t\tfor(var i = 0, len = detailFields.length; i < len; i++) {\r\n\t\t\t\tdtlFldObj = detailFields[i];\r\n\t\t\t\tdsDetail = dtlFldObj.detailDataset();\r\n\t\t\t\tif(dsDetail) {\r\n\t\t\t\t\tdsDetail.refreshControl();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (Z.isBof() && Z.isEof()) {\r\n\t\t\treturn deleted;\r\n\t\t}\r\n\t\tevt = jslet.data.RefreshEvent.scrollEvent(Z._recno);\r\n\t\tZ.refreshControl(evt);\r\n\t\treturn deleted;\r\n\t},\r\n\r\n\t/**\r\n\t * Delete all selected records.\r\n\t * \r\n\t * @return {this}\r\n\t */\r\n\tdeleteSelected: function() {\r\n\t\tvar Z = this, \r\n\t\t\trecords = Z.selectedRecords(),\r\n\t\t\trecObj;\r\n\t\tZ.disableControls();\r\n\t\ttry {\r\n\t\t\tfor(var i = records.length - 1; i >= 0; i--) {\r\n\t\t\t\trecObj = records[i];\r\n\t\t\t\tZ.moveToRecord(recObj);\r\n\t\t\t\tZ.deleteRecord();\r\n\t\t\t}\r\n\t\t} finally {\r\n\t\t\tZ.enableControls();\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Validate the dataset. Sometimes, the dataset's records is inputted outerside dataset object, then dataset can not validate data automatically.\r\n\t * In this case, use this method to validate data manually. Example:\r\n\t * \r\n\t *     @example\r\n\t *     var records = [{field1: 'value1', field2: 123}, {field1: 'value2', field2: null}];\r\n\t *     var dsObj.records(records);\r\n\t *     dsObj.validateDataset(); //Validate all fields\r\n\t *     dsObj.validateDataset(['field1']); //include fields: field1\r\n\t *     dsObj.validateDataset(null, ['field1']);  exclude fields: field2\r\n\t * \r\n\t * @param {String[]} includeFields The fields which need to be validated.\r\n\t * @param {String[]} excludeFields The fields which don't need to be validated.\r\n\t */\r\n\tvalidateDataset: function(includeFields, excludeFields) {\r\n\t\tvar Z = this;\r\n\t\tZ.iterate(function() {\r\n\t\t\tZ.validateRecord(includeFields, excludeFields);\r\n\t\t});\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Validate the current record. It's almost used in method: validateDataset.\r\n\t * \r\n\t * @param {String[]} includeFields The fields which need to be validated.\r\n\t * @param {String[]} excludeFields The fields which don't need to be validated.\r\n\t */\r\n\tvalidateRecord: function(includeFields, excludeFields) {\r\n\t\tvar Z = this;\r\n\t\tif (Z.recordCount() === 0) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tvar fldObj, fldName, fldValue, invalidMsg;\r\n\t\tfor (var i = 0, cnt = Z._normalFields.length; i < cnt; i++) {\r\n\t\t\tfldObj = Z._normalFields[i];\r\n\t\t\tfldName = fldObj.name();\r\n\t\t\tif(excludeFields && excludeFields.indexOf(fldName) >= 0 || \r\n\t\t\t   includeFields && includeFields.indexOf(fldName) < 0) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tinvalidMsg = null;\r\n\t\t\tfldValue = Z.getFieldValue(fldName);\r\n\t\t\tinvalidMsg = Z._fieldValidator.checkValue(fldObj, Z.getFieldValue(fldName));\r\n\t\t\tif (invalidMsg) {\r\n\t\t\t\tZ.setFieldError(fldName, invalidMsg);\r\n\t\t\t} else {\r\n\t\t\t\tZ.setFieldError(fldName, null);\r\n\t\t\t}\r\n\t\t} //end for i\r\n\t\tif(Z._masterDataset && Z._masterField) {\r\n\t\t\tvar masterDsObj = jslet.data.getDataset(Z._masterDataset),\r\n\t\t\t\tmasterFldObj = masterDsObj.getField(Z._masterField);\r\n\t\t\tif(Z.existRecordError()) {\r\n\t\t\t\t//'Detail Dataset: {0} has error data!'\r\n\t\t\t\tmasterDsObj.addFieldError(Z._masterField, jslet.formatMessage(jsletlocale.Dataset.detailDsHasError, [Z.name()]));\r\n\t\t\t} else {\r\n\t\t\t\tmasterDsObj.addFieldError(Z._masterField, null);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t_innerValidateData: function (includeFields, excludeFields) {\r\n\t\tvar Z = this;\r\n\t\tif (Z._status == jslet.data.DataSetStatus.BROWSE || Z.recordCount() === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tvar fldObj, fldName, fldValue, invalidMsg;\r\n\t\tfor (var i = 0, cnt = Z._normalFields.length; i < cnt; i++) {\r\n\t\t\tfldObj = Z._normalFields[i];\r\n\t\t\tfldName = fldObj.name();\r\n\t\t\tif(Z.existFieldError(fldName) || !fldObj.visible() || fldObj.disabled() || fldObj.readOnly() || excludeFields && excludeFields.indexOf(fldName) >= 0 || \r\n\t\t\t\tincludeFields && includeFields.indexOf(fldName) < 0 ) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tinvalidMsg = null;\r\n\t\t\tfldValue = Z.getFieldValue(fldName);\r\n\t\t\tinvalidMsg = Z._fieldValidator.checkRequired(fldObj, fldValue);\r\n\t\t\tif (invalidMsg) {\r\n\t\t\t\tZ.setFieldError(fldName, invalidMsg);\r\n\t\t\t}\r\n\t\t} //end for i\r\n\t\tif(Z._masterDataset && Z._masterField) {\r\n\t\t\tvar masterDsObj = jslet.data.getDataset(Z._masterDataset),\r\n\t\t\t\tmasterFldObj = masterDsObj.getField(Z._masterField);\r\n\t\t\tif(Z.existRecordError()) {\r\n\t\t\t\t//'Detail Dataset: {0} has error data!'\r\n\t\t\t\tmasterDsObj.addFieldError(Z._masterField, jslet.formatMessage(jsletlocale.Dataset.detailDsHasError, [Z.name()]));\r\n\t\t\t} else {\r\n\t\t\t\tmasterDsObj.addFieldError(Z._masterField, null);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\terrorMessage: function(errMessage) {\r\n\t\tvar evt = jslet.data.RefreshEvent.errorEvent(errMessage || '');\r\n\t\tthis.refreshControl(evt);\r\n\t},\r\n\t\r\n\taddFieldError: function(fldName, errorMsg, valueIndex, inputText) {\r\n\t\tjslet.data.FieldError.put(this.getRecord(), fldName, errorMsg, valueIndex, inputText);\r\n\t},\r\n\t\r\n\t/**\r\n\t * Check whether the specified record exists error.\r\n\t * \r\n\t * @param {Integer | Object} recnoOrRecord Record number.\r\n\t * @param {String[]} includeFields Checking field names.\r\n\t * @param {String[]} excludeFields Unchecking field names.\r\n\t * \r\n\t * @return {Boolean} True - exist error, false - otherwise.\r\n\t */\r\n\texistRecordError: function(recno, includeFields, excludeFields) {\r\n\t\treturn jslet.data.FieldError.existRecordError(this.getRecord(recno), includeFields, excludeFields);\r\n\t},\r\n\t\r\n\tgetRecordErrorInfo: function(recno, includeFields, excludeFields) {\r\n\t\tvar record = this.getRecord(recno);\r\n\t\tif(!this.existRecordError()) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t\tvar recInfo = jslet.data.getRecInfo(record);\r\n\t\tif(!recInfo) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar result = '',\r\n\t\t\terrObj = recInfo.error,\r\n\t\t\tfldObj;\r\n\t\tif(errObj) {\r\n\t\t\tfor(var fldName in errObj) {\r\n\t\t\t\tif(excludeFields && excludeFields.indexOf(fldName) >= 0) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif(includeFields && includeFields.indexOf(fldName) < 0) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tvar msg = jslet.data.FieldError.get(record, fldName).message;\r\n\t\t\t\tif(msg) {\r\n\t\t\t\t\tfldObj = this.getField(fldName);\r\n\t\t\t\t\tif(result) {\r\n\t\t\t\t\t\tresult += ', ';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresult += msg;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @private\r\n\t * \r\n\t * Check show error message if the dataset exists error data.\r\n\t * \r\n\t * @param {String[]} includeFields Checking field names.\r\n\t * @param {String[]} excludeFields Unchecking field names.\r\n\t * @param {jslet.data.RecordRange} recordRange - checking record range.\r\n\t */\r\n\tcheckAndShowError: function(includeFields, excludeFields, recordRange) {\r\n\t\tvar Z = this;\r\n\t\tif(Z.existDatasetError(includeFields, excludeFields, recordRange)) {\r\n\t\t\tif (Z._autoShowError) {\r\n\t\t\t\tjslet.showError(jsletlocale.Dataset.cannotConfirm, function() {\r\n\t\t\t\t\tZ.focusFirstErrorField();\r\n\t\t\t\t}, 2000);\r\n\t\t\t} else {\r\n\t\t\t\tconsole.warn(jsletlocale.Dataset.cannotConfirm);\r\n\t\t\t\tZ.focusFirstErrorField();\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Check whether the dataset exists error data.\r\n\t * \r\n\t *     @example\r\n\t *     dsObj.existDatasetError(); //Check all fields\r\n\t *     dsObj.existDatasetError(['fld1', 'fld2']); //Check 'fld1' and 'fld2'\r\n\t * \r\n\t * @param {String[]} includeFields Checking field names.\r\n\t * @param {String[]} excludeFields Unchecking field names.\r\n\t * @param {jslet.data.RecordRange} recordRange - checking record range.\r\n\t * \r\n\t * @return {Boolean} True - exist error, false - otherwise.\r\n\t */\r\n\texistDatasetError: function(includeFields, excludeFields, recordRange) {\r\n\t\tvar Z = this, isError = false,\r\n\t\t\trecords = Z.records();\r\n\t\tif(!records) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif(recordRange === jslet.data.RecordRange.CURRENT) {\r\n\t\t\treturn jslet.data.FieldError.existRecordError(Z.getRecord(), includeFields, excludeFields);\r\n\t\t}\r\n\t\tif(recordRange === jslet.data.RecordRange.SELECTED) {\r\n\t\t\trecords = Z.selectedRecords() || [];\t\t\r\n\t\t}\r\n\t\tfor(var i = 0, len = records.length; i < len; i++) {\r\n\t\t\tisError = jslet.data.FieldError.existRecordError(records[i], includeFields, excludeFields);\r\n\t\t\tif(isError) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Confirm the current record which is inserting or updating. This method will validate first, and change the dataset status to 'Browse'.\r\n\t * \r\n\t * @param {String[]} includeFields Checking field names.\r\n\t * @param {String[]} excludeFields Unchecking field names.\r\n\t * \r\n\t * @return {Boolean} True - the current record is valid, false - otherwise.\r\n\t */\r\n\tconfirm: function (includeFields, excludeFields) {\r\n\t\tvar Z = this;\r\n\t\tif (Z._status === jslet.data.DataSetStatus.BROWSE) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tvar records = Z.records();\r\n\t\tif(!records || records.length ===0) {\r\n\t\t\tZ._status = jslet.data.DataSetStatus.BROWSE;\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tZ._fireDatasetEvent(jslet.data.DatasetEvent.BEFORECONFIRM);\r\n\t\tZ._confirmDetailDataset();\r\n\t\tZ._innerValidateData(includeFields, excludeFields);\r\n\t\tif(Z.status() === jslet.data.DataSetStatus.UPDATE) {\r\n\t\t\tZ.changedStatus(jslet.data.DataSetStatus.UPDATE);\r\n\t\t}\r\n\t\t\r\n\t\tvar evt, hasError = Z.existRecordError(Z.recno(), includeFields, excludeFields);\r\n\t\tvar rec = Z.getRecord();\r\n\t\tZ._modiObject = null;\r\n\t\tZ.status(jslet.data.DataSetStatus.BROWSE);\r\n\t\tif(!hasError) {\r\n\t\t\tZ._changeLog.log();\r\n\t\t}\r\n\t\tZ._fireDatasetEvent(jslet.data.DatasetEvent.AFTERCONFIRM);\r\n\t\tZ._calcAggregatedValueDebounce.call(Z);\r\n\t\tevt = jslet.data.RefreshEvent.updateRecordEvent();\r\n\t\tZ.refreshControl(evt);\r\n\t\tif(hasError) {\r\n\t\t\tZ.errorMessage(jsletlocale.Dataset.cannotConfirm);\t\t\t\r\n\t\t} else {\r\n\t\t\tjslet.data.FieldError.clearRecordError(Z.getRecord(), includeFields, excludeFields);\r\n\t\t\tZ.errorMessage();\r\n\t\t}\r\n\t\tvar dsMaster = Z.masterDataset();\r\n\t\tif (dsMaster) {\r\n\t\t\tvar masterFldName = Z.masterField();\r\n\t\t\tif(hasError) {\r\n\t\t\t\t//'Detail Dataset: {0} has error data!'\r\n\t\t\t\tdsMaster.addFieldError(masterFldName, jslet.formatMessage(jsletlocale.Dataset.detailDsHasError, [Z.name()]));\r\n\t\t\t} else {\r\n\t\t\t\tdsMaster.addFieldError(masterFldName, null);\r\n\t\t\t}\r\n\t\t\tdsMaster.refreshControl(evt);\r\n\t\t}\r\n\t\tZ.refreshLookupHostDataset();\r\n\r\n\t\treturn !hasError;\r\n\t},\r\n\r\n\t/*\r\n\t * @private\r\n\t */\r\n\t_confirmDetailDataset: function() {\r\n\t\tvar Z = this,\r\n\t\t\tfldObj, i, len,\r\n\t\t\tdtlDatasets = [],\r\n\t\t\tdtlFields = [];\r\n\t\tfor (i = 0, len = Z._normalFields.length; i < len; i++) {\r\n\t\t\tfldObj = Z._normalFields[i];\r\n\t\t\tif(fldObj.getType() === jslet.data.DataType.DATASET) {\r\n\t\t\t\tdtlDatasets.push(fldObj.detailDataset());\r\n\t\t\t\tdtlFields.push(fldObj.name());\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar dsDetail, oldShowError;\r\n\t\tfor(i = 0, len = dtlDatasets.length; i < len; i++) {\r\n\t\t\tdsDetail = dtlDatasets[i];\r\n\t\t\tif(!dsDetail) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tdsDetail.confirm();\r\n\t\t\tif(dsDetail.existDatasetError()) {\r\n\t\t\t\t//'Detail Dataset: {0} has error data!'\r\n\t\t\t\tZ.addFieldError(dtlFields[i], jslet.formatMessage(jsletlocale.Dataset.detailDsHasError, [dsDetail.name()]));\r\n\t\t\t} else {\r\n\t\t\t\tZ.addFieldError(dtlFields[i], null);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t * Cancel inserting or updating. This method will rollback the current record and change dataset status to 'Browse'.\r\n\t */\r\n\tcancel: function () {\r\n\t\tvar Z = this;\r\n\t\tif (Z._status == jslet.data.DataSetStatus.BROWSE) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tif (Z.recordCount() === 0) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tZ._aborted = false;\r\n\t\ttry {\r\n\t\t\tZ._fireDatasetEvent(jslet.data.DatasetEvent.BEFORECANCEL);\r\n\t\t\tif (Z._aborted) {\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t} finally {\r\n\t\t\tZ._aborted = false;\r\n\t\t}\r\n\t\t Z._cancelDetailDataset();\r\n\t\t var evt, \r\n\t\t\tk = Z._recno,\r\n\t\t\trecords = Z.records();\r\n\t\tif (Z._status == jslet.data.DataSetStatus.INSERT) {\r\n\t\t\tZ.selection.removeAll();\r\n\t\t\tvar no = Z.recno();\r\n\t\t\trecords.splice(k, 1);\r\n\t\t\tZ.status(jslet.data.DataSetStatus.BROWSE);\r\n\t\t\tZ._refreshInnerRecno();\r\n\t\t\tif(no >= Z.recordCount()) {\r\n\t\t\t\tZ._recno = Z.recordCount() - 1;\r\n\t\t\t}\r\n\t\t\tZ._refreshProxyField();\r\n\t\t\tif (Z._contextRuleEnabled) {\r\n\t\t\t\tthis.calcContextRule();\r\n\t\t\t}\r\n\r\n\t\t\tZ._calcAggregatedValueDebounce.call(Z);\r\n\t\t\tevt = jslet.data.RefreshEvent.deleteEvent(no);\r\n\t\t\tZ.refreshControl(evt);\r\n\t\t\tZ._fireDatasetEvent(jslet.data.DatasetEvent.AFTERSCROLL);\r\n\t\t\tevt = jslet.data.RefreshEvent.scrollEvent(Z._recno); \r\n\t\t\tZ.refreshControl(evt); \r\n\t\t\treturn this;\r\n\t\t} else {\r\n\t\t\tif (Z._filteredRecnoArray) {\r\n\t\t\t\tk = Z._filteredRecnoArray[Z._recno];\r\n\t\t\t}\r\n\t\t\tvar currRec = records[k];\r\n\t\t\tvar modiObj = Z._modiObject;\r\n\t\t\tjQuery.extend(currRec, modiObj);\r\n\t\t\tfor(var propName in currRec) {\r\n\t\t\t\tif(modiObj[propName] === undefined) {\r\n\t\t\t\t\tdelete currRec[propName];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tZ._innerValidateData();\r\n\r\n\t\t\tjslet.data.FieldValueCache.removeCache(currRec);\r\n\t\t\tZ._modiObject = null;\r\n\t\t}\r\n\r\n\t\tZ._refreshProxyField();\r\n\t\tZ._calcAggregatedValueDebounce.call(Z);\r\n\t\tZ.status(jslet.data.DataSetStatus.BROWSE);\r\n\t\tZ._fireDatasetEvent(jslet.data.DatasetEvent.AFTERCANCEL);\r\n\r\n\t\tevt = jslet.data.RefreshEvent.updateRecordEvent();\r\n\t\tZ.refreshControl(evt);\r\n\t\treturn this;\r\n\t},\r\n\r\n    /*\r\n     * @private\r\n     */\r\n    _cancelDetailDataset: function() {\r\n        var Z = this,\r\n            fldObj, i, len,\r\n            detailDatasets = [];\r\n        for (i = 0, len = Z._normalFields.length; i < len; i++) {\r\n            fldObj = Z._normalFields[i];\r\n            if(fldObj.getType() === jslet.data.DataType.DATASET) {\r\n                detailDatasets.push(fldObj.detailDataset());\r\n            }\r\n        }\r\n        var dsDetail;\r\n        for(i = 0, len = detailDatasets.length; i < len; i++) {\r\n            dsDetail = detailDatasets[i];\r\n            dsDetail.cancel();\r\n        }\r\n    },\r\n     \r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * If logChanges is false, the changes made by user will not be send to server. <br />\r\n\t * If you don't need submit data to server, you can set this property value to false.\r\n\t * <br />Default value: true. Example:\r\n\t * \r\n\t *     @example\r\n\t *     dsObj.logChanges(true); //Set property, return this.\r\n\t *     var propValue = dsObj.logChanges(); //Get property value.\r\n\t * \r\n\t * @param {Boolean | undefined} logChanges - True: log user changes, false - otherwise.\r\n\t * \r\n\t * @return {this | Boolean}\r\n\t */\r\n\tlogChanges: function (logChanges) {\r\n\t\tif (logChanges === undefined) {\r\n\t\t\treturn this._logChanges;\r\n\t\t}\r\n\r\n\t\tthis._logChanges = logChanges;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Edit log means the log when user modify records. For some sensitive data, user need audit who & when modify data. Example: \r\n\t * \r\n\t *     @example\r\n\t *     dsObj.auditLogEnabled(true); //Set property, return this.\r\n\t *     var propValue = dsObj.auditLogEnabled(); //Get property value.\r\n\t * \r\n\t * @param {Boolean | undefined} auditLogEnabled - True: enable audit log, false - otherwise.\r\n\t * \r\n\t * @return {this | Boolean}\r\n\t */\r\n\tauditLogEnabled: function(auditLogEnabled) {\r\n\t\tif(auditLogEnabled === undefined) {\r\n\t\t\treturn this._auditLogEnabled;\r\n\t\t}\r\n\t\tthis._auditLogEnabled = auditLogEnabled? true: false;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Identify whether enable field value validating or not. Example: \r\n\t * \r\n\t *     @example\r\n\t *     dsObj.validationEnabled(true); //Set property, return this.\r\n\t *     var propValue = dsObj.validationEnabled(); //Get property value.\r\n\t * \r\n\t * @param {Boolean | undefined} validationEnabled - True: enable field value validating, false - otherwise.\r\n\t * \r\n\t * @return {this | Boolean}\r\n\t */\r\n\tvalidationEnabled: function(validationEnabled) {\r\n\t\tif(validationEnabled === undefined) {\r\n\t\t\treturn this._validationEnabled;\r\n\t\t}\r\n\t\tthis._validationEnabled = validationEnabled? true: false;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Disable refreshing controls, it's always used in a batch operation;\r\n\t * After batch operating, use {@link jslet.data.Dataset#enableControls}(). Example:\r\n\t * \r\n\t *     @example\r\n\t *     dsObj.disableControls();\r\n\t *     try {\r\n\t *       dsObj.setFieldValue('fld1', 123); //It won't refresh UI.\r\n\t *       ...\r\n\t *     } finally {\r\n\t *       dsObj.enableControls();\r\n\t *     }\r\n\t * \r\n\t * @return {this}\r\n\t */\r\n\tdisableControls: function () {\r\n\t\tthis._lockCount++;\r\n\t\tvar fldObj, dsDetail;\r\n\t\tfor (var i = 0, cnt = this._normalFields.length; i < cnt; i++) {\r\n\t\t\tfldObj = this._normalFields[i];\r\n\t\t\tdsDetail = fldObj.detailDataset();\r\n\t\t\tif (dsDetail !== null) {\t\t\t\t\r\n\t\t\t\tdsDetail.disableControls();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Enable refreshing controls.. Example:\r\n\t * \r\n\t *     @example\r\n\t *     dsObj.disableControls();\r\n\t *     try {\r\n\t *       dsObj.setFieldValue('fld1', 123); //It won't refresh UI.\r\n\t *       ...\r\n\t *     } finally {\r\n\t *       dsObj.enableControls();\r\n\t *     }\r\n\t * \r\n\t * @param {Boolean} refreshCtrl true - Refresh control immediately, false - Otherwise.\r\n\t * \r\n\t * @return {this}\r\n\t */\r\n\tenableControls: function (needRefreshCtrl) {\r\n\t\tif (this._lockCount > 0) {\r\n\t\t\tthis._lockCount--;\r\n\t\t}\r\n\t\tif (!needRefreshCtrl) {\r\n\t\t\tthis.refreshControl();\r\n\t\t}\r\n\r\n\t\tvar fldObj, dsDetail;\r\n\t\tfor (var i = 0, cnt = this._normalFields.length; i < cnt; i++) {\r\n\t\t\tfldObj = this._normalFields[i];\r\n\t\t\tdsDetail = fldObj.detailDataset();\r\n\t\t\tif (dsDetail !== null) {\t\t\t\t\r\n\t\t\t\tdsDetail.enableControls();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Check whether the specified field of current record is valid or not.\r\n\t * \r\n\t * @param {String} fldName Field name;\r\n\t * @param {Integer} valueIndex (optional) Field value index, only used for field.valueStyle is BETWEEN or MULTIPLE, start with 0.\r\n\t * \r\n\t * @return {Boolean} True - exists invalid data, false -otherwise.\r\n\t */\r\n\texistFieldError: function(fldName, valueIndex) {\r\n\t\tif (this.recordCount() === 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tvar currRec = this.getRecord();\r\n\t\tif (!currRec) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn jslet.data.FieldError.existFieldError(currRec, fldName, valueIndex);\r\n\t},\r\n\t\r\n\t/**\r\n\t * Get the specified field error message of current record. Example:\r\n\t * \r\n\t *     @example\r\n\t *     var errorObj = dataset.getFieldError('field1'); //return: {message: 'Not Exists!', inputText: 'Foo'}\r\n\t * \r\n\t * @param {String} fldName Field name.\r\n\t * @param {Integer} valueIndex (optional) Field value index, only used for field.valueStyle is BETWEEN or MULTIPLE, start with 0.\r\n\t * \r\n\t * @return {Object} Error Object, like {message: 'Not Exists!', inputText: 'Foo'}\r\n\t */\r\n\tgetFieldError: function(fldName, valueIndex) {\r\n\t\treturn this.getFieldErrorByRecno(null, fldName, valueIndex);\r\n\t},\r\n\t\r\n\t/**\r\n\t * Get the specified field error message of specified record. Example:\r\n\t * \r\n\t *     @example\r\n\t *     var errorObj = getFieldErrorByRecno(19, 'field1'); //return: {message: 'Not Exists!', inputText: 'Foo'}\r\n\t * \r\n\t * @param {Integer} recno Record Number.\r\n\t * @param {String} fldName Field name.\r\n\t * @param {Integer} valueIndex (optional) Field value index, only used for field.valueStyle is BETWEEN or MULTIPLE, start with 0.\r\n\t * \r\n\t * @return {Object} Error Object, like {message: 'Not Exists!', inputText: 'Foo'}\r\n\t */\r\n\tgetFieldErrorByRecno: function(recno, fldName, valueIndex) {\r\n\t\tif (this.recordCount() === 0) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tvar currRec = this.getRecord(recno);\r\n\t\tif (!currRec) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn jslet.data.FieldError.get(currRec, fldName, valueIndex);\r\n\t},\r\n\t\r\n\t/**\r\n\t * Set the specified field error message of current record. Example:\r\n\t * \r\n\t *     @example\r\n\t * \t   var errorObj = dataset.setFieldError('field1', 'Not Exists!', null, 'Foo');\r\n\t * \r\n\t * @param {String} fldName Field name.\r\n\t * @param {String} errorMsg Field error message.\r\n\t * @param {Integer} valueIndex (Optional)Field value index, only used for field.valueStyle is BETWEEN or MULTIPLE, start with 0.\r\n\t * @param {String} inputText (Optional)User input text.\r\n\t * \r\n\t * @return {this}\r\n\t */\r\n\tsetFieldError: function(fldName, errorMsg, valueIndex, inputText) {\r\n\t\tvar Z = this;\r\n\t\tif (Z.recordCount() === 0) {\r\n\t\t\treturn Z;\r\n\t\t}\r\n\r\n\t\tvar currRec = Z.getRecord();\r\n\t\tif (!currRec) {\r\n\t\t\treturn Z;\r\n\t\t}\r\n\t\tjslet.data.FieldError.put(currRec, fldName, errorMsg, valueIndex, inputText);\r\n\t\treturn this;\r\n\t},\r\n\t\t\r\n\t/**\r\n\t * Get field value with specified record number and field name.\r\n\t * \r\n\t *     @example\r\n\t *     dsObj.getFieldValueByRecno(2, 'fld1');\r\n\t *     dsObj.getFieldValueByRecno(2, 'fld2', 0); //fld2 value is an array.\r\n\t * \r\n\t * @param {Integer} recno Specified record number.\r\n\t * @param {String} fldName Field name.\r\n\t * @param {Integer} valueIndex (optional) Field value index, only used for field.valueStyle is BETWEEN or MULTIPLE, start with 0.\r\n\t * \r\n\t * @return {Object} field value.\r\n\t */\r\n\tgetFieldValueByRecno: function(recno, fldName, valueIndex) {\r\n\t\tvar dataRec = this.getRecord(recno);\r\n\t\tif(!dataRec) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn this.getFieldValueByRecord(dataRec, fldName, valueIndex);\r\n\t},\r\n\t\r\n\t/**\r\n\t * Get field value of specified record.\r\n\t * \r\n\t *     @example\r\n\t *     var recObj = dsObj.getRecord(2);\r\n\t *     dsObj.getFieldValueByRecno(recObj, 'fld1');\r\n\t *     dsObj.getFieldValueByRecno(recObj, 'fld2', 0); //fld2 value is an array.\r\n\t * \r\n\t * @param {Object} dataRec Specified record.\r\n\t * @param {String} fldName Field name.\r\n\t * @param {Integer} valueIndex (optional) Field value index, only used for field.valueStyle is BETWEEN or MULTIPLE, start with 0.\r\n\t * \r\n\t * @return {Object} field value.\r\n\t */\r\n\tgetFieldValueByRecord: function (dataRec, fldName, valueIndex) {\r\n\t\tvar Z = this;\r\n\r\n\t\tif (!dataRec) {\r\n\t\t\tdataRec = Z.getRecord();\r\n\t\t}\r\n\t\tZ._refreshProxyField(dataRec, true);\r\n\r\n\t\tvar k = fldName.indexOf('.'), \r\n\t\t\tdtlFldName, fldValue = null,\r\n\t\t\tfldObj = Z.getField(fldName),\r\n\t\t\tvalue, lkds;\r\n\t\tif (k > 0) { //field chain\r\n\t\t\tdtlFldName = fldName.substr(0, k);\r\n\t\t\tfldObj = Z.getField(dtlFldName);\r\n\t\t\tvar lkf = fldObj.lookup(),\r\n\t\t\t\tdsDetail = fldObj.detailDataset();\r\n\t\t\t\r\n\t\t\tif (!lkf && !dsDetail) {\r\n\t\t\t\tthrow new Error(jslet.formatMessage(jsletlocale.Dataset.lookupNotFound, [dtlFldName]));\r\n\t\t\t}\r\n\t\t\tif(lkf) {\r\n\t\t\t\tvalue = jslet.data.FieldRawValueAccessor.getRawValue(dataRec, fldObj);\r\n\t\t\t\tlkds = lkf.dataset();\r\n\t\t\t\tfldValue = null;\r\n\t\t\t\tif(value || value === 0) {\r\n\t\t\t\t\tif (lkds.findByField(lkds.keyField(), value)) {\r\n\t\t\t\t\t\tfldValue = lkds.getFieldValue(fldName.substr(k + 1));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.warn(jslet.formatMessage(jsletlocale.Dataset.valueNotFound,\r\n\t\t\t\t\t\t\t\t[lkds.description(), lkds.keyField(), value]));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfldValue = dsDetail.getFieldValue(fldName.substr(k + 1));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} else { //single field\r\n\t\t\tif (!fldObj) {\r\n\t\t\t\tthrow new Error(jslet.formatMessage(jsletlocale.Dataset.fieldNotFound, [fldName]));\r\n\t\t\t}\r\n\t\t\tvar formula = fldObj.formula();\r\n\t\t\tif (!formula) {\r\n\t\t\t\tfldValue = jslet.data.FieldRawValueAccessor.getRawValue(dataRec, fldObj);\r\n\t\t\t} else {\r\n\t\t\t\tif(dataRec[fldName] === undefined) {\r\n\t\t\t\t\tfldValue = Z._calcFormula(dataRec, fldName);\r\n\t\t\t\t\tjslet.data.FieldRawValueAccessor.setRawValue(dataRec, fldObj, fldValue);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfldValue = jslet.data.FieldRawValueAccessor.getRawValue(dataRec, fldObj);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(!fldObj.valueStyle() || valueIndex === undefined) { //jslet.data.FieldValueStyle.NORMAL\r\n\t\t\treturn fldValue;\r\n\t\t}\r\n\t\treturn jslet.getArrayValue(fldValue, valueIndex);\r\n\t},\r\n\r\n\t/**\r\n\t * Get field value of current record.\r\n\t * \r\n\t *     @example\r\n\t *     dsObj.getFieldValue('fld1');\r\n\t *     dsObj.getFieldValue('fld2', 0); //fld2 value is an array.\r\n\t * \r\n\t * @param {String} fldName Field name.\r\n\t * @param {Integer} valueIndex (optional) Field value index, only used for field.valueStyle is BETWEEN or MULTIPLE, start with 0.\r\n\t * \r\n\t * @return {Object}\r\n\t */\r\n\tgetFieldValue: function (fldName, valueIndex) {\r\n\t\tvar currRec = this.getRecord();\r\n\t\tif (!currRec) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn this.getFieldValueByRecord(currRec, fldName, valueIndex);\r\n\t},\r\n\r\n\t_convertValueByType: function(fldName, value, dataType, scale, trimBlank) {\r\n\t\tif(!value || dataType === jslet.data.DataType.DATASET) {\r\n\t\t\treturn value;\r\n\t\t}\r\n\t\tif(jslet.isArray(value)) {\r\n\t\t\tfor(var i = 0, len = value.length; i < len; i++) {\r\n\t\t\t\tvalue[i] = this._convertValueByType(fldName, value[i], dataType, scale, trimBlank);\r\n\t\t\t}\r\n\t\t\treturn value;\r\n\t\t}\r\n\t\tif(dataType === jslet.data.DataType.NUMBER) {\r\n\t\t\tvar oldValue = value;\r\n\t\t\tvalue = scale > 0 ? parseFloat(value): parseInt(value);\r\n\t\t\tif(window.isNaN(value)) {\r\n\t\t\t\t//Invalid value: [{1}] for NUMBER field: [{0}]!\r\n\t\t\t\tthrow new Error(jslet.formatMessage(jsletlocale.Dataset.invalidNumberFieldValue, [fldName, oldValue]));\r\n\t\t\t}\r\n\t\t\treturn value;\r\n\t\t}\r\n\t\tif(trimBlank && dataType === jslet.data.DataType.STRING && jslet.isString(value)) {\r\n\t\t\treturn value.trim();\r\n\t\t}\r\n\t\treturn value;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Set field value of current record.\r\n\t * \r\n\t *     @example\r\n\t *     dsObj.setFieldValue('fld1', 123);\r\n\t *     dsObj.getFieldValue('fld2', ['one', 'two']); //fld2 value is an array.\r\n\t *     dsObj.getFieldValue('fld2', 'one1', 0); //fld2 value is an array.\r\n\t * \r\n\t * @param {String} fldName Field name.\r\n\t * @param {Object} value Field value.\r\n\t * @param {Integer} valueIndex (optional) Field value index, only used for field.valueStyle is BETWEEN or MULTIPLE, start with 0.\r\n\t * \r\n\t * @return {this}\r\n\t */\r\n\tsetFieldValue: function (fldName, value, valueIndex) {\r\n\t\tvar Z = this,\r\n\t\t\tfldObj = Z.getField(fldName);\r\n\t\tif (fldObj === null) {\r\n\t\t\tthrow new Error(jslet.formatMessage(jsletlocale.Dataset.fieldNotFound, [fldName]));\r\n\t\t}\r\n\t\tif(Z._status == jslet.data.DataSetStatus.BROWSE) {\r\n\t\t\tZ.editRecord();\r\n\t\t}\r\n\t\tvar auditLogRec = Z._logOldEditValue(fldName, fldObj.label());\r\n\t\tvar currRec = Z.getRecord(),\r\n\t\t\tdataType = fldObj.getType();\r\n\t\tvalue = Z._convertValueByType(fldName, value, dataType, fldObj.scale(), fldObj.trimBlank());\r\n\t\t\r\n\t\tif(Z._validationEnabled) {\r\n\t\t\tvar invalidMsg = Z._fieldValidator.checkValue(fldObj, value);\r\n\t\t\tif(invalidMsg) {\r\n\t\t\t\tZ.setFieldError(fldName, invalidMsg);\r\n\t\t\t} else {\r\n\t\t\t\tZ.setFieldError(fldName, null, valueIndex);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(!fldObj.valueStyle() || valueIndex === undefined) { //jslet.data.FieldValueStyle.NORMAL\r\n\t\t\tjslet.data.FieldRawValueAccessor.setRawValue(currRec, fldObj, value);\r\n\t\t\tif (dataType == jslet.data.DataType.DATASET) {//dataset field\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar arrValue = jslet.data.FieldRawValueAccessor.getRawValue(currRec, fldObj);\r\n\r\n\t\t\tif(!arrValue || !jslet.isArray(arrValue)) {\r\n\t\t\t\tarrValue = [];\r\n\t\t\t}\r\n\t\t\tvar len = arrValue.length;\r\n\t\t\tif(valueIndex < len) {\r\n\t\t\t\tarrValue[valueIndex] = value;\r\n\t\t\t} else {\r\n\t\t\t\tfor(var i = len; i < valueIndex; i++) {\r\n\t\t\t\t\tarrValue.push(null);\r\n\t\t\t\t}\r\n\t\t\t\tarrValue.push(value);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tjslet.data.FieldRawValueAccessor.setRawValue(currRec, fldObj, arrValue);\r\n\t\t}\r\n\t\tif (Z._onFieldChanged) {\r\n\t\t\tvar eventFunc = jslet.getFunction(Z._onFieldChanged);\r\n\t\t\tif(eventFunc) {\r\n\t\t\t\teventFunc.call(Z, fldName, value, valueIndex);\r\n\t\t\t\tvalue = Z.getFieldValue(fldName, valueIndex);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(Z.isFireGlobalEvent()) {\r\n\t\t\tvar globalHandler = jslet.data.globalDataHandler.fieldValueChanged();\r\n\t\t\tif(globalHandler) {\r\n\t\t\t\tglobalHandler.call(Z, Z, fldName, value, valueIndex);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(fldObj.valueFollow()) {\r\n\t\t\tif(!Z._followedValues) {\r\n\t\t\t\tZ._followedValues = {};\r\n\t\t\t}\r\n\t\t\tZ._followedValues[fldName] = value;\r\n\t\t}\r\n\t\tZ._refreshProxyField(currRec, true);\r\n\t\t//calc other fields' range to use context rule\r\n\t\tif (Z._contextRuleEnabled) {\r\n\t\t\tZ.calcContextRule(fldName);\r\n\t\t}\r\n\t\tjslet.data.FieldValueCache.clear(currRec, fldName);\r\n\t\tZ._logNewEditValue(fldName, auditLogRec);\r\n\t\tZ._updateLookupRelativeFields(fldObj, value);\r\n\t\tvar evt = jslet.data.RefreshEvent.updateRecordEvent(fldName);\r\n\t\tZ.refreshControl(evt);\r\n\t\tZ.updateFormula(fldName);\r\n\t\tZ._calcAggregatedValueDebounce.call(Z);\r\n\t\treturn this;\r\n\t},\r\n\r\n\t_logOldEditValue: function(fldName, fldLabel) {\r\n\t\tvar Z = this;\r\n\t\tif(!Z._auditLogEnabled || !Z._logChanges) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar status = Z.changedStatus() || Z._status;\r\n\t\tif(status !== jslet.data.DataSetStatus.UPDATE) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar currRec = Z.getRecord(); \r\n\t\tvar auditLog = currRec[jslet.global.auditLogField];\r\n\t\tif(!auditLog) {\r\n\t\t\tauditLog = {};\r\n\t\t\tcurrRec[jslet.global.auditLogField] = auditLog;\r\n\t\t}\r\n\t\tvar logRec = auditLog[fldName];\r\n\t\tif(!logRec) {\r\n\t\t\tlogRec = {};\r\n\t\t\tauditLog[fldName] = logRec;\r\n\t\t\tlogRec.l = fldLabel;\r\n\t\t}\r\n\t\tvar oldValue = logRec.o;\r\n\t\tif(!oldValue) {\r\n\t\t\tlogRec.o = Z.getFieldText(fldName);\r\n\t\t}\r\n\t\treturn logRec;\r\n\t},\r\n\t\r\n\t_logNewEditValue: function(fldName, auditLogRec) {\r\n\t\tif(auditLogRec) {\r\n\t\t\tvar newValue = this.getFieldText(fldName);\r\n\t\t\tif(newValue != auditLogRec.o) {\r\n\t\t\t\tauditLogRec.n = newValue;\r\n\t\t\t} else {\r\n\t\t\t\tvar currRec = this.getRecord(); \r\n\t\t\t\tvar auditLog = currRec[jslet.global.auditLogField];\r\n\t\t\t\tdelete auditLog[fldName];\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\tclearFollowedValues: function() {\r\n\t\tthis._followedValues = null;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\tcalcFocusedFields: function() {\r\n\t\tvar Z = this, fldObj;\r\n\t\tZ._focusedFields = null;\r\n\t\tfor(var i = 0, len = Z._normalFields.length; i < len; i++) {\r\n\t\t\tfldObj = Z._normalFields[i];\r\n\t\t\tif(fldObj.focused()) {\r\n\t\t\t\tif(!Z._focusedFields) {\r\n\t\t\t\t\tZ._focusedFields = [];\r\n\t\t\t\t}\r\n\t\t\t\tZ._focusedFields.push(fldObj.name());\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(Z.masterField()) {\r\n\t\t\tvar masterDsObj = jslet.data.getDataset(Z._masterDataset),\r\n\t\t\t\tmasterFldObj = masterDsObj.getField(Z._masterField);\r\n\t\t\tmasterFldObj.focused(Z._focusedFields && Z._focusedFields.length > 0);\r\n\t\t}\r\n\t},\r\n\t\r\n\tfocusedFields: function() {\r\n\t\treturn this._focusedFields;\r\n\t},\r\n\t\r\n\tmergedFocusedFields: function() {\r\n\t\tvar fields = this._focusedFields,\r\n\t\t\tresult = fields,\r\n\t\t\tcanFields = this._canFocusFields,\r\n\t\t\tfldName, fldObj;\r\n\t\tif(fields && canFields) {\r\n\t\t\tfor(var i = fields.length - 1; i >= 0; i--) {\r\n\t\t\t\tfldName = fields[i];\r\n\t\t\t\tfldObj = this.getField(fldName);\r\n\t\t\t\tif(fldObj.detailDataset()) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif(canFields.indexOf(fldName) < 0) {\r\n\t\t\t\t\tresult = fields.slice(0);\r\n\t\t\t\t\tresult.splice(i, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\t\r\n\t_updateLookupRelativeFields: function(fldObj, fldValue) {\r\n\t\t//Only single value can update relative fields.\r\n\t\tif(!fldValue || fldObj.valueStyle() !== jslet.data.FieldValueStyle.NORMAL) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar lkObj = fldObj.lookup();\r\n\t\tif(!lkObj) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar lkRtnFldMap = lkObj.returnFieldMap();\r\n\t\tif(!lkRtnFldMap) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar lkFldName, lkDs = lkObj.dataset();\r\n\t\tif(jslet.compareValue(lkDs.keyValue(), fldValue) !== 0) {\r\n\t\t\tif(!lkDs.findByKey(fldValue)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar keyFldName = fldObj.name();\r\n\t\tfor(var fldName in lkRtnFldMap) {\r\n\t\t\t//Avoid setting value to key field.\r\n\t\t\tif(keyFldName == fldName) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tlkFldName = lkRtnFldMap[fldName];\r\n\t\t\tthis.setFieldValue(fldName, lkDs.getFieldValue(lkFldName));\r\n\t\t}\r\n\t\t\r\n\t},\r\n\t\r\n\t_calcFormulaRelation: function() {\r\n\t\tvar Z = this;\r\n\t\tif(!Z._innerFormularFields) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar fldName, formulaFields, formulaFldName, fldObj,\r\n\t\t\trelation = {}, \r\n\t\t\tcount = 0;\r\n\t\tfor(var fldName in Z._innerFormularFields) {\r\n\t\t\tvar evaluator = Z._innerFormularFields[fldName];\r\n\t\t\tformulaFields = evaluator.mainFields();\r\n\t\t\trelation[fldName] = formulaFields;\r\n\t\t\tcount++;\r\n\t\t}\r\n\t\tZ._innerFormulaRelation = count > 0? relation: null;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @private\r\n\t */\r\n\taddInnerFormulaField: function(fldName, formula) {\r\n\t\tvar Z = this;\r\n\t\tif(!formula) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!Z._innerFormularFields) {\r\n\t\t\tZ._innerFormularFields = {};\r\n\t\t}\r\n\t\tvar evaluator = new jslet.data.Expression(Z, formula);\r\n\t\tZ._innerFormularFields[fldName] = evaluator;\r\n\t\tZ._calcFormulaRelation();\r\n\t},\r\n\t\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tremoveInnerFormulaField: function (fldName) {\r\n\t\tif (this._innerFormularFields) {\r\n\t\t\tdelete this._innerFormularFields[fldName];\r\n\t\t\tthis._calcFormulaRelation();\r\n\t\t}\r\n\t},\r\n\r\n\t_calcFormula: function(currRec, fldName) {\r\n\t\tvar Z = this,\r\n\t\t\tevaluator = Z._innerFormularFields[fldName],\r\n\t\t\tresult = null;\r\n\t\tif(evaluator) {\r\n\t\t\tevaluator.context.dataRec = currRec;\r\n\t\t\tresult = evaluator.eval();\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tupdateFormula: function (changedFldName) {\r\n\t\tvar Z = this;\r\n\t\tif(!Z._innerFormulaRelation) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar fields, fldObj,\r\n\t\t\tcurrRec = this.getRecord();\r\n\t\tfor(var fmlFldName in Z._innerFormulaRelation) {\r\n\t\t\tfields = Z._innerFormulaRelation[fmlFldName];\r\n\t\t\tfldObj = Z.getField(fmlFldName);\r\n\t\t\tif(!fields || fields.length === 0) {\r\n\t\t\t\tfldObj.setValue(Z._calcFormula(currRec, fmlFldName));\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tvar found = false, fldName;\r\n\t\t\tfor(var j = 0, cnt = fields.length; j < cnt; j++) {\r\n\t\t\t\tfldName = fields[j];\r\n\t\t\t\tif(fldName == changedFldName || fldName.startsWith(changedFldName + '.')) {\r\n\t\t\t\t\tfound = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(found) {\r\n\t\t\t\tfldObj.setValue(Z._calcFormula(currRec, fmlFldName));\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t * Get field text. Difference of field text and field value: <br />\r\n\t * Field value: the original value which request from server or send to server. <br />\r\n\t * Field text: the formatting text from field value, it includes two types: 'Input Text' and 'Display Text', an example for them:<br />\r\n\t * Suppose one field value is currency, 'Input Text' is '90123.56', and 'Display Text' is '$90,123.56'. <br />\r\n\t * Example:\r\n\t * \r\n\t *     @example\r\n\t *     dsObj.setFieldValue('fld1', 90123.56);\r\n\t *     dsObj.getFieldText('fld1', true); //return '90123.56'\r\n\t *     dsObj.getFieldText('fld1'); //return '$90,123.56'(DisplayFormat is: '$#,##0.00)\r\n\t * \r\n\t * @param {String} fldName Field name.\r\n\t * @param {Boolean} isEditing (optional) In edit mode or not, if in edit mode, return 'Input Text'(user inputting text), else return 'Display Text'(Display text is almost formatted). \r\n\t * @param {Integer} valueIndex (optional) Field value index, only used for field.valueStyle is BETWEEN or MULTIPLE, starts with 0.\r\n\t * \r\n\t * @return {String} Field text.\r\n\t */\r\n\tgetFieldText: function (fldName, isEditing, valueIndex) {\r\n\t\tif (this.recordCount() === 0) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tvar currRec = this.getRecord();\r\n\t\tif (!currRec) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn this.getFieldTextByRecord(currRec, fldName, isEditing, valueIndex);\r\n\t},\r\n\t\r\n\t/**\r\n\t * Get field display text by record number.\r\n\t * \r\n\t * @param {Object} recno Record number.\r\n\t * @param {String} fldName Field name\r\n\t * @param {Boolean} isEditing (optional) In edit mode or not, if in edit mode, return 'Input Text'(user inputting text), else return 'Display Text'(Display text is almost formatted). \r\n\t * @param {Integer} valueIndex (optional) Field value index, only used for field.valueStyle is BETWEEN or MULTIPLE, start with 0.\r\n\t * \r\n\t * @return {String} Field text.\r\n\t */\r\n\tgetFieldTextByRecno: function (recno, fldName, isEditing, valueIndex) {\r\n\t\tvar dataRec = this.getRecord(recno);\r\n\t\tif(!dataRec) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn this.getFieldTextByRecord(dataRec, fldName, isEditing, valueIndex);\r\n\t},\r\n\t\r\n\t/**\r\n\t * Get field display text with data record.\r\n\t * \r\n\t * @param {Object} dataRec Data record.\r\n\t * @param {String} fldName Field name.\r\n\t * @param {Boolean} isEditing (optional) In edit mode or not, if in edit mode, return 'Input Text'(user inputting text), else return 'Display Text'(Display text is almost formatted). \r\n\t * @param {Integer} valueIndex (optional) Field value index, only used for field.valueStyle is BETWEEN or MULTIPLE, starts with 0.\r\n\t * \r\n\t * @return {String} Field text.\r\n\t */\r\n\tgetFieldTextByRecord: function (dataRec, fldName, isEditing, valueIndex) {\r\n\t\tvar Z = this;\r\n\t\tif (Z.recordCount() === 0) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t\tvar currRec = dataRec, fldObj;\r\n\t\t\r\n\t\tZ._refreshProxyField(currRec, true);\r\n\t\t\r\n\t\tvar k = fldName.indexOf('.'), value;\r\n\t\tif (k > 0) { //Field chain\r\n\t\t\tvar dtlFldName = fldName.substr(0, k);\r\n\t\t\tfldName = fldName.substr(k + 1);\r\n\t\t\tfldObj = Z.getField(dtlFldName);\r\n\t\t\tif (!fldObj) {\r\n\t\t\t\tthrow new Error(jslet.formatMessage(jsletlocale.Dataset.fieldNotFound, [fldName]));\r\n\t\t\t}\r\n\t\t\tvar lkf = fldObj.lookup(),\r\n\t\t\t\tdsDetail = fldObj.detailDataset();\r\n\t\t\tif (!lkf && !dsDetail) {\r\n\t\t\t\tthrow new Error(jslet.formatMessage(jsletlocale.Dataset.lookupNotFound, [fldName]));\r\n\t\t\t}\r\n\t\t\tif(lkf) {\r\n\t\t\t\tvalue = currRec[dtlFldName];\r\n\t\t\t\tif (value === null || value === undefined) {\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t}\r\n\t\t\t\tvar lkds = lkf.dataset();\r\n\t\t\t\tif (lkds.findByField(lkds.keyField(), value)) {\r\n\t\t\t\t\tif (fldName.indexOf('.') > 0) {\r\n\t\t\t\t\t\treturn lkds.getFieldValue(fldName);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn lkds.getFieldText(fldName, isEditing, valueIndex);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new Error(jslet.formatMessage(jsletlocale.Dataset.valueNotFound,\r\n\t\t\t\t\t\t\t[lkds.description(), lkds.keyField(), value]));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t//Can't use it in sort function.\r\n\t\t\t\treturn dsDetail.getFieldText(fldName, isEditing, valueIndex);\r\n\t\t\t}\r\n\t\t}\r\n\t\t//Not field chain\r\n\t\tfldObj = Z.getField(fldName);\r\n\t\tif (!fldObj) {\r\n\t\t\tthrow new Error(jslet.formatMessage(jsletlocale.Dataset.lookupNotFound, [fldName]));\r\n\t\t}\r\n\t\tif (fldObj.getType() == jslet.data.DataType.DATASET) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t\tvar valueStyle = fldObj.valueStyle();\r\n\t\t\r\n\t\tif(valueStyle === jslet.data.FieldValueStyle.NORMAL || valueIndex !== undefined) {\r\n\t\t\tvar errObj = jslet.data.FieldError.get(currRec, fldName, valueIndex);\r\n\t\t\tif(errObj && errObj.message) {\r\n\t\t\t\tvar inputText = errObj.inputText;\r\n\t\t\t\tif(inputText !== undefined && inputText !== null) {\r\n\t\t\t\t\treturn inputText;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar result = [];\r\n\t\tif(valueStyle == jslet.data.FieldValueStyle.BETWEEN && valueIndex === undefined)\r\n\t\t{\r\n\t\t\tvar minVal = Z.getFieldTextByRecord(currRec, fldName, isEditing, 0),\r\n\t\t\t\tmaxVal = Z.getFieldTextByRecord(currRec, fldName, isEditing, 1);\r\n\t\t\tif(!isEditing && !minVal && !maxVal){\r\n\t\t\t\treturn '';\r\n\t\t\t}\r\n\t\t\tresult.push(minVal);\r\n\t\t\tif(isEditing) {\r\n\t\t\t\tresult.push(jslet.global.valueSeparator);\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(jsletlocale.Dataset.betweenLabel);\r\n\t\t\t}\r\n\t\t\tresult.push(maxVal);\r\n\t\t\treturn result.join('');\r\n\t\t}\r\n\t\t\r\n\t\tif(valueStyle == jslet.data.FieldValueStyle.MULTIPLE && valueIndex === undefined)\r\n\t\t{\r\n\t\t\tvar arrValues = Z.getFieldValue(fldName), \r\n\t\t\t\tlen = 0;\r\n\t\t\tif(arrValues && jslet.isArray(arrValues)) {\r\n\t\t\t\tlen = arrValues.length - 1;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfor(var i = 0; i <= len; i++) {\r\n\t\t\t\tresult.push(Z.getFieldTextByRecord(currRec, fldName, isEditing, i));\r\n\t\t\t\tif(i < len) {\r\n\t\t\t\t\tresult.push(jslet.global.valueSeparator);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn result.join('');\r\n\t\t}\r\n\t\t//Get cached display value if exists.\r\n\t\tif(!isEditing) {\r\n\t\t\tvar cacheValue = jslet.data.FieldValueCache.get(currRec, fldName, valueIndex);\r\n\t\t\tif(cacheValue !== undefined) {\r\n\t\t\t\treturn cacheValue;\r\n\t\t\t}\r\n\t\t}\r\n\t\tvalue = Z.getFieldValueByRecord(currRec, fldName, valueIndex);\r\n\t\tif (value === null || value === undefined) {\r\n\t\t\tvar fixedValue = fldObj.fixedValue();\r\n\t\t\tif(fixedValue) {\r\n\t\t\t\treturn fixedValue;\r\n\t\t\t}\r\n\t\t\treturn '';\r\n\t\t}\r\n\r\n\t\tvar convert = fldObj.customValueConverter() || jslet.data.getValueConverter(fldObj);\r\n\t\tif(!convert) {\r\n\t\t\tthrow new Error('Can\\'t find any field value converter!');\r\n\t\t}\r\n\t\tvar text = convert.valueToText(fldObj, value, isEditing);\r\n\t\tvar encrypted = fldObj.encrypted(); \r\n\t\tif(!isEditing && encrypted && text) {\r\n\t\t\tvar start = encrypted.start || 0,\r\n\t\t\t\tend = encrypted.end;\r\n\t\t\tif(end === undefined || end === null || end < start) {\r\n\t\t\t\tend = 10000;\r\n\t\t\t}\r\n\t\t\tvar txtLen = text.length;\r\n\t\t\tend = txtLen < end? txtLen: end;\r\n\t\t\tvar oldText = text;\r\n\t\t\ttext = oldText.substring(0, start); \r\n\t\t\tfor(var k = start; k < end; k++) {\r\n\t\t\t\ttext += '*';\r\n\t\t\t}\r\n\t\t\tif(txtLen > end) {\r\n\t\t\t\ttext += oldText.substring(end); \r\n\t\t\t}\r\n\t\t}\r\n\t\t//Put display value into cache\r\n\t\tif(!isEditing) {\r\n\t\t\tjslet.data.FieldValueCache.put(currRec, fldName, text, valueIndex);\r\n\t\t}\r\n\t\treturn text;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tsetFieldValueLength: function(fldObj, valueLength) {\r\n\t\tif(!fldObj.valueStyle()) { //jslet.data.FieldValueStyle.NORMAL\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar value = this.getFieldValue(fldObj.name());\r\n\t\tif(value && jslet.isArray(value)) {\r\n\t\t\tvalue.length = valueLength;\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t * Set field value by input value. Example:\r\n\t * \r\n\t *     @example\r\n\t *     //Field 'department' is a lookup field.\r\n\t *     dsObj.setFieldText('department', '0112'); //input department code\r\n\t *     dsObj.getFieldValue('department'); //return department id: 33\r\n\t *     dsObj.getFieldText('department'); //return department name: 'Sales Dept.'\r\n\t *      \r\n\t * @param {String} fldName Field name.\r\n\t * @param {String} inputText String value inputed by user.\r\n\t * @param {Integer} valueIndex (optional) Field value index, only used for field.valueStyle is BETWEEN or MULTIPLE, starts with 0.\r\n\t */\r\n\tsetFieldText: function (fldName, inputText, valueIndex) {\r\n\t\tvar Z = this,\r\n\t\tfldObj = Z.getField(fldName);\r\n\t\tif (fldObj === null) {\r\n\t\t\tthrow new Error(jslet.formatMessage(jsletlocale.Dataset.fieldNotFound, [fldName]));\r\n\t\t}\r\n\t\tvar fType = fldObj.getType();\r\n\t\tif (fType == jslet.data.DataType.DATASET) {\r\n\t\t\tthrow new Error(jslet.formatMessage(jsletlocale.Dataset.datasetFieldNotBeSetValue, [fldName]));\r\n\t\t}\r\n\t\t\r\n\t\tvar value = Z._textToValue(fldObj, inputText, valueIndex);\r\n\t\tif(value !== undefined) {\r\n\t\t\tZ.setFieldValue(fldName, value, valueIndex);\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\r\n\t_textToValue: function(fldObj, inputText, valueIndex) {\r\n\t\tvar Z = this, value;\r\n\t\t\r\n\t\tif((fldObj.valueStyle() === jslet.data.FieldValueStyle.BETWEEN ||\r\n\t\t\tfldObj.valueStyle() === jslet.data.FieldValueStyle.MULTIPLE) && \t\t\t\t\r\n\t\t\tvalueIndex === undefined) {\r\n\t\t\t//Set an array value\r\n\t\t\tif(!jslet.isArray(inputText)) {\r\n\t\t\t\tinputText = inputText.split(jslet.global.valueSeparator);\r\n\t\t\t}\r\n\t\t\tvar len = inputText.length, \r\n\t\t\t\tvalues = [],\r\n\t\t\t\tinvalid = false;\r\n\t\t\tfor(var k = 0; k < len; k++ ) {\r\n\t\t\t\tvalue = Z._textToValue(fldObj, inputText[k], k);\r\n\t\t\t\tif(value === undefined) {\r\n\t\t\t\t\tinvalid = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif(!invalid) {\r\n\t\t\t\t\t\tvalues.push(value);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(!invalid) {\r\n\t\t\t\treturn values;\r\n\t\t\t}\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t\t\r\n\t\tvar convert = fldObj.customValueConverter() || jslet.data.getValueConverter(fldObj);\r\n\t\tif(!convert) {\r\n\t\t\tthrow new Error('Can\\'t find any field value converter!');\r\n\t\t}\r\n\t\tvalue = convert.textToValue(fldObj, inputText, valueIndex);\r\n\t\tvar fldName = fldObj.name();\r\n\t\tif(Z.getFieldError(fldName, valueIndex)) {\r\n\t\t\tvar evt = jslet.data.RefreshEvent.updateRecordEvent(fldName);\r\n\t\t\tZ.refreshControl(evt);\r\n\t\t} else {\r\n\t\t\tZ.setFieldError(fldName, null, valueIndex);\r\n\t\t}\r\n\t\treturn value;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Get key value of current record. \r\n\t * <br />Key value is field value of key field, and key field is defined by property {@link jslet.data.Dataset#keyField}.\r\n\t * \r\n\t * @param {Integer} recno (optional) If not specified, it will get key value of current record.\r\n\t * @return {Object} Key value.\r\n\t */\r\n\tkeyValue: function (recno) {\r\n\t\tif (!this._keyField || this.recordCount() === 0) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn this.getFieldValueByRecno(recno, this._keyField);\r\n\t},\r\n\r\n\t/**\r\n\t * Get parent record key value of current record.\r\n\t * <br />Key value is field value of parent field, and parent field is defined by property {@link jslet.data.Dataset#parentField}.\r\n\t * \r\n\t * @param {Integer} recno recno optional, if not specified, it will get parent key value of current record.\r\n\t * \r\n\t * @return {Object} Parent record key value.\r\n\t */\r\n\tparentValue: function (recno) {\r\n\t\tif (!this._parentField || this.recordCount() === 0) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn this.getFieldValueByRecno(recno, this._parentField);\r\n\t},\r\n\r\n\t/**\r\n\t * Find record with specified condition\r\n\t * if found, then move cursor to that record. Example:\r\n\t * \r\n\t *     @example\r\n\t *     dsObj.find('like([name],\"Bob%\")'); //Finding the one whose name starts with 'Bob'.\r\n\t *     dsObj.find(\"'[age] > 20' && [gender] == 'F'\"); //Finding girls whose age is great than 20. \r\n\t *     dsObj.find('[age] > 20', true); //Find next\r\n\t *     \r\n\t * @param {String} condition Condition expression.\r\n\t * @param {Boolean} fromCurrentPosition Identify whether finding data from current position or not.\r\n\t * \r\n\t * @return {Boolean} True - found record, false - otherwise.\r\n\t */\r\n\tfind: function (condition, fromCurrentPosition) {\r\n\t\tvar Z = this;\r\n\t\tif (Z.recordCount() === 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tZ.confirm();\r\n\t\tif (condition === null || condition === undefined) {\r\n\t\t\tZ._findCondition = null;\r\n\t\t\tZ._innerFindCondition = null;\r\n\t\t\tZ._findPrevRecno = null;\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tjslet.Checker.test('find#condition', condition).isString();\r\n\t\t\r\n\t\tif (condition !== Z._findCondition) {\r\n\t\t\tZ._innerFindCondition = new jslet.data.Expression(this, condition);\r\n\t\t\tZ._findCondition = condition;\r\n\t\t\tZ._findPrevRecno = null;\r\n\t\t}\r\n\t\tZ._silence++;\r\n\t\tvar foundRecno = -1, \r\n\t\t\toldRecno = Z._recno;\r\n\t\ttry {\r\n\t\t\tif(!fromCurrentPosition) {\r\n\t\t\t\tZ.first();\r\n\t\t\t\tZ._findPrevRecno = null;\r\n\t\t\t} else {\r\n\t\t\t\tif(Z._findPrevRecno === oldRecno) {\r\n\t\t\t\t\tZ.next();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\twhile (!Z.isEof()) {\r\n\t\t\t\tif (Z._innerFindCondition.eval()) {\r\n\t\t\t\t\tfoundRecno = Z._recno;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tZ.next();\r\n\t\t\t}\r\n\t\t} finally {\r\n\t\t\tZ._silence--;\r\n\t\t\tZ._recno = oldRecno;\r\n\t\t}\r\n\t\tif (foundRecno >= 0) {// can fire scroll event\r\n\t\t\tZ._gotoRecno(foundRecno);\r\n\t\t\tif(fromCurrentPosition) {\r\n\t\t\t\tZ._findPrevRecno = foundRecno;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\r\n\t/**\r\n\t * Find record with specified field name and value. If found, move cursor the found record.\r\n\t * \r\n\t *     @example\r\n\t *     dsObj.findByField('name', 'Tom'); // return true\r\n\t *     dsObj.findByField('id,name', '5');\r\n\t *     dsObj.findByField('id,name', 'Jack');\r\n\t *     dsObj.findByField(['id', 'name'], '7');\r\n\t *     dsObj.findByField('name', 'Tom', {matchType: 'first'}); // return true\r\n\t *   \r\n\t * @param {String | String[]} fieldNameOrFieldArray Field name, field name array or fields separated with ','.\r\n\t * @param {Object} findingValue Finding value.\r\n\t * @param {Object} options Finding options.\r\n\t * @param {Integer} options.startRecno (optional) Start position to find value, default is 0.\r\n\t * @param {Boolean} options.findingByText (optional) Identify whether finding data with field text, default is finding with field value\r\n\t * @param {String} options.matchType (optional) The optional value: 'first' - match first, 'last' - match last, 'any' - match any, otherwise - match whole value.\r\n\t * @param {String} options.extraFilter (optional) The extra filter when finding.\r\n\t * \r\n\t * @return {Boolean} \r\n\t */\r\n\tfindByField: function (fieldNameOrFieldArray, findingValue, options) {\r\n\t\tjslet.Checker.test('findByField#fieldNameOrFieldArray', fieldNameOrFieldArray).required();\r\n\t\tvar Z = this;\r\n\t\tZ.confirm();\r\n\t\tvar EQUAL = 1;\r\n\t\tfunction matchValue(matchType, value, findingValue) {\r\n\t\t\tif(jslet.compareValue(value, findingValue) === 0) {\r\n\t\t\t\treturn EQUAL;\r\n\t\t\t}\r\n\t\t\tif(matchType == 'first') {\r\n\t\t\t\treturn jslet.like(value, findingValue + '%');\r\n\t\t\t}\r\n\t\t\tif(matchType == 'any') {\r\n\t\t\t\treturn jslet.like(value, '%' + findingValue + '%');\r\n\t\t\t}\r\n\t\t\tif(matchType == 'last') {\r\n\t\t\t\treturn jslet.like(value, '%' + findingValue);\r\n\t\t\t}\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tvar startRecno = 0,\r\n\t\t\tfindingByText = false,\r\n\t\t\tmatchType = null,\r\n\t\t\textraFilter = null,\r\n\t\t\textraFilterEval = null;\r\n\t\t\t\r\n\t\tif(options) {\r\n\t\t\tstartRecno = options.startRecno || 0;\r\n\t\t\tfindingByText = options.findingByText || false;\r\n\t\t\tmatchType = options.matchType || null;\r\n\t\t\textraFilter = options.extraFilter || null;\r\n\t\t\tif(extraFilter) {\r\n\t\t\t\textraFilterEval = new jslet.data.Expression(Z, extraFilter);\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar records = Z._ignoreFilter? Z.records(): Z.filteredRecords();\r\n\t\tif(!records || records.length === 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tvar fields = fieldNameOrFieldArray;\r\n\t\tif(jslet.isString(fieldNameOrFieldArray)) {\r\n\t\t\tfields = fieldNameOrFieldArray.split(',');\r\n\t\t}\r\n\t\tvar byTextArray = [], i,\r\n\t\t\tfldCnt = fields.length,\r\n\t\t\tfldName, fldObj;\r\n\t\tfor(i = 0; i < fldCnt; i++) {\r\n\t\t\tfldName = fields[i];\r\n\t\t\tfldObj = Z.getField(fldName);\r\n\t\t\tif(!fldObj) {\r\n\t\t\t\tthrow new Error(jslet.formatMessage(jsletlocale.Dataset.fieldNotFound, [fldName]));\r\n\t\t\t}\r\n\t\t\tvar byText = true;\r\n\t\t\tif(fldObj.getType() === 'N' && !fldObj.lookup()) {\r\n\t\t\t\tbyText = false;\r\n\t\t\t}\r\n\t\t\tbyTextArray[i] = byText;\r\n\t\t}\r\n\t\tvar start = !Z._ignoreFilter && startRecno? startRecno: 0;\r\n\t\tvar dataRec, foundRecno = -1, value, len, result = false, found = false;\r\n\t\tfor(i = start, len = records.length; i < len; i++) {\r\n\t\t\tdataRec = records[i];\r\n\t\t\tif(extraFilterEval && !extraFilterEval.eval(dataRec)) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tfor(var j = 0; j < fldCnt; j++) {\r\n\t\t\t\tfldName = fields[j];\r\n\t\t\t\tif(findingByText && byTextArray[j]) {\r\n\t\t\t\t\tvalue = Z.getFieldTextByRecord(dataRec, fldName);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvalue = Z.getFieldValueByRecord(dataRec, fldName);\r\n\t\t\t\t}\r\n\t\t\t\tfound = matchValue(matchType, value, findingValue);\r\n\t\t\t\tif (found) {\r\n\t\t\t\t\tfoundRecno = i;\r\n\t\t\t\t\tif(Z._ignoreFilter) { // Only used in value converting, so does not need to move cursor.\r\n\t\t\t\t\t\tZ._ignoreFilterRecno = i;\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresult = {};\r\n\t\t\t\t\tresult.field = fldName;\r\n\t\t\t\t\tresult.isEqual = (found === EQUAL);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(foundRecno >= 0) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (foundRecno >= 0) {// can fire scroll event\r\n\t\t\tZ._gotoRecno(foundRecno);\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\r\n\t/**\r\n\t * Find record with key value.\r\n\t * <br />Key value is field value of key field, and key field is defined by property {@link jslet.data.Dataset#keyField}.\r\n\t * \r\n\t * @param {Object} keyValue Key value.\r\n\t * \r\n\t * @return {Boolean}\r\n\t */\r\n\tfindByKey: function (keyValue) {\r\n\t\tvar keyField = this.keyField();\r\n\t\tif (!keyField) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn this.findByField(keyField, keyValue);\r\n\t},\r\n\r\n\t/**\r\n\t * Find record and return the specified field value.\r\n\t * \r\n\t *     @example\r\n\t *     dsObj.lookup('department', 23, 'address'); // find department which id is 23, if found, return its address.\r\n\t * \r\n\t * @param {String} fldName Field name.\r\n\t * @param {Object} findingValue Finding field value.\r\n\t * @param {String} returnFieldName Return value field name.\r\n\t * \r\n\t * @return {Object} Field value.\r\n\t */\r\n\tlookup: function (fldName, findingValue, returnFieldName) {\r\n\t\tjslet.Checker.test('lookup#fldName', fldName).required().isString();\r\n\t\tjslet.Checker.test('lookup#returnFieldName', returnFieldName).required().isString();\r\n\t\t\r\n\t\tif(fldName == returnFieldName) {\r\n\t\t\treturn findingValue;\r\n\t\t}\r\n\t\tif (this.findByField(fldName, findingValue)) {\r\n\t\t\treturn this.getFieldValue(returnFieldName);\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Find record with key value and return the specified field value.\r\n\t * <br />Key value is field value of key field, and key field is defined by property {@link jslet.data.Dataset#keyField}.\r\n\t * \r\n\t *     @example\r\n\t *     dsObj.lookupByKey(23, 'address'); // find department which id is 23, if found, return its address.\r\n\t * \r\n\t * @param {Object} keyValue Key value\r\n\t * @param {String} returnFieldName Return value field name.\r\n\t * \r\n\t * @return {Object} Field value.\r\n\t */\r\n\tlookupByKey: function(keyValue, returnFldName) {\r\n\t\tif (this.findByKey(keyValue)) {\r\n\t\t\treturn this.getFieldValue(returnFldName);\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t * Check whether the field value of 'fldName' is the parent value or one of the children of 'parentValue'.\r\n\t * \r\n\t * @param {String} fldname Field name which is checking, this field must connect a 'tree-style' dataset.\r\n\t * @param {Object} parentValue The value which to be checked.\r\n\t * @param {Boolean} onlyDirectChildren True - only the direct children to be used to check, false - otherwise.\r\n\t * \r\n\t * @return {Boolean} True - the field value of current record is one of the children of the 'parentValue', false -otherwise.\r\n\t */\r\n\tinChildrenAndSelf: function(fldName, parentValue, onlyDirectChildren) {\r\n\t\tjslet.Checker.test('inchildren#fldName', fldName).required().isString();\r\n\t\tjslet.Checker.test('inchildren#parentValue', parentValue).required();\r\n\t\tvar fldValue = this.getFieldValue(fldName);\r\n\t\tif(jslet.compareValue(fldValue, parentValue) === 0) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn this.inChildren(fldName, parentValue, onlyDirectChildren);\r\n\t},\r\n\t\r\n\t/**\r\n\t * Check whether the field value of 'fldName' is one of the children of 'parentValue' or not.\r\n\t * \r\n\t * @param {String} fldname Field name which is checking, this field must connect a 'tree-style' dataset;\r\n\t * @param {Object} parentValue The value which is used to check;\r\n\t * @param {Boolean} onlyDirectChildren True - only the direct children to be used to check, false - otherwise.\r\n\t * \r\n\t * @return {Boolean} True - the field value of current record is one of the children of the 'parentValue', false -otherwise.\r\n\t */\r\n\tinChildren: function(fldName, parentValue, onlyDirectChildren) {\r\n\t\tjslet.Checker.test('inchildren#fldName', fldName).required().isString();\r\n\t\tjslet.Checker.test('inchildren#parentValue', parentValue).required();\r\n\t\tvar Z = this,\r\n\t\t\tfldObj = Z.getField(fldName);\r\n\t\tif(!fldObj) {\r\n\t\t\tthrow new Error(jslet.formatMessage(jsletlocale.Dataset.fieldNotFound, [fldName]));\r\n\t\t}\r\n\t\tvar lookup = fldObj.lookup();\r\n\t\tif(!lookup) {\r\n\t\t\tthrow new Error(jslet.formatMessage(jsletlocale.Dataset.lookupFieldExpected, [fldName]));\r\n\t\t}\r\n\t\tvar lkds = lookup.dataset();\r\n\t\tjslet.Checker.test('inchildren#lookupDataset', lkds).required();\r\n\t\tjslet.Checker.test('inchildren#lookupDataset.parentField', lkds.parentField()).required();\r\n\t\tif(!lkds.findByKey(parentValue)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tvar fldValue = Z.getFieldValue(fldName);\r\n\t\tvar found = false;\r\n\t\tlkds.iterateChildren(function(isDirectChild) {\r\n\t\t\tvar breakIterator = false;\r\n\t\t\tif(!onlyDirectChildren || (onlyDirectChildren && isDirectChild)) {\r\n\t\t\t\tif(jslet.compareValue(lkds.keyValue(), fldValue) === 0) {\r\n\t\t\t\t\tbreakIterator = true;\r\n\t\t\t\t\tfound = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn breakIterator;\r\n\t\t});\r\n\t\treturn found;\r\n\t},\r\n\r\n\t/**\r\n\t * Copy dataset's data. Example:\r\n\t * \r\n\t *     @example\r\n\t *     dsObj.copyDataset(true); //return filtered records\r\n\t *     dsObj.copyDataset(); //return all records\r\n\t * \r\n\t * @param {Boolean} baseOnCurrentFilter If true, copy data base on the dataset's filter.\r\n\t * \r\n\t * @return {Object[]} Array of records. \r\n\t */\r\n\tcopyDataset: function (underCurrentFilter) {\r\n\t\tvar Z = this;\r\n\t\tif (Z.recordCount() === 0) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar result = [];\r\n\r\n\t\tif ((!underCurrentFilter || !Z._filtered)) {\r\n\t\t\treturn Z.records().slice(0);\r\n\t\t}\r\n\r\n\t\tvar foundRecno = -1, \r\n\t\t\toldRecno = Z._recno, \r\n\t\t\toldFiltered = Z._filtered;\r\n\t\tif (!underCurrentFilter) {\r\n\t\t\tZ._filtered = false;\r\n\t\t}\r\n\r\n\t\tZ._silence++;\r\n\t\ttry {\r\n\t\t\tZ.first();\r\n\t\t\twhile (!Z.isEof()) {\r\n\t\t\t\tresult.push(Z.getRecord());\r\n\t\t\t\tZ.next();\r\n\t\t\t}\r\n\t\t} finally {\r\n\t\t\tZ._silence--;\r\n\t\t\tZ._recno = oldRecno;\r\n\t\t\tif (!underCurrentFilter) {\r\n\t\t\t\tZ._filtered = oldFiltered;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get 'key' field name. Example:\r\n\t * \r\n\t *     @example\r\n\t *     dsObj.keyField('deptId'); //Set property, return this.\r\n\t *     var propValue = dsObj.keyField(); //Get property value.\r\n\t * \r\n\t * @param {String | undefined} keyFldName Key field name.\r\n\t * @return {this | String}\r\n\t */\r\n\tkeyField: function (keyFldName) {\r\n\t\tif (keyFldName === undefined) {\r\n\t\t\treturn this._keyField;\r\n\t\t}\r\n\t\tjslet.Checker.test('Dataset.keyField', keyFldName).isString();\r\n\t\tthis._keyField = keyFldName? jslet.trim(keyFldName): null;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get 'code' field name. Example:\r\n\t * \r\n\t *     @example\r\n\t *     dsObj.codeField('deptCode'); //Set property, return this.\r\n\t *     var propValue = dsObj.codeField(); //Get property value.\r\n\t * \r\n\t * @param {String | undefined} codeFldName Code field name.\r\n\t * @return {this | String}\r\n\t */\r\n\tcodeField: function (codeFldName) {\r\n\t\tif (codeFldName === undefined) {\r\n\t\t\treturn this._codeField || this.keyField();\r\n\t\t}\r\n\t\t\r\n\t\tjslet.Checker.test('Dataset.codeField', codeFldName).isString();\r\n\t\tthis._codeField = codeFldName? jslet.trim(codeFldName): null;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get 'name' field name. Example:\r\n\t * \r\n\t *     @example\r\n\t *     dsObj.nameField('deptName'); //Set property, return this.\r\n\t *     var propValue = dsObj.nameField(); //Get property value.\r\n\t * \r\n\t * @param {String | undefined} nameFldName 'Name' field name.\r\n\t * @return {this | String}\r\n\t */\r\n\tnameField: function (nameFldName) {\r\n\t\tif (nameFldName === undefined) {\r\n\t\t\treturn this._nameField || this.codeField();\r\n\t\t}\r\n\t\t\r\n\t\tjslet.Checker.test('Dataset.nameField', nameFldName).isString();\r\n\t\tthis._nameField = nameFldName? jslet.trim(nameFldName): null;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get 'parent' field name, this perperty is only used for hierarchy(tree-style) dataset. Example:\r\n\t * \r\n\t *     @example\r\n\t *     dsObj.parentField('deptName'); //Set property, return this.\r\n\t *     var propValue = dsObj.parentField(); //Get property value.\r\n\t * \r\n\t * @param {String | undefined} parentFldName Parent field name.\r\n\t * @return {this | String}\r\n\t */\r\n\tparentField: function (parentFldName) {\r\n\t\tif (parentFldName === undefined) {\r\n\t\t\treturn this._parentField;\r\n\t\t}\r\n\t\t\r\n\t\tjslet.Checker.test('Dataset.parentField', parentFldName).isString();\r\n\t\tthis._parentField = parentFldName? jslet.trim(parentFldName): null;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get level order field name, this perperty is only used for hierarchy(tree-style) dataset. Example:\r\n\t * \r\n\t *     @example\r\n\t *     dsObj.levelOrderField('levelOrder'); //Set property, return this.\r\n\t *     var propValue = dsObj.levelOrderField(); //Get property value.\r\n\t * \r\n\t * @param {String | undefined} fldName Level order field name.\r\n\t * @return {this | String}\r\n\t */\r\n\tlevelOrderField: function(fldName) {\r\n\t\tif (fldName === undefined) {\r\n\t\t\treturn this._levelOrderField;\r\n\t\t}\r\n\t\t\r\n\t\tjslet.Checker.test('Dataset.levelOrderField', fldName).isString();\r\n\t\tthis._levelOrderField = fldName? jslet.trim(fldName): null;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get 'select' field name. \"Select field\" is a field to store the selected state of a record. Example:\r\n\t * \r\n\t *     @example\r\n\t *     dsObj.selectField('levelOrder'); //Set property, return this.\r\n\t *     var propValue = dsObj.selectField(); //Get property value.\r\n\t * \r\n\t * @param {String} selectFldName - Select field name.\r\n\t * @return {this | String}\r\n\t */\r\n\tselectField: function (selectFldName) {\r\n\t\tif (selectFldName === undefined) {\r\n\t\t\treturn this._selectField ;\r\n\t\t}\r\n\t\t\r\n\t\tjslet.Checker.test('Dataset.selectField', selectFldName).isString();\r\n\t\tthis._selectField = selectFldName? jslet.trim(selectFldName): null;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get 'status' field name. \"Status field\" is a field to store the status of a record.\r\n\t * It's usually used for disabled or enabled of a record. Example:\r\n\t * \r\n\t *     @example\r\n\t *     dsObj.statusField('levelOrder'); //Set property, return this.\r\n\t *     var propValue = dsObj.statusField(); //Get property value.\r\n\t * \r\n\t * @param {String} statusFldName Status field name.\r\n\t * @return {this | String}\r\n\t */\r\n\tstatusField: function (statusFldName) {\r\n\t\tif (statusFldName === undefined) {\r\n\t\t\treturn this._statusField;\r\n\t\t}\r\n\t\t\r\n\t\tjslet.Checker.test('Dataset.statusField', statusFldName).isString();\r\n\t\tthis._statusField = statusFldName? jslet.trim(statusFldName): null;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get context rules.\r\n\t * \r\n\t * @param {jslet.data.ContextRule[] | undefined} contextRule Context rule.\r\n\t * @return {this | jslet.data.ContextRule[]}\r\n\t */\r\n\tcontextRules: function (rules) {\r\n\t\tvar Z = this;\r\n\t\tif (rules === undefined) {\r\n\t\t\treturn Z._contextRules;\r\n\t\t}\r\n\t\tif(jslet.isString(rules)) {\r\n\t\t\trules = rules? jslet.JSON.parse(rules): null;\r\n\t\t}\r\n\t\tjslet.Checker.test('Dataset.contextRules', rules).isArray();\r\n\t\tif(!rules || rules.length === 0) {\r\n\t\t\tZ._contextRules = null;\r\n\t\t\tZ._contextRuleEngine = null;\r\n\t\t} else {\r\n\t\t\tvar ruleObj;\r\n\t\t\tfor(var i = 0, len = rules.length; i < len; i++) {\r\n\t\t\t\truleObj = rules[i];\r\n\t\t\t\tif(!ruleObj.className || \r\n\t\t\t\t\t\truleObj.className != jslet.data.ContextRule.className) {\r\n\t\t\t\t\t\r\n\t\t\t\t\trules[i] = new jslet.data.ContextRule(ruleObj);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tZ._contextRules = rules;\r\n\t\t\tZ._contextRuleEngine = new jslet.data.ContextRuleEngine(Z);\r\n\t\t\tZ._contextRuleEngine.compile();\r\n\t\t\tZ.enableContextRule();\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Disable context rule.\r\n\t * \r\n\t * @return {this}\r\n\t */\r\n\tdisableContextRule: function () {\r\n\t\tthis._contextRuleEnabled = false;\r\n//\t\tthis.restoreContextRule();\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Enable context rule, any context rule will be calculated.\r\n\t * \r\n\t * @return {this}\r\n\t */\r\n\tenableContextRule: function () {\r\n\t\tthis._contextRuleEnabled = true;\r\n\t\tthis.calcContextRule();\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Check whether context rule is enabled or not.\r\n\t * \r\n\t * @return {Boolean}\r\n\t */\r\n\tisContextRuleEnabled: function () {\r\n\t\treturn this._contextRuleEnabled;\r\n\t},\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tcalcContextRule: function (changedField) {\r\n\t\tvar Z = this;\r\n\t\tif(!Z._contextRuleEnabled || Z.recordCount() === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tif(Z._contextRuleEngine) {\r\n\t\t\tZ._inContextRule = true;\r\n\t\t\ttry {\r\n\t\t\t\tZ._contextRuleEngine.evalRule(changedField);\r\n\t\t\t} finally {\r\n\t\t\t\tZ._inContextRule = false;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t_refreshProxyField: function(dataRecord, isSilence) {\r\n\t\tvar Z = this;\r\n\t\tif(!Z._proxyFields || Z.recordCount() === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(!dataRecord) {\r\n\t\t\tdataRecord = Z.getRecord();\r\n\t\t}\r\n\r\n\t\tvar fldObj;\r\n\t\tfor(var i = 0, len = Z._proxyFields.length; i < len; i++) {\r\n\t\t\tfldObj = Z._proxyFields[i];\r\n\t\t\tfldObj.changeProxyFieldName(dataRecord, isSilence);\r\n\t\t}\r\n\t},\r\n\t\r\n\r\n\t/**\r\n\t * Check current record whether it's selectable.\r\n\t * \r\n\t * @return {Boolean}\r\n\t */\r\n\tcheckSelectable: function (recno) {\r\n\t\tif(this.recordCount() === 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif(this._onCheckSelectable) {\r\n\t\t\tvar eventFunc = jslet.getFunction(this._onCheckSelectable);\r\n\t\t\tif(eventFunc) {\r\n\t\t\t\treturn eventFunc.call(this, recno);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get selected state of current record. Example:\r\n\t * \r\n\t *     @example\r\n\t *     dsObj.selected(true); //Set property, return this.\r\n\t *     var propValue = dsObj.selected(); //Get property value.\r\n\t * \r\n\t * @param {Boolean | undefined} selected.\r\n\t * \r\n\t * @return {this | Boolean}\r\n\t */\r\n\tselected: function (selected) {\r\n\t\tvar Z = this;\r\n\t\tvar selFld = Z._selectField || jslet.global.selectStateField,\r\n\t\t\trec = Z.getRecord();\r\n\t\t\r\n\t\tif(selected === undefined) {\r\n\t\t\treturn rec && rec[selFld];\r\n\t\t}\r\n\t\t\r\n\t\tif(rec) {\r\n\t\t\tif(Z.checkSelectable()) {\r\n\t\t\t\tZ._aborted = false;\r\n\t\t\t\ttry {\r\n\t\t\t\t\tZ._fireDatasetEvent(jslet.data.DatasetEvent.BEFORESELECT);\r\n\t\t\t\t\tif (Z._aborted) {\r\n\t\t\t\t\t\treturn Z;\r\n\t\t\t\t\t}\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tZ._aborted = false;\r\n\t\t\t\t}\r\n\t\t\t\trec[selFld] = selected;\r\n\t\t\t\tZ._fireDatasetEvent(jslet.data.DatasetEvent.AFTERSELECT);\r\n\t\t\t\tif(this._contextRuleEngine) {\r\n\t\t\t\t\tthis._contextRuleEngine.evalRule();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn Z;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Get selected state of specified record. Example:\r\n\t * \r\n\t *     @example\r\n\t *     dsObj.selected(true);\r\n\t *     dsObj.selectedByRecno(); //return true\r\n\t * \r\n\t * @param {Integer} recno (optional) Record number, if recno is not applied, return current record selected state.\r\n\t * \r\n\t * @return {this | Boolean}\r\n\t */\r\n\tselectedByRecno: function(recno) {\r\n\t\tvar Z = this,\r\n\t\t\tselFld = Z._selectField || jslet.global.selectStateField,\r\n\t\t\trec = Z.getRecord(recno);\r\n\t\t\r\n\t\treturn rec && rec[selFld];\r\n\t},\r\n\t\r\n\t/**\r\n\t * Select / unselect all records.\r\n\t * \r\n\t * @param {Boolean} selected True - select records, false otherwise.\r\n\t * @param {Function} onSelectAll Select event handler.\r\n\t * @param {jslet.data.Dataset} onSelectAll.dataset Current dataset.\r\n\t * @param {Boolean} onSelectAll.selected True - select records, false otherwise.\r\n\t * @param {Boolean} onSelectAll.return True - allow user to select, false - otherwise.\r\n\t * @param {Boolean} noRefresh True - refresh controls, false - otherwise.\r\n\t * \r\n\t * @return {this}\r\n\t */\r\n\tselectAll: function (selected, onSelectAll, noRefresh) {\r\n\t\tvar Z = this;\r\n\t\tif (Z.recordCount() === 0) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tZ._fireDatasetEvent(jslet.data.DatasetEvent.BEFORESELECTALL);\r\n\t\t\tif (Z._aborted) {\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t} finally {\r\n\t\t\tZ._aborted = false;\r\n\t\t}\r\n\r\n\t\tjslet.Checker.test('Dataset.selectAll#onSelectAll', onSelectAll).isFunction();\r\n\t\tvar oldRecno = Z.recno();\r\n\t\ttry {\r\n\t\t\tfor (var i = 0, cnt = Z.recordCount(); i < cnt; i++) {\r\n\t\t\t\tZ.recnoSilence(i);\r\n\r\n\t\t\t\tZ.selected(selected);\r\n\t\t\t}\r\n\t\t} finally {\r\n\t\t\tZ.recnoSilence(oldRecno);\r\n\t\t}\r\n\t\tif (onSelectAll) {\r\n\t\t\tonSelectAll(this, selected);\r\n\t\t}\r\n\t\tZ._fireDatasetEvent(jslet.data.DatasetEvent.AFTERSELECTALL);\r\n\t\tif (!noRefresh) {\r\n\t\t\tvar evt = jslet.data.RefreshEvent.selectAllEvent(selected);\r\n\t\t\tZ.refreshControl(evt);\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Select/unselect record by key value.\r\n\t * \r\n\t * @param {Boolean} selected True - select records, false otherwise.\r\n\t * @param {Object} keyValue Key value.\r\n\t * @param {Boolean} noRefresh True - refresh controls, false - otherwise.\r\n\t * \r\n\t * @return {this}\r\n\t */\r\n\tselectByKeyValue: function (selected, keyValue, noRefresh) {\r\n\t\tvar Z = this,\r\n\t\t\toldRecno = Z.recno(),\r\n\t\t\tcnt = Z.recordCount(),\r\n\t\t\tv, changedRecNum = [];\r\n\t\ttry {\r\n\t\t\tfor (var i = 0; i < cnt; i++) {\r\n\t\t\t\tZ.recnoSilence(i);\r\n\t\t\t\tv = Z.getFieldValue(Z._keyField);\r\n\t\t\t\tif (v == keyValue) {\r\n\t\t\t\t\tZ.selected(selected);\r\n\t\t\t\t\tchangedRecNum.push(i);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} //end for\r\n\t\t} finally {\r\n\t\t\tZ.recnoSilence(oldRecno);\r\n\t\t}\r\n\t\tif (!noRefresh) {\r\n\t\t\tvar evt = jslet.data.RefreshEvent.selectRecordEvent(changedRecNum, selected);\r\n\t\t\tZ.refreshControl(evt);\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Select current record or not.\r\n\t * If 'selectBy' is not empty, select all records which value of 'selectBy' field is same as the current record. Example:\r\n\t * \r\n\t *     @example\r\n\t *     dsEmployee.select(true); //select current record\r\n\t *     dsEmployee.select(true, 'gender'); //if the 'gender' of current value is female, all female employees will be selected.  \r\n\t * \r\n\t * @param {Boolean} selected True - select records, false - unselect records.\r\n\t * @param {String} selectBy Field names, multiple fields separated with ','.\r\n\t * \r\n\t * @return {this}\r\n\t */\r\n\tselect: function (selected, selectBy) {\r\n\t\tvar Z = this;\r\n\t\tif (Z.recordCount() === 0) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tvar changedRecNum = [];\r\n\t\tif (!selectBy) {\r\n\t\t\tZ.selected(selected);\r\n\t\t\tchangedRecNum.push(Z.recno());\r\n\t\t} else {\r\n\t\t\tvar arrFlds = selectBy.split(','), \r\n\t\t\t\tarrValues = [], i, \r\n\t\t\t\tfldCnt = arrFlds.length;\r\n\t\t\tfor (i = 0; i < fldCnt; i++) {\r\n\t\t\t\tarrValues[i] = Z.getFieldValue(arrFlds[i]);\r\n\t\t\t}\r\n\t\t\tvar v, preRecno = Z.recno(), flag;\r\n\t\t\ttry {\r\n\t\t\t\tfor (var k = 0, recCnt = Z.recordCount(); k < recCnt; k++) {\r\n\t\t\t\t\tZ.recnoSilence(k);\r\n\t\t\t\t\tflag = 1;\r\n\t\t\t\t\tfor (i = 0; i < fldCnt; i++) {\r\n\t\t\t\t\t\tv = Z.getFieldValue(arrFlds[i]);\r\n\t\t\t\t\t\tif (v != arrValues[i]) {\r\n\t\t\t\t\t\t\tflag = 0;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (flag) {\r\n\t\t\t\t\t\tZ.selected(selected);\r\n\t\t\t\t\t\tchangedRecNum.push(Z.recno());\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} finally {\r\n\t\t\t\tZ.recnoSilence(preRecno);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar evt = jslet.data.RefreshEvent.selectRecordEvent(changedRecNum, selected);\r\n\t\tZ.refreshControl(evt);\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get data provider.\r\n\t * \r\n\t * @param {jslet.data.DataProvider | undefined} provider Data provider\r\n\t * @return {this | jslet.data.DataProvider}\r\n\t */\r\n\tdataProvider: function (provider) {\r\n\t\tif (provider === undefined) {\r\n\t\t\treturn this._dataProvider;\r\n\t\t}\r\n\t\tthis._dataProvider = provider;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t_checkDataProvider: function () {\r\n\t\tif (!this._dataProvider) {\r\n\t\t\tthrow new Error('DataProvider required, use: yourDataset.dataProvider(yourDataProvider);');\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Get all selected records\r\n\t * \r\n\t * @return {Object[]} Array of records\r\n\t */\r\n\tselectedRecords: function () {\r\n\t\tvar Z = this;\r\n\t\tif (!Z.hasRecord()) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tvar preRecno = Z.recno(), result = [];\r\n\t\ttry {\r\n\t\t\tfor (var k = 0, recCnt = Z.recordCount(); k < recCnt; k++) {\r\n\t\t\t\tZ.recnoSilence(k);\r\n\t\t\t\tif(Z.selected()) {\r\n\t\t\t\t\tresult.push(Z.getRecord());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} finally {\r\n\t\t\tZ.recnoSilence(preRecno);\r\n\t\t}\r\n\t\t\r\n\t\treturn result;\r\n\t},\r\n\r\n\thasSelectedRecords: function() {\r\n\t\tvar Z = this, found = false;\r\n\t\tZ.iterate(function() {\r\n\t\t\tif(this.selected()) {\r\n\t\t\t\tfound = true;\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn found;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Get all key values of selected records.\r\n\t * \r\n\t * @return {Object[]} Array of selected record key values\r\n\t */\r\n\tselectedKeyValues: function () {\r\n\t\tvar oldRecno = this.recno(), result = [];\r\n\t\ttry {\r\n\t\t\tfor (var i = 0, cnt = this.recordCount(); i < cnt; i++) {\r\n\t\t\t\tthis.recnoSilence(i);\r\n\t\t\t\tvar state = this.selected();\r\n\t\t\t\tif (state && state !== 2) { // 2: partial select\r\n\t\t\t\t\tresult.push(this.getFieldValue(this._keyField));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} finally {\r\n\t\t\tthis.recnoSilence(oldRecno);\r\n\t\t}\r\n\t\tif (result.length > 0) {\r\n\t\t\treturn result;\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Set or get query url. Example:\r\n\t * \r\n\t *     @example\r\n\t *     dsObj.queryUrl('/test/query.do'); //Set property, return this.\r\n\t *     var propValue = dsObj.queryUrl(); //Get property value.\r\n\t * \r\n\t * @param {String | undefined} queryUrl Query url.\r\n\t * \r\n\t * @return {this | String}\r\n\t */\r\n\tqueryUrl: function(url) {\r\n\t\tif(url === undefined) {\r\n\t\t\treturn this._queryUrl;\r\n\t\t}\r\n\t\tjslet.Checker.test('Dataset.queryUrl', url).isString();\r\n\t\tthis._queryUrl = url? jslet.trim(url): null;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Query data from server. Example:\r\n\t * \r\n\t *     @example\r\n\t *     dsEmployee.queryUrl('../getemployee.do');\r\n\t *     var criteria = {name:'Bob', age:25};\r\n\t *     dsEmployee.query(condition).done(function() {\r\n\t *     \t console.log('done');\r\n\t *     });\r\n\t * \r\n\t * @param {Object | jslet.data.Dataset} criteria Condition should be a plan object or a dataset which stores query criteria.\r\n\t * \r\n\t * @return {Object} jQuery promise.\r\n\t */\r\n\tquery: function (criteria) {\r\n\t\tif(criteria && criteria instanceof jslet.data.Dataset) {\r\n\t\t\tvar criteriaDataset = criteria;\r\n\t\t\tcriteriaDataset.confirm();\r\n\t\t\tif(criteriaDataset.checkAndShowError()) {\r\n\t\t\t\treturn new jslet.EmptyPromise('fail');\r\n\t\t\t}\r\n\t\t\tcriteria = criteriaDataset.getRecord();\r\n\t\t}\r\n\t\tthis._queryCriteria = criteria;\r\n\t\treturn this.requery();\r\n\t},\r\n\r\n\t_doQuerySuccess: function(result, dataset) {\r\n\t\tvar Z = dataset;\r\n\t\tif (!result) {\r\n\t\t\tZ.records([]);\r\n\t\t\tif(result && result.info) {\r\n\t\t\t\tjslet.showInfo(result.info);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(Z._onDataQuerying) {\r\n\t\t\tZ._onDataQuerying(result);\r\n\t\t}\r\n\t\tvar metas = result.meta;\r\n\t\tif(metas && metas.main) {\r\n\t\t\tZ._createDatasetByMeta(Z._name, metas.main);\r\n\t\t}\r\n\t\tvar mainData = result.main;\r\n\t\tif (mainData) {\r\n\t\t\tZ.records(mainData);\r\n\t\t}\r\n\t\tvar others = result.others;\r\n\t\tif(others) {\r\n\t\t\tvar dsName, dsObj;\r\n\t\t\tfor (dsName in others) {\r\n\t\t\t\tif(metas && metas[dsName]) {\r\n\t\t\t\t\tZ._createDatasetByMeta(Z._name, metas[dsName]);\r\n\t\t\t\t}\r\n\t\t\t\tdsObj = jslet.data.getDataset(dsName);\r\n\t\t\t\tif (dsObj) {\r\n\t\t\t\t\tdsObj.records(others[dsName]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.warn(dsName + ' is returned from server, but this datase does not exist!');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (result.pageNo) {\r\n\t\t\tZ._pageNo = result.pageNo;\r\n\t\t}\r\n\t\tif (result.pageCount) {\r\n\t\t\tZ._pageCount = result.pageCount;\r\n\t\t}\r\n\t\tif(Z._onDataQueried) {\r\n\t\t\tZ._onDataQueried.call(Z);\r\n\t\t}\r\n\r\n\t\tvar evt = jslet.data.RefreshEvent.changePageEvent();\r\n\t\tZ.refreshControl(evt);\r\n\t\tif(result && result.info) {\r\n\t\t\tjslet.showInfo(result.info);\r\n\t\t}\r\n\t},\r\n\t\r\n\t_createDatasetByMeta: function(dsName, dsMeta) {\r\n\t\tvar dsObj = jslet.data.getDataset(dsName);\r\n\t\tvar fields = dsMetaFields;\r\n\t\tif(!dsObj) {\r\n\t\t\tdsObj = new jslet.data.Dataset({name: dsName, fields: fields});\r\n\t\t} else {\r\n\t\t\tdsObj.clearFields();\r\n\t\t\tvar fldCfg;\r\n\t\t\tfor(var i = 0, len = fields.length; i < len; i++) {\r\n\t\t\t\tfldCfg = fields[i];\r\n\t\t\t\tdsObj.createField(fldCfg);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\t_doApplyError: function(result, dataset) {\r\n\t\tvar Z = dataset,\r\n\t\t\terrCode = result.errorCode,\r\n\t\t\terrMsg = result.errorMessage;\r\n\t\tif(jslet.global.serverErrorHandler) {\r\n\t\t\tvar catched = jslet.global.serverErrorHandler(errCode, errMsg);\r\n\t\t\tif(catched) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\terrMsg = errMsg + \"[\" + errCode + \"]\";\r\n\t\tZ.errorMessage(errMsg);\r\n\t\tif(Z._autoShowError) {\r\n\t\t\tjslet.showError(errMsg);\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t * Send request to refresh with current condition.\r\n\t * \r\n\t * @return {Object} jQuery promise.\r\n\t */\r\n\trequery: function () {\r\n\t\tvar Z = this;\r\n\t\tZ._checkDataProvider();\r\n\r\n\t\tif(!this._queryUrl) {\r\n\t\t\t//QueryUrl required! Use: yourDataset.queryUrl(yourUrl)\r\n\t\t\tthrow new Error(jslet.formatMessage(jsletlocale.Dataset.queryUrlRequired, [Z.description()]));\r\n\t\t\t\r\n\t\t}\r\n\t\tif(Z._querying) { //Avoid duplicate submitting\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tZ._querying = true;\r\n\t\ttry {\r\n\t\t\tvar reqData = {};\r\n\t\t\tif(Z._pageNo > 0) {\r\n\t\t\t\treqData.pageNo = Z._pageNo;\r\n\t\t\t\treqData.pageSize = Z._pageSize;\r\n\t\t\t}\r\n\t\t\tvar criteria = Z._queryCriteria;\r\n\t\t\tif(criteria) {\r\n\t\t\t\tif(jslet.isArray(criteria)) {\r\n\t\t\t\t\treqData.criteria = criteria;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treqData.simpleCriteria = criteria;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treqData = jslet.data.record2Json(reqData);\r\n\t\t\tvar url = Z._queryUrl;\r\n\t\t\treturn Z._dataProvider.sendRequest(Z, url, reqData)\r\n\t\t\t.done(Z._doQuerySuccess)\r\n\t\t\t.fail(Z._doApplyError)\r\n\t\t\t.always(function(){Z._querying = false;});\r\n\t\t} catch(e) {\r\n\t\t\tZ._querying = false;\r\n\t\t}\r\n\t},\r\n\r\n\t_setChangedState: function(flag, chgRecs, pendingRecs) {\r\n\t\tif(!chgRecs || chgRecs.length === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar result = this._addRecordClassFlag(chgRecs, flag, this._recordClass || jslet.global.defaultRecordClass);\r\n\t\tfor(var i = 0, len = result.length; i < len; i++) {\r\n\t\t\tpendingRecs.push(result[i]);\r\n\t\t}\r\n\t},\r\n\r\n\t_addRecordClassFlag: function(records, changeFlag, recClazz) {\r\n\t\tvar fields = this.getFields(),\r\n\t\t\tfldObj, i, len, \r\n\t\t\tdetailRecordClass = null;\r\n\t\t\r\n\t\tfor(i = 0, len = fields.length; i < len; i++) {\r\n\t\t\tfldObj = fields[i];\r\n\t\t\tif(fldObj.getType() === jslet.data.DataType.DATASET) {\r\n\t\t\t\tif(!detailRecordClass) {\r\n\t\t\t\t\tdetailRecordClass = {};\r\n\t\t\t\t}\r\n\t\t\t\tdetailRecordClass[fldObj.name()] = fldObj.detailDataset().recordClass();\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar result = [], rec, pRec, dtlRecClazz, cnt;\r\n\t\tfor (i = 0, cnt = records.length; i < cnt; i++) {\r\n\t\t\trec = records[i];\r\n\t\t\tpRec = {};\r\n\t\t\trec[jslet.global.changeStateField] = changeFlag + i;\r\n\t\t\tvar fldValue;\r\n\t\t\tfor(var prop in rec) {\r\n\t\t\t\tfldValue = rec[prop];\r\n\t\t\t\tif(fldValue && detailRecordClass) {\r\n\t\t\t\t\tdtlRecClazz = detailRecordClass[prop];\r\n\t\t\t\t\tif(dtlRecClazz) {\r\n\t\t\t\t\t\tfldValue = this._addRecordClassFlag(fldValue, changeFlag, dtlRecClazz);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tpRec[prop] = fldValue;\r\n\t\t\t}\r\n\t\t\tresult.push(pRec);\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\t\r\n\t_doSaveSuccess: function(result, dataset) {\r\n\t\tvar Z = dataset,\r\n\t\t\tchangedRecs, \r\n\t\t\tneedCalc = false;\r\n\t\tif (!result || !result.main || result.main.length === 0) {\r\n\t\t\tchangedRecs = Z._pendingRecords;\r\n\t\t} else {\r\n\t\t\tchangedRecs = result.main;\r\n\t\t\tneedCalc = true;\r\n\t\t}\r\n\t\tZ._dataTransformer.refreshSubmittedData(changedRecs);\r\n\t\tif(needCalc) {\r\n\t\t\tZ._calcAggregatedValueDebounce.call(Z);\r\n\t\t}\r\n\t\tZ.selection.removeAll();\r\n\t\tif(Z._onDataSubmitted) {\r\n\t\t\tZ._onDataSubmitted.call(Z);\r\n\t\t}\r\n\t\t\r\n\t\tZ.refreshControl();\r\n\t\tZ.refreshLookupHostDataset();\r\n\t\tif(result && result.info) {\r\n\t\t\tjslet.showInfo(result.info);\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t * Set or get submit url. Example:\r\n\t * \r\n\t *     @example\r\n\t *     dsObj.submitUrl('/test/save.do'); //Set property, return this.\r\n\t *     var propValue = dsObj.submitUrl(); //Get property value.\r\n\t * \r\n\t * @param {String | undefined} submitUrl Submit url.\r\n\t * \r\n\t * @return {this | String}\r\n\t */\r\n\tsubmitUrl: function(url) {\r\n\t\tif(url === undefined) {\r\n\t\t\treturn this._submitUrl;\r\n\t\t}\r\n\r\n\t\tjslet.Checker.test('Dataset.submitUrl', url).isString();\r\n\t\tthis._submitUrl = url? jslet.trim(url): null;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Check whether dataset exists changed records.\r\n\t * \r\n\t * @return {Boolean}\r\n\t */\r\n\thasChangedData: function(noConfirm) {\r\n\t\tvar Z = this;\r\n\t\tif(!noConfirm) {\r\n\t\t\tZ.confirm();\r\n\t\t}\r\n\t\tvar records = Z.records(), record, recInfo;\r\n\t\tif(!records) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tfor(var i = 0, len = records.length; i < len; i++) {\r\n\t\t\trecord = records[i];\r\n\t\t\tif(Z.recordChanged(record)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\t\r\n\trecordChanged: function(record) {\r\n\t\tif(!record) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tvar recInfo = jslet.data.getRecInfo(record);\r\n\t\tif(recInfo && recInfo.status && recInfo.status !== jslet.data.DataSetStatus.BROWSE) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Submit changed data to server. \r\n\t * If server side save data successfully and return the changed data, Jslet can refresh the local data automatically.\r\n\t * \r\n\t * Cause key value is probably generated at server side(like sequence), we need an extra field which store an unique value to update the key value,\r\n\t * this extra field is named by global variable: jslet.global.changeStateField(default is'rs'), its value will start a letter 'i', 'u' or 'd', and follow a random number.\r\n\t * You don't care about it in client side, it is generated by Jslet automatically.\r\n\t * \r\n\t * At server side, you can use the leading letter to distinguish which action will be sent to DB('i' for insert, 'u' for update and 'd' for delete)\r\n\t * If the records need be changed in server(like sequence key or other calculated fields), you should return them back.Notice:\r\n\t * you need not to change this value of extra field: '_s_', just return it. Example:\r\n\t * \r\n\t *     @example\r\n\t *     dsObj.insertRecord();\r\n\t *     dsObj.setFieldValue('name','Bob');\r\n\t *     dsObj.setFieldValue('code','A01');\r\n\t *     dsObj.confirm();\r\n\t *     dsObj.submitUrl('../save.do');\r\n\t *     dsObj.submit().done(function() {\r\n\t *       console.log('done'); \r\n\t *     });\r\n\t * \r\n\t * @param {Object} extraData extraData to submit to server\r\n\t * @param {Object} options Options.\r\n\t * @param {jslet.data.RecordRange} options.range Record range, the default value is jslet.data.RecordRange.SELECTED\r\n\t * @param {String[]} options.includeFields Array of field names which need be submitted to server;\r\n\t * @param {String[]} options.excludeFields Array of field names which need not be submitted to server;\r\n\t * @param {jslet.data.RecordRange | Object} options.detailRange For detail dataset the default record range is jslet.data.RecordRange.ALL.<br />\r\n\t * \t\tif detailRange is a value of jslet.data.RecordRange, all detail dataset has the same record range. <br />\r\n\t *      if detailRange is a object value, the value pattern is: {detailDatasetName: jslet.data.RecordRange}\r\n\t * \r\n\t * @return {Object} jQuery promise.\r\n\t */\r\n\tsubmit: function(extraData, options) {\r\n\t\treturn this._innerSubmit(extraData, options);\r\n\t},\r\n\t\r\n\t/**\r\n\t * Submit deleted data to server. \r\n\t * \r\n\t * @param {Object} extraData extraData to submit to server\r\n\t * \r\n\t * @return {Object} jQuery promise.\r\n\t */\r\n\tsubmitDeleted: function(extraData) {\r\n\t\treturn this._innerSubmit(extraData, options, true);\t\t\r\n\t},\r\n\t\r\n\t_innerSubmit: function(extraData, options, onlyDeleted) {\r\n\t\tvar Z = this;\r\n\t\tvar range = options && options.range,\r\n\t\t\tincludeFields = options && options.includeFields,\r\n\t\t\texcludeFields = options && options.excludeFields;\r\n\t\tZ.confirm();\r\n\t\tif(Z.checkAndShowError(includeFields, excludeFields, range)) {\r\n\t\t\treturn new jslet.EmptyPromise('fail');\r\n\t\t}\r\n\t\tZ._checkDataProvider();\r\n\r\n\t\tif(!Z._submitUrl) {\r\n\t\t\t//Dataset\\'s submitUrl required! Use: yourDataset.submitUrl(yourUrl)\r\n\t\t\tthrow new Error(jslet.formatMessage(jsletlocale.Dataset.submitUrlRequired, [Z.description()]));\r\n\t\t}\r\n\t\t\r\n\t\tvar\tdetailRange = options && options.detailRange;\r\n\t\tvar changedRecs = Z._dataTransformer.getSubmittingChanged(range, detailRange);\r\n\t\tif(changedRecs && onlyDeleted) {\r\n\t\t\tfor(var i = changedRecs.length - 1; i >= 0; i--) {\r\n\t\t\t\tif('d' !== changedRecs[i].rs[0]) {\r\n\t\t\t\t\tchangedRecs.splice(i, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!changedRecs || changedRecs.length === 0) {\r\n\t\t\tjslet.showInfo(jsletlocale.Dataset.noDataSubmit);\r\n\t\t\treturn new jslet.EmptyPromise('fail');\r\n\t\t}\r\n\t\tif(Z._submitting) { //Avoid duplicate submitting\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tZ._submitting = true;\r\n\t\ttry {\r\n\t\t\tvar reqData = {},\r\n\t\t\t\tdsName = Z.name();\r\n\t\t\treqData.mainName = dsName;\r\n\t\t\treqData.main = changedRecs;\r\n\t\t\tvar dataMetas = {};\r\n\t\t\treqData.meta = dataMetas;\r\n\t\t\tZ._getSubmitMeta(Z, dataMetas, 'main');\r\n\t\t\t\r\n\t\t\tif(extraData) {\r\n\t\t\t\treqData.extraData = extraData;\r\n\t\t\t}\r\n\t\t\tZ._pendingRecords = changedRecs;\r\n\t\t\treqData = jslet.data.record2Json(reqData, Z._getExcludeFields(includeFields, excludeFields));\r\n\t\t\tvar url = Z._submitUrl;\r\n\t\t\treturn Z._dataProvider.sendRequest(Z, url, reqData)\r\n\t\t\t.done(Z._doSaveSuccess)\r\n\t\t\t.fail(Z._doApplyError)\r\n\t\t\t.always(function(){\r\n\t\t\t\tZ._submitting = false;\r\n\t\t\t\tZ._pendingRecords = null;\r\n\t\t\t});\r\n\t\t} catch(e) {\r\n\t\t\tconsole.error(e);\r\n\t\t\tZ._submitting = false;\r\n\t\t\tZ._pendingRecords = null;\r\n\t\t}\r\n\t},\r\n\t\r\n\t_getSubmitMeta: function(dsObj, dataMetas, dsName) {\r\n\t\tvar Z = this,\r\n\t\t\tfields = [], fldObj,\r\n\t\t\tdataMeta = {fields: fields},\r\n\t\t\tfldMeta, dataType,\r\n\t\t\tclazzName = Z.recordClass();\r\n\t\tif(clazzName) {\r\n\t\t\tdataMeta.recordClass = clazzName;\r\n\t\t}\r\n\t\tif(!dsName) {\r\n\t\t\tdsName = dsObj.name();\r\n\t\t}\r\n\t\tdataMetas[dsName] = dataMeta;\r\n\t\tvar fldList = dsObj._fields;\r\n\t\tfor(var i = 0, len = fldList.length; i < len; i++) {\r\n\t\t\tfldObj = fldList[i];\r\n\t\t\tdataType = fldObj.dataType();\r\n\t\t\tif(dataType === jslet.data.DataType.DATE) {\r\n\t\t\t\tfldMeta = {name: fldObj.name(), dataType: dataType};\r\n\t\t\t\tfields.push(fldMeta);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif(dataType === jslet.data.DataType.DATASET) {\r\n\t\t\t\tfldMeta = {name: fldObj.name(), dataType: dataType};\r\n\t\t\t\tvar dsDetail = fldObj.detailDataset();\r\n\t\t\t\tfldMeta.detailDataset = dsDetail.name();\r\n\t\t\t\tZ._getSubmitMeta(dsDetail, dataMeta);\r\n\t\t\t\tfields.push(fldMeta);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\t_doSubmitSelectedSuccess: function(result, dataset) {\r\n\t\tif(!result) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar mainData = result.main;\r\n\t\tif (!mainData || mainData.length === 0) {\r\n\t\t\tif(result.info) {\r\n\t\t\t\tjslet.showInfo(result.info);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar Z = dataset,\r\n\t\t\tdeleteOnSuccess = Z._deleteOnSuccess_,\r\n\t\t\tarrRecs = Z.selectedRecords() || [],\r\n\t\t\ti, k, rec,\r\n\t\t\trecords = Z.records();\r\n\t\tZ.selection.removeAll();\r\n\t\tif(deleteOnSuccess) {\r\n\t\t\tfor(i = arrRecs.length; i >= 0; i--) {\r\n\t\t\t\trec = arrRecs[i];\r\n\t\t\t\tk = records.indexOf(rec);\r\n\t\t\t\trecords.splice(k, 1);\r\n\t\t\t}\r\n\t\t\tZ._refreshInnerRecno();\r\n\t\t} else {\r\n\t\t\tvar newRec, oldRec, len;\r\n\t\t\tZ._dataTransformer.refreshSubmittedData(mainData);\r\n\t\t}\r\n\t\tZ._calcAggregatedValueDebounce.call(Z);\r\n\t\tif(Z._onDataSubmitted) {\r\n\t\t\tZ._onDataSubmitted.call(Z);\r\n\t\t}\r\n\t\tZ.refreshControl();\r\n\t\tZ.refreshLookupHostDataset();\r\n\t\tif(result && result.info) {\r\n\t\t\tjslet.showInfo(result.info);\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t * Send selected data to server whether or not the records have been changed. \r\n\t * Under some special scenarios, we need send user selected record to server to process. \r\n\t * Sever side need not send back the processed records. Example:\r\n\t * \r\n\t *     @example\r\n\t *     //Audit the selected records, if successful, delete the selected records.\r\n\t *     dsObj.selectAll(true);\r\n\t *     var options = {deleteOnSuccess: true};\r\n\t *     dsObj.submitSelected('../audit.do', null, options);\r\n\t *     \r\n\t *     //Submit all records\r\n\t *     options = {range: jslet.data.RecordRange.ALL};\r\n\t *     dsObj.submitSelected('../audit.do', null, options);\r\n\t *      \r\n\t *     //Submit the current record\r\n\t *     options = {range: jslet.data.RecordRange.CURRENT};\r\n\t *     dsObj.submitSelected('../audit.do', null, options);\r\n\t *      \r\n\t *     //Submit the current record width included fields\r\n\t *     options = {range: jslet.data.RecordRange.CURRENT,\r\n\t *     \t\t\t  includeFields: ['id', 'name']};\r\n\t *     dsObj.submitSelected('../audit.do', null, options);\r\n\t *      \r\n\t *     //Set all detail datasets' record range\r\n\t *     options = {detailRange: jslet.data.RecordRange.SELECTED};\r\n\t *     dsObj.submitSelected('../audit.do', null, options);\r\n\t *      \r\n\t *     //Set some detail datasets' record range\r\n\t *     //Assume the dataset has two detail dataset, named: 'dtlDsName1' and 'dtlDsName2'\r\n\t *     options = {detailRange: {dtlDsName1: jslet.data.RecordRange.SELECTED, dtlDsName2: jslet.data.RecordRange.ALL};\r\n\t *     dsObj.submitSelected('../audit.do', null, options);\r\n\t * \r\n\t * @param {String} url Submitting URL.\r\n\t * @param {Object} extraData extraData to submit to server\r\n\t * @param {Object} options Options.\r\n\t * @param {jslet.data.RecordRange} options.range Record range, the default value is jslet.data.RecordRange.SELECTED\r\n\t * @param {Boolean} options.deleteOnSuccess If processing successfully at server side, delete the selected record or not.\r\n\t * @param {Boolean} options.submitEmpty True - submit to server even user does not select records, false - (Default) stop submitting if not selecting any records.\r\n\t * @param {String[]} options.includeFields Array of field names which need be submitted to server;\r\n\t * @param {String[]} options.excludeFields Array of field names which need not be submitted to server;\r\n\t * @param {jslet.data.RecordRange | Object} options.detailRange For detail dataset the default record range is jslet.data.RecordRange.ALL.<br />\r\n\t * \t\tif detailRange is a value of jslet.data.RecordRange, all detail dataset has the same record range. <br />\r\n\t *      if detailRange is a object value, the value pattern is: {detailDatasetName: jslet.data.RecordRange}\r\n\t * \r\n\t */\r\n\tsubmitSelected: function (url, extraData, options) {\r\n\t\tvar Z = this;\r\n\t\tZ.confirm();\r\n\t\tvar range = options && options.range,\r\n\t\t\tincludeFields = options && options.includeFields,\r\n\t\t\texcludeFields = options && options.excludeFields,\r\n\t\t\tsubmitEmpty = options && options.submitEmpty;\r\n\t\tif(range === undefined) {\r\n\t\t\trange = jslet.data.RecordRange.SELECTED;\r\n\t\t}\r\n\t\tif(Z.checkAndShowError(includeFields, excludeFields, range)) {\r\n\t\t\treturn new jslet.EmptyPromise('fail');\r\n\t\t}\r\n\t\tZ._checkDataProvider();\r\n\t\tjslet.Checker.test('Dataset.submitSelected#url', url).required().isString();\r\n\t\tif(Z._submitting) { //Avoid duplicate submitting\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tZ._submitting = true;\r\n\t\tvar deleteOnSuccess = options && options.deleteOnSuccess? true: false,\r\n\t\t\tdetailRange = options && options.detailRange;\r\n\t\ttry {\r\n\t\t\tvar changedRecs = Z._dataTransformer.getSubmittingSelected(range, detailRange) || [];\r\n\t\t\tif (!submitEmpty && (!changedRecs || changedRecs.length === 0)) {\r\n\t\t\t\tjslet.showInfo(jsletlocale.Dataset.noDataSubmit);\r\n\t\t\t\treturn new jslet.EmptyPromise('fail');\r\n\t\t\t}\r\n\t\r\n\t\t\tZ._deleteOnSuccess_ = deleteOnSuccess;\r\n\t\t\t\r\n\t\t\tvar reqData = {},\r\n\t\t\t\tdsName = Z.name();\r\n\t\t\treqData.mainName = dsName;\r\n\t\t\treqData.main = changedRecs;\r\n\t\t\tvar dataMetas = {};\r\n\t\t\treqData.meta = dataMetas;\r\n\t\t\tZ._getSubmitMeta(Z, dataMetas, 'main');\r\n\t\t\t\r\n\t\t\tif(extraData) {\r\n\t\t\t\treqData.extraData = extraData;\r\n\t\t\t}\r\n\t\t\treqData = jslet.data.record2Json(reqData, Z._getExcludeFields(includeFields, excludeFields));\r\n\t\t\tconsole.log(reqData);\r\n\t\t\treturn Z._dataProvider.sendRequest(Z, url, reqData)\r\n\t\t\t.done(Z._doSubmitSelectedSuccess)\r\n\t\t\t.fail(Z._doApplyError)\r\n\t\t\t.always(function(){\r\n\t\t\t\tZ._submitting = false;\r\n\t\t\t});\r\n\t\t} catch(e) {\r\n\t\t\tZ._submitting = false;\r\n\t\t}\r\n\t},\r\n\r\n\t_getExcludeFields: function(includeFields, excludeFields) {\r\n\t\tif(!includeFields || includeFields.length === 0) {\r\n\t\t\treturn excludeFields || null;\r\n\t\t}\r\n\t\tvar Z = this;\r\n\t\tvar fields = Z.getNormalFields(), fldObj, fldName;\r\n\t\tvar result = [], i, len;\r\n\t\tfor(var i = 0, len = fields.length; i < len; i++) {\r\n\t\t\tfldName = fldObj.name();\r\n\t\t\tif(includeFields.indexOf(fldName) < 0) {\r\n\t\t\t\tresult.push(fldName);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(excludeFields) {\r\n\t\t\tfor(i = 0, len = excludeFields.length; i < len; i++) {\r\n\t\t\t\tfldName = excludeFields[i];\r\n\t\t\t\tif(exFields.indexOf(fldName) < 0) {\r\n\t\t\t\t\tresult.push(fldName);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t_refreshInnerControl: function (updateEvt) {\r\n\t\tvar i, cnt, ctrl;\r\n\t\tif (updateEvt.eventType == jslet.data.RefreshEvent.UPDATEALL || \r\n\t\t\t\tupdateEvt.eventType == jslet.data.RefreshEvent.CHANGEMETA) {\r\n\t\t\tcnt = this._linkedLabels? this._linkedLabels.length: 0;\r\n\t\t\tfor (i = 0; i < cnt; i++) {\r\n\t\t\t\tctrl = this._linkedLabels[i];\r\n\t\t\t\tif (ctrl.refreshControl) {\r\n\t\t\t\t\tctrl.refreshControl(updateEvt);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcnt = this._linkedControls? this._linkedControls.length: 0;\r\n\t\tfor (i = 0; i < cnt; i++) {\r\n\t\t\tctrl = this._linkedControls[i];\r\n\t\t\tif (ctrl && ctrl.refreshControl) {\r\n\t\t\t\tctrl.refreshControl(updateEvt);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Focus on the edit control that link specified field name.\r\n\t * \r\n\t * @param {String} fldName Field name.\r\n\t * \r\n\t * @return {this}\r\n\t */\r\n\tfocusEditControl: function (fldName) {\r\n\t\tif(jslet.temp.focusing || !fldName) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tvar Z = this, ctrl,\r\n\t\t\tfldObj = Z.getField(fldName);\r\n\t\tif(!fldObj) {\r\n\t\t\tconsole.warn('Not found field: ' + fldName + ' in dataset: ' + Z.name());\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tvar dsDetail = fldObj.detailDataset();\r\n\t\tif(dsDetail) {\r\n\t\t\tfldName = dsDetail.getFirstFocusField();\r\n\t\t\tdsDetail.focusEditControl(fldName);\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tfor (var i = Z._linkedControls.length - 1; i >= 0; i--) {\r\n\t\t\tctrl = Z._linkedControls[i];\r\n\t\t\tif(!ctrl.field) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (ctrl.field() == fldName) {\r\n\t\t\t\t//Avoid nesting call\r\n\t\t\t\tjslet.temp.focusing = true;\r\n\t\t\t\ttry {\r\n\t\t\t\t\tctrl.focus();\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tjslet.temp.focusing = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} //end for\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Focus the first error field.\r\n\t * \r\n\t * @return {this}\r\n\t */\r\n\tfocusFirstErrorField: function() {\r\n\t\tvar fldName = jslet.data.FieldError.getFirstErrorField(this.getRecord());\r\n\t\tif(!fldName) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tthis.focusEditControl(fldName);\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Refresh whole field.\r\n\t * \r\n\t * @param {String} fldName field name.\r\n\t * \r\n\t * @return {this}\r\n\t */\r\n\trefreshField: function(fldName) {\r\n\t\tthis.refreshControl(jslet.data.RefreshEvent.updateColumnEvent(fldName));\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Refresh lookup field.\r\n\t * \r\n\t * @param {String} fldName field name.\r\n\t * \r\n\t * @return {this}\r\n\t */\r\n\trefreshLookupField: function(fldName) {\r\n\t\tvar lookupEvt = jslet.data.RefreshEvent.lookupEvent(fldName);\r\n\t\tthis.refreshControl(lookupEvt);\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @private \r\n\t */\r\n\trefreshControl: function (updateEvt, clearFieldCache) {\r\n\t\tif (this._lockCount) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!updateEvt) {\r\n\t\t\tupdateEvt = jslet.data.RefreshEvent.updateAllEvent();\r\n\t\t}\r\n\t\tif(clearFieldCache) {\r\n\t\t\tjslet.data.FieldValueCache.removeAllCache(this);\t\t\t\r\n\t\t}\r\n\t\tthis._refreshInnerControl(updateEvt);\r\n\t},\r\n\r\n\t/**\r\n\t * @private \r\n\t */\r\n\taddLinkedControl: function (linkedControl) {\r\n\t\tif (linkedControl.isLabel) {\r\n\t\t\tthis._linkedLabels.push(linkedControl);\r\n\t\t} else {\r\n\t\t\tthis._linkedControls.push(linkedControl);\r\n\t\t\tvar fldName = null;\r\n\t\t\tif(linkedControl.field) {\r\n\t\t\t\tfldName = linkedControl.field();\r\n\t\t\t}\r\n\t\t\tif(fldName && linkedControl.canFocus()) {\r\n\t\t\t\tif(!this._canFocusFields) {\r\n\t\t\t\t\tthis._canFocusFields = [];\r\n\t\t\t\t}\r\n\t\t\t\tthis._canFocusFields.push(fldName);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * @private \r\n\t */\r\n\tremoveLinkedControl: function (linkedControl) {\r\n\t\tvar arrCtrls = linkedControl.isLabel ? this._linkedLabels : this._linkedControls;\r\n\t\tif(!arrCtrls) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar k = arrCtrls.indexOf(linkedControl);\r\n\t\tif (k >= 0) {\r\n\t\t\tarrCtrls.splice(k, 1);\r\n\t\t}\r\n\t\tif(!linkedControl.isLabel && linkedControl.field) {\r\n\t\t\tvar fldName = linkedControl.field();\r\n\t\t\tif(fldName) {\r\n\t\t\t\tk = this._canFocusFields.indexOf(fldName);\r\n\t\t\t\tif(k >= 0) {\r\n\t\t\t\t\tthis._canFocusFields.splice(k, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\trefreshLookupHostDataset: function() {\r\n\t\tif(this._autoRefreshHostDataset) {\r\n\t\t\tjslet.data.datasetRelationManager.refreshLookupHostDataset(this._name);\r\n\t\t}\r\n\t},\r\n\t\r\n\thandleLookupDatasetChanged: function(fldName) {\r\n\t\tvar Z = this;\r\n\t\tif(!Z._inContextRule) {\r\n\t\t\tjslet.data.FieldValueCache.clearAll(Z, fldName);\r\n\t\t}\r\n\t\tZ.refreshLookupField(fldName);\r\n\t\t//Don't use the following code, is will cause DBAutoComplete control issues.\r\n\t\t//this.refreshControl(jslet.data.RefreshEvent.updateColumnEvent(fldName));\r\n\t},\r\n\r\n\tinnerExportTextArray: function(exportOption, csvFlag) {\r\n\t\tvar Z = this;\r\n\t\tZ.confirm();\r\n\t\tif(Z.existDatasetError()) {\r\n\t\t\tconsole.warn(jsletlocale.Dataset.cannotConfirm);\r\n\t\t}\r\n\r\n\t\tvar exportHeader = true,\r\n\t\t\texportDisplayValue = true,\r\n\t\t\tonlySelected = false,\r\n\t\t\tonlyCurrent = false,\r\n\t\t\trecordRange = jslet.data.RecordRange.ALL,\r\n\t\t\tincludeFields = null,\r\n\t\t\texcludeFields = null,\r\n\t\t\tescapeDate = true;\r\n\t\t\r\n\t\tif(exportOption && jQuery.isPlainObject(exportOption)) {\r\n\t\t\tif(exportOption.exportHeader !== undefined) {\r\n\t\t\t\texportHeader = exportOption.exportHeader? true: false;\r\n\t\t\t}\r\n\t\t\tif(exportOption.recordRange !== undefined) {\r\n\t\t\t\trecordRange = exportOption.recordRange;\r\n\t\t\t\tonlyCurrent = (recordRange === jslet.data.RecordRange.CURRENT);\r\n\t\t\t\tonlySelected = (recordRange === jslet.data.RecordRange.SELECTED);\r\n\t\t\t}\r\n\t\t\tif(exportOption.includeFields !== undefined) {\r\n\t\t\t\tincludeFields = exportOption.includeFields;\r\n\t\t\t\tjslet.Checker.test('Dataset.exportCsv#exportOption.includeFields', includeFields).isArray();\r\n\t\t\t}\r\n\t\t\tif(exportOption.excludeFields !== undefined) {\r\n\t\t\t\texcludeFields = exportOption.excludeFields;\r\n\t\t\t\tjslet.Checker.test('Dataset.exportCsv#exportOption.excludeFields', excludeFields).isArray();\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar fldCnt, dateFields = null, fldObj, fldName;\r\n\t\tvar exportFields = jslet.temp.exportFields && jslet.temp.exportFields[Z.name()];\r\n\t\tif(!exportFields) {\r\n\t\t\texportFields = [];\r\n\t\t\tfldCnt = Z._normalFields.length;\r\n\t\t\tfor(var i = 0; i < fldCnt; i++) {\r\n\t\t\t\tfldObj = Z._normalFields[i];\r\n\t\t\t\tfldName = fldObj.name();\r\n\t\t\t\tif(includeFields && includeFields.length > 0) {\r\n\t\t\t\t\tif(includeFields.indexOf(fldName) < 0) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif(!fldObj.visible()) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(excludeFields && excludeFields.length > 0) {\r\n\t\t\t\t\tif(excludeFields.indexOf(fldName) >= 0) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t} \r\n\t\t\t\tif(csvFlag && fldObj.getType() === jslet.data.DataType.DATE) {\r\n\t\t\t\t\tif(!dateFields) {\r\n\t\t\t\t\t\tdateFields = [];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdateFields.push(i);\r\n\t\t\t\t}\r\n\t\t\t\texportFields.push(fldObj);\r\n\t\t\t}\r\n\t\t\tif(jslet.temp.exportFields) {\r\n\t\t\t\tjslet.temp.exportFields[Z.name()] = exportFields;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tvar result = [], arrRec;\r\n\t\t\r\n\t\tfldCnt = exportFields.length;\r\n\t\tif (exportHeader) {\r\n\t\t\tarrRec = [];\r\n\t\t\tfor(i = 0; i < fldCnt; i++) {\r\n\t\t\t\tfldObj = exportFields[i];\r\n\t\t\t\tfldName = fldObj.label();\r\n\t\t\t\tarrRec.push(fldName);\r\n\t\t\t}\r\n\t\t\tresult.push(arrRec);\r\n\t\t}\r\n\r\n\t\t\r\n\t\tvar text, dataType;\r\n\t\t\r\n\t\tfunction exportOneRecord() {\r\n\t\t\tarrRec = [];\r\n\t\t\tfor(var i = 0; i < fldCnt; i++) {\r\n\t\t\t\tfldObj = exportFields[i];\r\n\t\t\t\tfldName = fldObj.name();\r\n\t\t\t\t//If Number field does not have lookup field, return field value, not field text. \r\n\t\t\t\t//Example: 'amount' field\r\n\t\t\t\tdataType = fldObj.getType();\r\n\t\t\t\tif(dataType === jslet.data.DataType.DATASET) {\r\n\t\t\t\t\tarrRec.push(fldObj.detailDataset().innerExportTextArray({exportHeader: false}));\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif(dataType === jslet.data.DataType.NUMBER && !fldObj.lookup()) {\r\n\t\t\t\t\ttext = fldObj.getValue();\r\n\t\t\t\t\tif(text === null || text === undefined) {\r\n\t\t\t\t\t\ttext = '';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttext += '';\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttext = Z.getFieldText(fldName);\r\n\t\t\t\t\tif(text === null || text === undefined) {\r\n\t\t\t\t\t\ttext = '';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(text && dataType === jslet.data.DataType.STRING) {\r\n\t\t\t\t\t\tvar replaceFn = text.replace;\r\n\t\t\t\t\t\tif(replaceFn) {\r\n\t\t\t\t\t\t\ttext = jslet.removeHtmlTag(text);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\ttext += '';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tarrRec.push(text);\r\n\t\t\t}\r\n\t\t\tresult.push(arrRec);\r\n\t\t}\r\n\t\t\r\n\t\tif(onlyCurrent) {\r\n\t\t\texportOneRecord();\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\tvar context = Z.startSilenceMove()\r\n\t\ttry{\r\n\t\t\tZ.first();\r\n\t\t\twhile(!Z.isEof()) {\r\n\t\t\t\tif (onlySelected && !Z.selected()) {\r\n\t\t\t\t\tZ.next();\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\texportOneRecord();\r\n\t\t\t\tZ.next();\r\n\t\t\t} // end while\r\n\t\t\tif(!csvFlag) {\r\n\t\t\t\treturn result;\r\n\t\t\t} else {\r\n\t\t\t\treturn [result, dateFields];\r\n\t\t\t}\r\n\t\t}finally{\r\n\t\t\tZ.endSilenceMove(context);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Export dataset as text array like: [[123,'dd'], [[234], 'ee']].\r\n\t * \r\n\t * @param {Object} exportOption Export options.\r\n\t * @param {Boolean} exportOption.exportHeader True - export with field labels, false -otherwise.\r\n\t * @param {Boolean} exportOption.onlySelected True - export selected records, false -otherwise.\r\n\t * @param {Boolean} exportOption.onlyCurrent True - export current record, false -otherwise.\r\n\t * @param {String[]} exportOption.includeFields Array of field names which to be exported.\r\n\t * @param {String[]} exportOption.excludeFields Array of field names which not to be exported.\r\n\t * \r\n\t * @return {String[][]} Text array. \r\n\t */\r\n\texportTextArray: function(exportOption) {\r\n\t\tjslet.temp.exportFields = {};\r\n\t\ttry {\r\n\t\t\treturn this.innerExportTextArray(exportOption);\r\n\t\t} finally {\r\n\t\t\tdelete jslet.temp.exportFields;\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t * Export data with CSV format.\r\n\t * \r\n\t * @param {Object} exportOption Export options.\r\n\t * @param {Boolean} exportOption.exportHeader True - export with field labels, false -otherwise.\r\n\t * @param {Boolean} exportOption.onlySelected True - export selected records, false -otherwise.\r\n\t * @param {String[]} exportOption.includeFields Array of field names which to be exported.\r\n\t * @param {String[]} exportOption.excludeFields Array of field names which not to be exported.\r\n\t * \r\n\t * @return {String} Csv Text. \r\n\t */\r\n\texportCsv: function(exportOption) {\r\n\t\tvar textArr = this.innerExportTextArray(exportOption, true),\r\n\t\t\tdateFields = textArr[1];\r\n\t\ttextArr = textArr[0];\r\n\r\n\t\tif(textArr.length === 0) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t\tvar escapeDate = true;\r\n\t\tif(exportOption.escapeDate !== undefined) {\r\n\t\t\tescapeDate = exportOption.escapeDate? true: false;\r\n\t\t}\r\n\t\t\r\n\t\tvar\trecArr = textArr[0],\r\n\t\t\tfldCnt = recArr.length,\r\n\t\t\tfldSeperator = ',', \r\n\t\t\tsurround='\"',\r\n\t\t\ttext, isDate = false;\r\n\t\t\r\n\t\tfor(var i = 0, recCnt = textArr.length; i < recCnt; i++) {\r\n\t\t\trecArr = textArr[i];\r\n\t\t\tfor(var j = 0; j < fldCnt; j++) {\r\n\t\t\t\ttext = recArr[j];\r\n\t\t\t\tif(text) {\r\n\t\t\t\t\ttext = text.replace(/\"/g,'\"\"');\r\n\t\t\t\t\tvar isStartZero = false;\r\n\t\t\t\t\tif(text.startsWith('0')) {\r\n\t\t\t\t\t\tisStartZero = true;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tisDate = false;\r\n\t\t\t\t\t\tif(escapeDate && dateFields && i > 0 && dateFields.indexOf(j) >= 0) {\r\n\t\t\t\t\t\t\tisDate = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttext = surround + text + surround;\r\n\t\t\t\t\tif(isStartZero || isDate) {\r\n\t\t\t\t\t\ttext = '=' + text;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttext = '\"\"';\r\n\t\t\t\t}\r\n\t\t\t\trecArr[j] = text;\r\n\t\t\t}\r\n\t\t\ttextArr[i] = recArr.join(fldSeperator);\r\n\t\t}\r\n\t\treturn textArr.join('\\n');\r\n\t},\r\n\r\n\t/**\r\n\t * Export data to CSV file.\r\n\t *  \r\n\t * @param {String} fileName Export file name.\r\n\t * @param {Object} exportOption Export options.\r\n\t * @param {Boolean} exportOption.exportHeader True - export with field labels, false -otherwise.\r\n\t * @param {Boolean} exportOption.onlySelected True - export selected records, false -otherwise.\r\n\t * @param {String[]} exportOption.includeFields Array of field names which to be exported.\r\n\t * @param {String[]} exportOption.excludeFields Array of field names which not to be exported.\r\n\t */\r\n\texportCsvFile: function(fileName, exportOption) {\r\n\t\tjslet.Checker.test('Dataset.exportCsvFile#fileName', fileName).required().isString();\r\n    \tvar str = this.exportCsv(exportOption);\r\n        var a = document.createElement('a');\r\n\t\t\r\n        var blob = new window.Blob([str], {'type': 'text\\/csv'});\r\n        a.href = window.URL.createObjectURL(blob);\r\n        a.download = fileName;\r\n        a.click();\r\n    },\r\n    \r\n\t/** \r\n\t* Get filtered data records. \r\n\t* \r\n\t* @return {Object[]} Filtered data records.\r\n\t*/ \r\n\tfilteredRecords: function() { \r\n\t\tvar Z= this, \r\n\t\t\tresult = [], \r\n\t\t\toldRecno = Z.recnoSilence(); \r\n\t\tZ.confirm();\r\n\t\ttry { \r\n\t\t\tfor(var i = 0, len = Z.recordCount(); i < len; i++) {\r\n\t\t\t\tZ.recnoSilence(i); \r\n\t\t\t\tresult.push(Z.getRecord()); \r\n\t\t\t} \r\n\t\t} finally { \r\n\t\t\tZ.recnoSilence(oldRecno); \r\n\t\t} \r\n\t\treturn result; \r\n\t}, \r\n\r\n\tfilteredDataList: function() {\r\n\t\treturn this.filteredRecords();\r\n\t},\r\n\t\r\n\t/** \r\n\t* Iterate the whole dataset, and run the specified callback function. Example: \r\n\t* \r\n\t*     @example\r\n\t*     dataset.iterate(function(){\r\n\t* \t    var fldValue = this.getFieldValue('xxx');\r\n\t* \t    this.setFieldValue('xxx', fldValue);\r\n\t*     }); \r\n\t* \r\n\t* @param {Function} callBackFn Call back function to iterate.\r\n\t* @param {Boolean} callBackFn.return True - break iterating, false - continue iterating.\r\n\t* @param {Integer} startRecno Start record number to iterate.\r\n\t* @param {Integer} endRecno End record number to iterate.\r\n\t* \r\n\t* @return {this}\r\n\t*/ \r\n\titerate: function(callBackFn, startRecno, endRecno) { \r\n\t\tjslet.Checker.test('Dataset.iterate#callBackFn', callBackFn).required().isFunction(); \r\n\t\tvar Z= this, \r\n\t\t\tcontext = Z.startSilenceMove(); \r\n\t\ttry{\r\n\t\t\tstartRecno = startRecno || 0;\r\n\t\t\tif(endRecno !== 0 && !endRecno) {\r\n\t\t\t\tendRecno = Z.recordCount() - 1;\r\n\t\t\t}\r\n\t\t\tfor(var k = startRecno; k <= endRecno; k++) {\r\n\t\t\t\tZ.recno(k);\r\n\t\t\t\tif(callBackFn) { \r\n\t\t\t\t\tif(callBackFn.call(Z)) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} \r\n\t\t\t\t} \r\n\t\t\t} \r\n\t\t}finally{ \r\n\t\t\tZ.endSilenceMove(context); \r\n\t\t} \r\n\t\treturn this; \r\n\t}, \r\n\t\r\n\t/**\r\n\t * Set or get raw data records. Example:\r\n\t * \r\n\t *     @example\r\n\t *     var records = [{fld1: 123, fld2: 'test'}, {fld1: 100, fld2: 'world'}];\r\n\t *     dsObj.records(records); //set data records.\r\n\t *     var list = dsObj.records(); //return data records.\r\n\t * \r\n\t * @param {Object[] | undefined} records Raw data records.\r\n\t * \r\n\t * @return {this | Object[]}\r\n\t */\r\n\trecords: function (records) {\r\n\t\tvar Z = this;\r\n\t\tif (records === undefined) {\r\n\t\t\tif(Z._masterField) {\r\n\t\t\t\treturn Z.masterDataset().getFieldValue(Z._masterField);\r\n\t\t\t}\r\n\t\t\treturn Z._records;\r\n\t\t}\r\n\t\tif(Z._isEnum && records && !jslet.isArray(records)) {\r\n\t\t\tvar arrRecords = [];\r\n\t\t\tif(jslet.isString(records)) {\r\n\t\t\t\tvar enumStr = jslet.trim(records);\r\n\t\t\t\tvar recs = enumStr.split(','), recstr, rec;\r\n\t\t\t\tfor (var i = 0, cnt = recs.length; i < cnt; i++) {\r\n\t\t\t\t\trecstr = jslet.trim(recs[i]);\r\n\t\t\t\t\trec = recstr.split(':');\r\n\t\t\t\r\n\t\t\t\t\tarrRecords[arrRecords.length] = {\r\n\t\t\t\t\t\t'code' : jslet.trim(rec[0]),\r\n\t\t\t\t\t\t'name' : jslet.trim(rec[1])\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfor(var key in records) {\r\n\t\t\t\t\tarrRecords[arrRecords.length] = {code: key, name: records[key]};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tZ._records = arrRecords;\r\n\t\t\tZ._initialize();\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tjslet.Checker.test('Dataset.records', records).isArray();\r\n\t\tif(Z._masterField) {\r\n\t\t\tif(records === null) {\r\n\t\t\t\trecords = [];\r\n\t\t\t}\r\n\t\t\tZ.masterDataset().setFieldValue(Z._masterField, records);\r\n\t\t} else {\r\n\t\t\tZ._records = records;\r\n\t\t}\r\n\t\tZ._initialize();\r\n\t\tvar fields = Z._detailDatasetFields;\r\n\t\tif(fields) {\r\n\t\t\tvar fldObj, dsDetail;\r\n\t\t\tfor(var i = 0, len = fields.length; i < len; i++) {\r\n\t\t\t\tfldObj = fields[i];\r\n\t\t\t\tdsDetail = fldObj.detailDataset();\r\n\t\t\t\tif(dsDetail) {\r\n\t\t\t\t\tdsDetail.confirm();\r\n\t\t\t\t\tdsDetail._initialize();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tZ.calcContextRule();\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\tdataList: function(dataList) {\r\n\t\treturn this.records(dataList);\r\n\t},\r\n\t\r\n\t_initialize: function(isDetailDs) {\r\n\t\tvar Z = this;\r\n\t\tif(!isDetailDs) { //Master dataset\r\n\t\t\tjslet.data.FieldValueCache.removeAllCache(Z);\r\n\t\t\tjslet.data.FieldError.clearDatasetError(Z);\r\n\t\t\tZ._changeLog.clear();\r\n\t\t}\r\n\t\tZ.status(jslet.data.DataSetStatus.BROWSE);\r\n\t\tZ._recno = -1;\r\n\t\tZ.disableControls();\r\n\t\ttry {\r\n\t\t\tZ._sortByFields();\r\n\t\t\tZ.filter(null);\r\n\t\t\tif(Z.filtered() || Z.fixedFilter()) {\r\n\t\t\t\tZ._doFilterChanged();\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\tZ.calcAggregatedValue();\r\n\t\t\t}\r\n\t\t\tZ.first();\r\n\t\t} finally {\r\n\t\t\tZ.enableControls();\r\n\t\t}\r\n\t\tZ.refreshLookupHostDataset();\r\n\t},\r\n\t\r\n\t/**\r\n\t * Return dataset data with field text, field text is formatted or calculated field value.\r\n\t * You can use them to do your special processing like: use them in jquery template.\r\n\t * \r\n\t * @param {String[]} includeFields Include fields to exports.\r\n\t * @param {String[]} excludeFields Exclude fields to exports.\r\n\t * \r\n\t * @return {String[][]}\r\n\t */\r\n\texportTextList: function(includeFields, excludeFields) {\r\n\t\tvar Z = this;\r\n\t\tZ.confirm();\r\n\t\t\r\n\t\tvar\toldRecno = Z.recno(), \r\n\t\t\tresult = [],\r\n\t\t\tfldCnt, arrFldObj,\r\n\t\t\tfldObj, fldName, textValue, textRec;\r\n\t\tif(includeFields || includeFields) {\r\n\t\t\tarrFldObj = [];\r\n\t\t\tfor(var k = 0; k < fldCnt; k++) {\r\n\t\t\t\tfldObj = Z._normalFields[k];\r\n\t\t\t\tfldName = fldObj.name();\r\n\t\t\t\tif(includeFields && includeFields.indexOf(fldName) >= 0) {\r\n\t\t\t\t\tarrFldObj.push(fldObj);\r\n\t\t\t\t}\r\n\t\t\t\tif(!includeFields && excludeFields && excludeFields.indexOf(fldName) < 0) {\r\n\t\t\t\t\tarrFldObj.push(fldObj);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tarrFldObj = Z._normalFields;\r\n\t\t}\r\n\t\tfldCnt = arrFldObj.length;\r\n\t\ttry {\r\n\t\t\tfor (var i = 0, cnt = Z.recordCount(); i < cnt; i++) {\r\n\t\t\t\tZ.recnoSilence(i);\r\n\t\t\t\ttextRec = {};\r\n\t\t\t\tfor(var j = 0; j < fldCnt; j++) {\r\n\t\t\t\t\tfldObj = arrFldObj[j];\r\n\t\t\t\t\tfldName = fldObj.name();\r\n\t\t\t\t\tif(fldObj.getType() === jslet.data.DataType.DATASET) {\r\n\t\t\t\t\t\ttextValue = fldObj.detailDataset().exportTextList();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttextValue = Z.getFieldText(fldName);\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttextRec[fldName] = textValue;\r\n\t\t\t\t}\r\n\t\t\t\tresult.push(textRec);\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t} finally {\r\n\t\t\tthis.recnoSilence(oldRecno);\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t * Import data from a string value array. Example:\r\n\t * \r\n\t *     @example\r\n\t * \t   var textList = [{id: '1', name: 'Tom', department: 'QA'}, {id: '2', name: 'Jerry', department: 'Admin'}];\r\n\t * \t   dataset.importTextList(textList);\r\n\t * \r\n\t * @param {Object[]} textList A string array.\r\n\t * @param {Integer} start (optional) The start position to import.\r\n\t * @param {Integer} end (optional) The end position to import.\r\n\t */\r\n\timportTextList: function(textList, start, end) {\r\n\t\tvar Z = this;\r\n\t\tjslet.Checker.test('importTextList#textList', textList).isArray();\r\n\t\tif(!textList || textList.length === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(!start) {\r\n\t\t\tstart = 0;\r\n\t\t}\r\n\t\tif(!end && end !== 0) {\r\n\t\t\tend = textList.length - 1;\r\n\t\t}\r\n\t\tZ.disableControls();\r\n\t\tZ.clearFollowedValues();\r\n\t\tvar oldValueFollowEnabled = Z.valueFollowEnabled();\r\n\t\tZ.valueFollowEnabled(false);\r\n\t\tvar oldReadOnly = Z.readOnly();\r\n\t\ttry {\r\n\t\t\tvar rec, fldObj, fldName, fldText, \r\n\t\t\t\tfldCnt = Z._normalFields.length,\r\n\t\t\t\tcacheFieldMap = {}, cacheField, \r\n\t\t\t\tcacheValue, value, errObj,\r\n\t\t\t\toldRecno = Z.recno();\r\n\t\t\tZ.readOnly(false);\r\n\t\t\tfor(var i = start; i <= end; i++) {\r\n\t\t\t\trec = textList[i];\r\n\t\t\t\tZ.appendRecord();\r\n\t\t\t\tfor(var j = 0; j < fldCnt; j++) {\r\n\t\t\t\t\tfldObj = Z._normalFields[j];\r\n\t\t\t\t\tfldName = fldObj.name();\r\n\t\t\t\t\tfldText = rec[fldName];\r\n\t\t\t\t\tif(fldText === undefined || fldText === '' || fldText === null) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(fldObj.lookup()) {\r\n\t\t\t\t\t\tcacheField = cacheFieldMap[fldName];\r\n\t\t\t\t\t\tif(cacheField) {\r\n\t\t\t\t\t\t\tcacheValue = cacheField[fldText];\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tcacheField = {};\r\n\t\t\t\t\t\t\tcacheFieldMap[fldName] = cacheField;\r\n\t\t\t\t\t\t\tcacheValue = null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(cacheValue) {\r\n\t\t\t\t\t\t\tvalue = cacheValue.value;\r\n\t\t\t\t\t\t\terrObj = cacheValue.error;\r\n\t\t\t\t\t\t\tZ.setFieldValue(fldName, value);\r\n\t\t\t\t\t\t\tif(errObj) {\r\n\t\t\t\t\t\t\t\tZ.setFieldError(fldName, errObj.message, null, errObj.inputText);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tZ.setFieldText(fldName, fldText);\r\n\t\t\t\t\t\t\tvalue = Z.getFieldValue(fldName);\r\n\t\t\t\t\t\t\terrObj = Z.getFieldError(fldName);\r\n\t\t\t\t\t\t\tcacheField[fldText] = {value: value, error: errObj};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(fldObj.getType() === jslet.data.DataType.DATASET) {\r\n\t\t\t\t\t\tif(fldText.length === 0) { //\"fldText\" must be an array.\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfldObj.detailDataset().importTextList(fldText);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tZ.setFieldText(fldName, fldText);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tZ.confirm();\r\n\t\t\t}\r\n\t\t} finally {\r\n\t\t\tZ._sortByFields();\r\n\t\t\tZ.readOnly(oldReadOnly);\r\n\t\t\tZ.valueFollowEnabled(oldValueFollowEnabled);\r\n\t\t\tZ.recno(oldRecno + 1);\r\n\t\t\tZ.enableControls();\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t * Export dataset snapshot. Dataset snapshot can be used for making a backup when inputing a lot of data. \r\n\t * \r\n\t * @return {Object} Dataset snapshot.\r\n\t */\r\n\texportSnapshot: function() {\r\n\t\t\r\n\t\tfunction getDetailSetting(masterDs, details) {\r\n\t\t\tvar detail;\r\n\t\t\tvar detailFields = masterDs._detailDatasetFields;\r\n\t\t\tif(!detailFields) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar dtlFldObj, dsDetail;\r\n\t\t\tfor(var i = 0, len = detailFields.length; i < len; i++) {\r\n\t\t\t\tdtlFldObj = detailFields[i];\r\n\t\t\t\tdsDetail = dtlFldObj.detailDataset();\r\n\t\t\t\tif(dsDetail) {\r\n\t\t\t\t\tdetail = {name: dsDetail.name(), recno: dsDetail.recno(), status: dsDetail.status()};\r\n\t\t\t\t\tindexFields = dsDetail.indexFields();\r\n\t\t\t\t\tif(indexFields) {\r\n\t\t\t\t\t\tdsDetail.indexFields = indexFields;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfilter = dsDetail.filter();\r\n\t\t\t\t\tif(filter) {\r\n\t\t\t\t\t\tdsDetail.filter = filter;\r\n\t\t\t\t\t\tdsDetail.filtered = dsDetail.filtered();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdetails.push(detail);\r\n\t\t\t\t\t\r\n\t\t\t\t\tgetDetailSetting(dsDetail, details);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tvar Z = this;\r\n\t\tif(Z.records() === 0) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tif(Z.masterDataset()) {\r\n\t\t\tthrow new Error('Can not call this method on detail dataset! Call it on \"' + Z.masterDataset().name() + '\"!');\r\n\t\t}\r\n\t\tvar\tmainDs = {name: Z.name(), recno: Z.recno(), status: Z.status(), records: Z.records(), changedRecords: Z._changeLog._changedRecords};\r\n\t\tvar indexFields = Z.indexFields();\r\n\t\tif(indexFields) {\r\n\t\t\tmainDs.indexFields = indexFields;\r\n\t\t}\r\n\t\tvar filter = Z.filter();\r\n\t\tif(filter) {\r\n\t\t\tmainDs.filter = filter;\r\n\t\t\tmainDs.filtered = Z.filtered();\r\n\t\t}\r\n\t\tvar result = {master: mainDs};\r\n\t\tvar details = [];\r\n\t\tgetDetailSetting(Z, details);\r\n\t\tresult.details = details;\r\n\t\t\r\n\t\treturn result;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Import a dataset snapshot.\r\n\t * \r\n\t * @param {Object} snapshot Dataset snapshot.\r\n\t */\r\n\timportSnapshot: function(snapshot) {\r\n\t\tjslet.Checker.test('Dataset.importSnapshot#snapshot', snapshot).required().isPlanObject();\r\n\t\tvar master = snapshot.master;\r\n\t\tjslet.Checker.test('Dataset.importSnapshot#snapshot.master', master).required().isPlanObject();\r\n\t\tvar Z = this,\r\n\t\t\tdsName = master.name;\r\n\t\tif(Z.masterDataset()) {\r\n\t\t\tthrow new Error('Can not call this method on detail dataset! Call it on \"' + Z.masterDataset().name() + '\"!');\r\n\t\t}\r\n\t\tif(dsName != Z._name) {\r\n\t\t\t//Snapshot name: [{0}] does not match the current dataset name: [{1}], cannot import snapshot!\r\n\t\t\tthrow new Error(jslet.formatMessage(jsletlocale.Dataset.cannotImportSnapshot, [dsName, Z._name]));\r\n\t\t}\r\n\t\tZ._records = master.records || null;\r\n\t\tZ._changeLog._changedRecords = master.changedRecords;\r\n\t\tif(master.indexFields !== undefined) {\r\n\t\t\tZ.indexFields(master.indexFields);\r\n\t\t}\r\n\t\tif(master.filter !== undefined) {\r\n\t\t\tZ.filter(master.filter);\r\n\t\t\tZ.filtered(master.filtered);\r\n\t\t}\r\n\t\tif(master.recno >= 0) {\r\n\t\t\tZ._silence++;\r\n\t\t\ttry {\r\n\t\t\t\tZ.recno(master.recno);\r\n\t\t\t\tif(master.status) {\r\n\t\t\t\t\tZ.status(master.status);\r\n\t\t\t\t}\r\n\t\t\t} finally {\r\n\t\t\t\tZ._silence--;\r\n\t\t\t}\r\n\t\t}\r\n\t\tZ.calcAggregatedValue();\r\n\t\tZ.refreshControl();\r\n\t\tvar details = snapshot.details;\r\n\t\tif(!details || details.length === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar detail, dsDetail;\r\n\t\tfor(var i = 0, len = details.length; i < len; i++) {\r\n\t\t\tdetail = details[i];\r\n\t\t\tdsDetail = jslet.data.getDataset(detail.name);\r\n\t\t\tif(dsDetail) {\r\n\t\t\t\tif(detail.indexFields !== undefined) {\r\n\t\t\t\t\tdsDetail.indexFields(detail.indexFields);\r\n\t\t\t\t}\r\n\t\t\t\tif(detail.filter !== undefined) {\r\n\t\t\t\t\tdsDetail.filter(detail.filter);\r\n\t\t\t\t\tdsDetail.filtered(detail.filtered);\r\n\t\t\t\t}\r\n\t\t\t\tif(detail.recno >= 0) {\r\n\t\t\t\t\tdsDetail._silence++;\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tdsDetail.recno(detail.recno);\r\n\t\t\t\t\t\tif(detail.status) {\r\n\t\t\t\t\t\t\tdsDetail.status(detail.status);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} finally {\r\n\t\t\t\t\t\tdsDetail._silence--;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tdsDetail.refreshControl();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t * Create field object. Example:\r\n\t * \r\n\t *     @example\r\n\t *     var fldObj = dsObj.createField({name:'field1', dataType:'N', label: 'field1 label'});\r\n\t * \r\n\t * @param {Object} fieldConfig A json object which property names are same as jslet.data.Field. Example: {name: 'xx', dataType: 'N', ...}\r\n\t * @param {jslet.data.Field} parent (optional) Parent field object.\r\n\t * \r\n\t * @return {jslet.data.Field}\r\n\t */\r\n\tcreateField: function (fieldConfig, parentFldObj, batchMode) {\r\n\t\tjslet.Checker.test('Dataset.createField#fieldConfig', fieldConfig).required().isObject();\r\n\t\tvar Z = this;\r\n\t\tvar dtype = fieldConfig.type || fieldConfig.dataType;\r\n\t\t\r\n\t\tif(dtype === jslet.data.DataType.EXTEND) {\r\n\t\t\tZ._createExtendField(fieldConfig, parentFldObj);\r\n\t\t} else {\r\n\t\t\tvar fldObj = new jslet.data.Field(Z, fieldConfig, parentFldObj);\r\n\t\t\tZ.addField(fldObj, batchMode);\r\n\t\t}\r\n\t\treturn fldObj;\r\n\t},\r\n\t\r\n\t_createExtendField: function(fldCfg, parentFldObj) {\r\n\t\tjslet.Checker.test('createExtendField#extendFields', fldCfg.extendFields).required().isArray();\r\n\t\tvar Z = this;\r\n\t\tvar asChild = fldCfg.asChild;\r\n\t\tif(asChild) {\r\n\t\t\tvar pFldObj = parentFldObj;\r\n\t\t\tparentFldObj = new jslet.data.Field(Z, fldCfg, parentFldObj);\r\n\t\t\tif(!pFldObj) {\r\n\t\t\t\tZ.addField(parentFldObj);\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar extFldCfg = {}, \r\n\t\t\textFldCfgs = fldCfg.extendFields,\r\n\t\t\tonCreatingExtendField = fldCfg.onCreatingExtendField,\r\n\t\t\tfldObjs = [], fldObj, firstSumFldCfg, \r\n\t\t\ttotalExpr = '', \r\n\t\t\thostFldName = fldCfg.name, \r\n\t\t\thasSum = false;\r\n\t\t\r\n\t\tfor(var i = 0, len = extFldCfgs.length; i < len; i++) {\r\n\t\t\textFldCfg = extFldCfgs[i];\r\n\t\t\tif(onCreatingExtendField) {\r\n\t\t\t\tonCreatingExtendField(extFldCfg);\r\n\t\t\t}\r\n\t\t\tfldObj = new jslet.data.Field(Z, extFldCfg, parentFldObj);\r\n\t\t\tif(extFldCfg.needSum) {\r\n\t\t\t\ttotalExpr += '+['+fldObj.name() + ']';\r\n\t\t\t\tif(!hasSum) {\r\n\t\t\t\t\tfirstSumFldCfg = extFldCfg;\r\n\t\t\t\t}\r\n\t\t\t\thasSum = true;\r\n\t\t\t}\r\n\t\t\tfldObj.extendHostName(hostFldName);\r\n\t\t\tfldObjs.push(fldObj);\r\n\t\t}\r\n\t\tif(hasSum) {\r\n\t\t\textFldCfg = firstSumFldCfg;\r\n\t\t\textFldCfg.name = fldCfg.name + '_sum';\r\n\t\t\textFldCfg.label = jslet.trim((asChild? '' : (fldCfg.label || fldCfg.name)) + jsletlocale.Dataset.totalLabel);\r\n\t\t\textFldCfg.formula = totalExpr.substring(1);\r\n\t\t\tfldObj = new jslet.data.Field(Z, extFldCfg, parentFldObj);\r\n\t\t\tfldObjs.push(fldObj);\r\n\t\t}\r\n\t\tif(!parentFldObj) {\r\n\t\t\tZ.addFields(fldObjs);\r\n\t\t}\r\n\t\treturn fldObjs;\r\n\t},\r\n\t\r\n\tcreateFields: function(fieldConfigs) {\r\n\t\tif(!fieldConfigs) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tjslet.Checker.test('Dataset.createFields#fieldConfigs', fieldConfigs).isArray();\r\n\t\tvar fldObj;\r\n\t\tfor(var i = 0, len = fieldConfigs.length; i < len; i++) {\r\n\t\t\tthis.createField(fieldConfigs[i], null, true);\r\n\t\t}\r\n\t\tthis.refreshDisplayOrder();\r\n\t\tthis.refreshAggregatedFields();\r\n\t},\r\n\r\n\tdestroy: function () {\r\n\t\tvar Z = this;\r\n\t\tZ._masterDataset = null;\r\n\t\tZ._masterField = null;\r\n\t\tZ._fields = null;\r\n\t\tZ._linkedLabels = null;\r\n\t\tZ._linkedControls = null;\r\n\t\tZ._innerFilter = null;\r\n\t\tZ._innerFindCondition = null;\r\n\t\tZ._sortingFields = null;\r\n\t\tZ._innerFormularFields = null;\r\n\t\tZ._aggregatedFields = null;\r\n\t\t\r\n\t\tjslet.data.dataModule[Z._name] = null;\r\n\t\tdelete jslet.data.dataModule[Z._name];\r\n\t\tjslet.data.datasetRelationManager.removeDataset(Z._name);\t\t\r\n\t}\r\n\t\r\n};\r\n// end Dataset\r\n\r\n/**\r\n * Create Enum Dataset. This method is use to create the simple dataset.<br />\r\n * The created dataset has two fixed fields: 'code', 'name'. Example:\r\n * \r\n *     @example\r\n *     var dsGender = jslet.data.createEnumDataset('gender', 'F:Female,M:Male');\r\n *     dsGender.getFieldValue('code');//return 'F'\r\n *     dsGender.getFieldValue('name');//return 'Female'\r\n *     dsGender.next();\r\n *     dsGender.getFieldValue('code');//return 'M'\r\n *     dsGender.getFieldValue('name');//return 'Male'\r\n * \r\n * @member jslet.data\r\n * @param {String} dsName Dataset name;  \r\n * @param {String} enumStr A string which stores enumeration data, its format must be:[code]: [name], [code]: [name].\r\n * @return {jslet.data.Dataset}\r\n */\r\njslet.data.createEnumDataset = function(dsName, enumStrOrObj) {\r\n\treturn new jslet.data.Dataset({name: dsName, isEnum: true, records: enumStrOrObj});\r\n};\r\n\r\n/**\r\n * Create dataset with dataset configuration which is stored in other place, like DB, IndexedDB.<br />\r\n * It will fire global event: {@link jslet.global.dataset#onDatasetCreating}, you can listen this event, load dataset configuration and create it.<br />\r\n * This method will not return dataset object. You can call {@link jslet.data#getDataset} to get the dataset object. \r\n * \r\n * @fires onDatasetCreating \r\n * @member jslet.data\r\n * @param {String} datasetName Dataset's name;\r\n * @param {Object} creatingOption Creating option, pattern:\r\n * {maxCreatingLevel: x, includeFields: ['fieldName1','fieldName2',...], excludeFields: ['fieldName8',...], onlyLookupFields: true|false}\r\n * @param {Integer} creatingOption.maxCreatingLevel Specified the max creating level when creating dataset nested(host dataset -> lookup dataset -> lookup dataset-> ...). \r\n * @param {String[]} creatingOption.includeFields Only create dataset with the specified field names.\r\n * @param {String[]} creatingOption.excludeFields Create dataset without the specified field names.\r\n * @param {Boolean} creatingOption.onlyLookupFields If onlyLookupFields is true, it will create dataset with fields which specified by the following dataset's properties: keyField, codeField, nameField, parentField and enabledField;\r\n * @param {jslet.data.DatasetType} creatingOption.datasetType The optional values are:  jslet.data.DatasetType.NORMAL, jslet.data.DatasetType.LOOKUP, jslet.data.DatasetType.DETAIL;\r\n * @param {String} creatingOption.realDatasetName Dataset creator uses \"realDatasetName\" to load dataset records.\r\n */\r\njslet.data.createDynamicDataset = function(dsName, creatingOption, hostDsName) {\r\n\tjslet.Checker.test('createDynamicDataset#dsName', dsName).required().isString();\r\n\tvar dsObj = jslet.data.getDataset(dsName);\r\n\tif(dsObj) {\r\n\t\treturn dsObj;\r\n\t}\r\n\tif(creatingOption && creatingOption.maxCreatingLevel) {\r\n\t\tjslet.data.defaultDatasetCreatingManager.setMaxCreateLevel(dsName, maxCreatingLevel);\r\n\t}\r\n\tvar dsType = creatingOption.datasetType;\r\n\tvar isLookup = dsType && dsType === jslet.data.DatasetType.LOOKUP;\r\n\tjslet.data.defaultDatasetCreatingManager.startCreateDataset(dsName, hostDsName, isLookup);\r\n\tif(jslet.global.dataset.onDatasetCreating) {\r\n\t\tjslet.global.dataset.onDatasetCreating(dsName, creatingOption);\r\n\t}\r\n};\r\n\r\n/**\r\n * Create dataset with field configurations. Example:\r\n * \r\n *     @example\r\n *     var fldCfg = [{\r\n *       name: 'deptid',\r\n *       type: 'S',\r\n *       length: 10,\r\n *       label: 'ID'\r\n *     }, {\r\n *       name: 'name',\r\n *       type: 'S',\r\n *       length: 20,\r\n *       label: 'Dept. Name'\r\n *     }];\r\n *     var dsCfg = {keyField: 'deptid', codeField: 'deptid', nameField: 'name'};\r\n *     var dsDepartment = jslet.data.createDataset('department', fldCfg, dsCfg);\r\n * \r\n * @member jslet.data\r\n * @param {String} datasetName Dataset name.\r\n * @param {Object[]} fieldConfigs A list of field configuration. See {@link jslet.data.Field} properties.\r\n * @param {Object} datasetProps Dataset properties, like: {keyField: '', codeField: '', ...}, see dataset properties.\r\n * @param {Integer} maxCreatingLevel Specified the max creating level when creating dataset nested(host dataset -> lookup dataset -> lookup dataset-> ...). \r\n * @return {jslet.data.Dataset}\r\n */\r\njslet.data.createDataset = function(dsName, fieldConfig, dsCfg, maxCreatingLevel) {\r\n\tjslet.Checker.test('createDataset#dsName', dsName).required().isString();\r\n\tjslet.Checker.test('createDataset#fieldConfig', fieldConfig).required().isArray();\r\n\tjslet.Checker.test('Dataset.createDataset#datasetCfg', dsCfg).isPlanObject();\r\n\tif(maxCreatingLevel) {\r\n\t\tjslet.data.defaultDatasetCreatingManager.setMaxCreateLevel(dsName, maxCreatingLevel);\r\n\t}\r\n\tvar dsObj = new jslet.data.Dataset(jQuery.extend({name: dsName, fields: fieldConfig}, dsCfg));\r\n\tjslet.data.defaultDatasetCreatingManager.endCreateDataset(dsName);\r\n\tif(dsObj.isFireGlobalEvent()) {\r\n\t\tvar globalHandler = jslet.data.globalDataHandler.datasetCreated();\r\n\t\tif(globalHandler) {\r\n\t\t\tglobalHandler(dsObj);\r\n\t\t}\r\n\t}\r\n\treturn dsObj;\r\n};\r\n\r\njslet.data.ChangeLog = function(dataset) {\r\n\tthis._dataset = dataset;\r\n\tthis._changedRecords = null;\r\n};\r\n\r\njslet.data.ChangeLog.prototype = {\r\n\tchangedRecords: function(changedRecords) {\r\n\t\tif(changedRecords === undefined) {\r\n\t\t\treturn this._getChangedRecords();\r\n\t\t}\r\n\t\tthis._changedRecords = changedRecords;\r\n\t},\r\n\t\r\n\tlog: function(recObj) {\r\n\t\tif(!this._dataset.logChanges()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(!recObj) {\r\n\t\t\trecObj = this._dataset.getRecord();\r\n\t\t}\r\n\t\tvar recInfo = jslet.data.getRecInfo(recObj);\r\n\t\tif(!recInfo.status) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar chgRecords = this._getChangedRecords();\r\n\t\tif(chgRecords.indexOf(recObj) < 0) {\r\n\t\t\tchgRecords.push(recObj);\r\n\t\t}\r\n\t},\r\n\t\r\n\tunlog: function(recObj) {\r\n\t\tif(!this._dataset.logChanges()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(!recObj) {\r\n\t\t\trecObj = this._dataset.getRecord();\r\n\t\t}\r\n\t\tvar chgRecords = this._getChangedRecords();\r\n\t\tvar k = chgRecords.indexOf(recObj);\r\n\t\tif(k >= 0) {\r\n\t\t\tchgRecords.splice(k, 1);\r\n\t\t}\r\n\t},\r\n\t\r\n\tclear: function() {\r\n\t\tthis._changedRecords = null;\r\n\t},\r\n\t\r\n\t_getChangedRecords: function() {\r\n\t\tvar dsObj = this._dataset;\r\n\t\tvar chgRecords,\r\n\t\t  \tmasterDsObj = dsObj.masterDataset(),\r\n\t\t  \tmasterFldName = dsObj.masterField();\r\n\t\tif(masterDsObj && masterFldName) {\r\n\t\t\tvar masterRecInfo = jslet.data.getRecInfo(masterDsObj.getRecord());\r\n\t\t\tif(!masterRecInfo.detailLog) {\r\n\t\t\t\tmasterRecInfo.detailLog = {};\r\n\t\t\t}\r\n\t\t\tchgRecords = masterRecInfo.detailLog[masterFldName];\r\n\t\t\tif(!chgRecords) {\r\n\t\t\t\tchgRecords = [];\r\n\t\t\t\tmasterRecInfo.detailLog[masterFldName] = chgRecords;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif(!this._changedRecords) {\r\n\t\t\t\tthis._changedRecords = [];\r\n\t\t\t}\r\n\t\t\tchgRecords = this._changedRecords;\r\n\t\t}\r\n\t\treturn chgRecords;\r\n\t}\r\n\t\r\n};\r\n\r\njslet.data.DataTransformer = function(dataset) {\r\n\tthis._dataset = dataset;\r\n};\r\n\r\njslet.data.DataTransformer.prototype = {\r\n\t\t\r\n\thasChangedData: function() {\r\n\t\tvar chgRecList = this._dataset._changeLog.changedRecords();\r\n\t\tif(!chgRecList || chgRecList.length === 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\t\r\n\tgetSubmittingChanged: function(range, detailRange) {\r\n\t\tif(!range || range === jslet.data.RecordRange.ALL) {\r\n\t\t\trange = jslet.data.RecordRange.CHANGED;\r\n\t\t}\r\n\t\tvar chgRecList = this._getRecords(this._dataset, range);\r\n\t\tif(range !== jslet.data.RecordRange.CHANGED) {\r\n\t\t\tvar newChgList = [], rec;\r\n\t\t\tvar dsObj = this._dataset;\r\n\t\t\tfor(var i = 0, len = chgRecList.length; i < len; i++) {\r\n\t\t\t\trec = chgRecList[i];\r\n\t\t\t\tif(dsObj.recordChanged(rec)) {\r\n\t\t\t\t\tnewChgList.push(rec);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tchgRecList = newChgList;\r\n\t\t}\r\n\t\tvar result = this._convert(this._dataset, chgRecList, detailRange);\r\n\t\treturn result;\r\n\t},\r\n\t\r\n\tgetSubmittingSelected: function(range, detailRange) {\r\n\t\tif(!range && range !== jslet.data.RecordRange.ALL) {\r\n\t\t\trange = jslet.data.RecordRange.SELECTED;\r\n\t\t}\r\n\t\tvar chgRecList = this._getRecords(this._dataset, range);\r\n\t\tvar result = this._convert(this._dataset, chgRecList, detailRange);\r\n\t\treturn result;\r\n\t},\r\n\t\r\n\t_getRecords: function(dsObj, range) {\r\n\t\tvar result = null;\r\n\t\tswitch(range) {\r\n\t\tcase jslet.data.RecordRange.ALL:\r\n\t\t\tresult = dsObj.records();\r\n\t\t\tbreak;\r\n\t\tcase jslet.data.RecordRange.SELECTED:\r\n\t\t\tresult = dsObj.selectedRecords();\r\n\t\t\tbreak;\r\n\t\tcase jslet.data.RecordRange.CURRENT:\r\n\t\t\tresult = [dsObj.getRecord()];\r\n\t\t\tbreak;\r\n\t\tcase jslet.data.RecordRange.CHANGED:\r\n\t\t\tresult =  dsObj._changeLog.changedRecords();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\t\r\n\t_convertRecord: function(dsObj, chgRec, detailRange, recInfo, recClazz) {\r\n\t\tvar fldObj, newRec = {}, detailLog;\r\n\t\tfor(var fldName in chgRec) {\r\n\t\t\tif(fldName === '_jl_') {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tfldObj = dsObj.getField(fldName);\r\n\t\t\tif(!fldObj || fldObj.getType() !== jslet.data.DataType.DATASET) {\r\n\t\t\t\tnewRec[fldName] = chgRec[fldName];\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tdetailLog = recInfo.detailLog;\r\n\t\t\tvar dsDetail = fldObj.detailDataset(),\r\n\t\t\t\tselStateFld = dsDetail.selectField() || jslet.global.selectStateField,\r\n\t\t\t\tdtlRange = detailRange;\r\n\t\t\tif(jslet.isObject(detailRange)) {\r\n\t\t\t\tdtlRange = detailRange[dsDetail.name()];\r\n\t\t\t}\r\n\t\t\tvar allSubList = [], i, len,\r\n\t\t\t\tdtlRecs = chgRec[fldName], dtlRec;\r\n\t\t\tif(dtlRange === jslet.data.RecordRange.ALL) { //add deleted record\r\n\t\t\t\tif(dtlRecs) {\r\n\t\t\t\t\tfor(i = 0, len = dtlRecs.length; i < len; i++) {\r\n\t\t\t\t\t\tdtlRec = dtlRecs[i];\r\n\t\t\t\t\t\tallSubList.push(dtlRec);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tdetailLog = detailLog? detailLog[fldName]: null;\r\n\t\t\t\tif(detailLog) {\r\n\t\t\t\t\tfor(i = 0, len = detailLog.length; i < len; i++) {\r\n\t\t\t\t\t\tvar subChgRec = detailLog[i]; \r\n\t\t\t\t\t\tvar subRecInfo = jslet.data.getRecInfo(subChgRec);\r\n\t\t\t\t\t\tif(subRecInfo && subRecInfo.status === jslet.data.DataSetStatus.DELETE) {\r\n\t\t\t\t\t\t\tallSubList.push(subChgRec);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if(dtlRange === jslet.data.RecordRange.CHANGED) {\r\n\t\t\t\tallSubList = detailLog? detailLog[fldName]: null;\r\n\t\t\t} else if(dtlRange === jslet.data.RecordRange.SELECTED) {\r\n\t\t\t\tif(dtlRecs) {\r\n\t\t\t\t\tfor(i = 0, len = dtlRecs.length; i < len; i++) {\r\n\t\t\t\t\t\tdtlRec = dtlRecs[i];\r\n\t\t\t\t\t\tif(dtlRec[selStateFld]) {\r\n\t\t\t\t\t\t\tallSubList.push(dtlRec);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tallSubList = this._convert(dsDetail, allSubList);\r\n\t\t\tif(allSubList) {\r\n\t\t\t\tnewRec[fldName] = allSubList;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn newRec;\r\n\t},\r\n\t\r\n\t_convert: function(dsObj, chgRecList, detailRange) {\r\n\t\tif(!detailRange) {\r\n\t\t\tdetailRange = jslet.data.RecordRange.ALL;\r\n\t\t}\r\n\t\t\r\n\t\tif(!chgRecList || chgRecList.length === 0) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar chgRec, recInfo, status, newRec,\r\n\t\t\trecClazz = dsObj._recordClass || jslet.global.defaultRecordClass,\r\n\t\t\tresult = [],\r\n\t\t\tdetailLog,\r\n\t\t\tselStateFld = dsObj.selectField() || jslet.global.selectStateField;\r\n\t\tfor(var i = 0, len = chgRecList.length; i < len; i++) {\r\n\t\t\tchgRec = chgRecList[i];\r\n\t\t\trecInfo = jslet.data.getRecInfo(chgRec);\r\n\t\t\tchgRec[jslet.global.changeStateField] = this._getStatusPrefix(recInfo.status, chgRec[selStateFld]) + Math.round(Math.random()*10000);\r\n\t\t\tvar newRec = this._convertRecord(dsObj, chgRec, detailRange, recInfo, recClazz);\r\n\t\t\tresult.push(newRec);\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\t\r\n\t_getStatusPrefix: function(status, selected) {\r\n\t\treturn  status === jslet.data.DataSetStatus.INSERT ? 'i' : \r\n\t\t\t(status === jslet.data.DataSetStatus.UPDATE? 'u':\r\n\t\t\t status === jslet.data.DataSetStatus.DELETE? 'd': (selected? 's': ''));\r\n\t},\r\n\t\t\t\r\n\trefreshSubmittedData: function(submittedData) {\r\n\t\tif(!submittedData || submittedData.length === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._refreshDataset(this._dataset, submittedData);\r\n\t},\r\n\t\r\n\t_refreshDataset: function(dsObj, submittedData, isDetailDataset) {\r\n\t\tif(!submittedData || submittedData.length === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar masterFldObj = dsObj.getMasterFieldObject(),\r\n\t\t\tchgLogs = dsObj._changeLog.changedRecords(),\r\n\t\t\tnewRec, oldRec, flag;\r\n\t\tfor(var i = 0, len = submittedData.length; i < len; i++) {\r\n\t\t\tnewRec = submittedData[i];\r\n\t\t\tif(!newRec) {\r\n\t\t\t\t//'The return record exists null. Please check it.'\r\n\t\t\t\tconsole.warn(jsletlocale.Dataset.serverReturnNullRecord);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tthis._refreshRecord(dsObj, newRec, chgLogs);\r\n\t\t}\r\n\t},\r\n\t\t\r\n\t_refreshRecord: function(dsObj, newRec, chgLogs) {\r\n\t\tvar recState = newRec[jslet.global.changeStateField];\r\n\t\tif(!recState) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar i, len;\r\n\t\tif(chgLogs && recState.charAt(0) == 'd') {\r\n\t\t\tfor(i = 0, len = chgLogs.length; i < len; i++) {\r\n\t\t\t\tif(recState == chgLogs[i][jslet.global.changeStateField]) {\r\n\t\t\t\t\tchgLogs.splice(i, 1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar oldRec, fldObj,\r\n\t\t\trecords = dsObj.records() || [];\r\n\t\tfor(i = records.length - 1; i >= 0; i--) {\r\n\t\t\toldRec = records[i];\r\n\t\t\tif(oldRec[jslet.global.changeStateField] != recState) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tfor(var fldName in newRec) {\r\n\t\t\t\tif(!fldName) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tfldObj = dsObj.getField(fldName);\r\n\t\t\t\tif(fldObj && fldObj.detailDataset()) {\r\n\t\t\t\t\tthis._refreshDataset(fldObj.detailDataset(), newRec[fldName], true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\toldRec[fldName] = newRec[fldName];\r\n\t\t\t\t}\r\n\t\t\t} // end for fldName\r\n\t\t\tif(chgLogs) {\r\n\t\t\t\tfor(i = 0, len = chgLogs.length; i < len; i++) {\r\n\t\t\t\t\tif(recState == chgLogs[i][jslet.global.changeStateField]) {\r\n\t\t\t\t\t\tchgLogs.splice(i, 1);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\toldRec[jslet.global.changeStateField] = null;\r\n\t\t\tvar auditLog = oldRec[jslet.global.auditLogField];\r\n\t\t\tif(auditLog) {\r\n\t\t\t\tdelete oldRec[jslet.global.auditLogField];\r\n\t\t\t}\r\n\t\t\tvar recInfo = jslet.data.getRecInfo(oldRec);\r\n\t\t\tif(recInfo && recInfo.status) {\r\n\t\t\t\trecInfo.status = 0;\r\n\t\t\t}\r\n\t\t\tjslet.data.FieldValueCache.removeCache(oldRec);\r\n\t\t} // end for i\r\n\t}\r\n};\r\n\n/**\r\n * @class\r\n * \r\n * Dataset factory. Example:\r\n * \r\n *     @example\r\n *     var dsFactory = new jslet.data.DatasetFactory();\r\n *     dsFactory.createDataset(''); \r\n */\r\njslet.data.DatasetFactory = function() {\r\n\t\r\n\tthis._maxCreatingLevels = {};\r\n\t\r\n\tthis._creatingDatasets = [];\r\n\t\r\n\tthis._metaStores = [];\r\n\t\r\n\tthis._doDatasetCreatedDebounce = jslet.debounce(this._doDatasetCreated, 100);\r\n}\r\n\r\njslet.data.DatasetFactory.prototype = {\r\n\t\r\n\t/**\r\n\t * Add a dataset meta store object. Example:\r\n\t * \r\n\t *     @example\r\n\t *     \r\n\t *     //Array meta store\r\n\t *     var datasetMetas = [{name: 'ds1', fields:[{name: 'field1', dataType: 'S', length: 20}, ...]}, ...];\r\n\t *     var arrayMetaStore = {\r\n\t *          getDatasetMeta: function(datasetName) {\r\n\t *              var dsMeta;\r\n\t *              for(var i = 0, len = datasetMetas.length; i++) {\r\n\t *                  dsMeta = datasetMetas[i];\r\n\t *                  if(dsMeta.name === datasetName) {\r\n\t *                      return dsMeta\r\n\t *                  }\r\n\t *              }\r\n\t *              return null;\r\n\t *          }\r\n\t *     }\r\n\t *     jslet.data.datasetFactory.addMetaStore(arrayMetaStore);\r\n\t *     \r\n\t *     //IndexedDB meta store\r\n\t *     var indexedDBMetaStore = new jslet.data.IndexedDBMetaStore('demo');\r\n\t *     jslet.data.datasetFactory.addMetaStore(indexedDBMetaStore);\r\n\t *     \r\n\t * @param {jslet.data.DatasetMetaStore} metaStore A meta store object.\r\n\t * \r\n\t * @return {this}\r\n\t */\r\n\taddMetaStore: function(metaStore) {\r\n\t\tjslet.Checker.test('DatasetFactory.addMetaStore', metaStore).required();\r\n\t\tjslet.Checker.test('DatasetMetaStore.getDatasetMeta', metaStore.getDatasetMeta).required().isFunction();\r\n\t\tthis._metaStores.push(metaStore);\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Create dataset with dataset configuration which is stored in other place, like DB, IndexedDB.<br />\r\n\t * It will fire global event: {@link jslet.global.dataset#onDatasetCreating}, you can listen this event, load dataset configuration and create it.<br />\r\n\t * This method will not return dataset object. You can call {@link jslet.data#getDataset} to get the dataset object. \r\n\t * \r\n\t * @fires onDatasetCreating \r\n\t * \r\n\t * @param {String | String[]} datasetNames Dataset name;\r\n\t * @param {Object} creatingOption Creating option, pattern:\r\n\t * {maxCreatingLevel: x, includeFields: ['fieldName1','fieldName2',...], excludeFields: ['fieldName8',...], onlyLookupFields: true|false}\r\n\t * @param {Integer} creatingOption.maxCreatingLevel Specified the max creating level when creating dataset nested(host dataset -> lookup dataset -> lookup dataset-> ...). \r\n\t * @param {String[]} creatingOption.includeFields Only create dataset with the specified field names.\r\n\t * @param {String[]} creatingOption.excludeFields Create dataset without the specified field names.\r\n\t * @param {String[]} creatingOption.visibleFields Visible field names.\r\n\t * @param {Boolean} creatingOption.onlyLookupFields If onlyLookupFields is true, it will create dataset with fields which specified by the following dataset's properties: keyField, codeField, nameField, parentField and statusField;\r\n\t * @param {jslet.data.DatasetType} creatingOption.datasetType The optional values are:  jslet.data.DatasetType.NORMAL, jslet.data.DatasetType.LOOKUP, jslet.data.DatasetType.DETAIL;\r\n\t * @param {String} creatingOption.realDatasetName Dataset creator uses \"realDatasetName\" to load dataset records.\r\n\t * @param {String} creatingOption.hostDatasetName Host dataset name.\r\n\t */\r\n\tcreateDataset: function(datasetNames, creatingOption) {\r\n\t\tvar Z = this;\r\n\t\tif(!Z._metaStores || Z._metaStores.length === 0) {\r\n\t\t\tthrow new Error(jsletlocale.DatasetFactory.datasetMetaStoreRequired);\r\n\t\t}\r\n\t\tjslet.Checker.test('createDataset#datasetNames', datasetNames).required();\r\n\t\tvar deferred = jQuery.Deferred();\r\n\t\tfunction beforeCreateOneDataset(dsName, creatingOption) {\r\n\t\t\tvar dsObj = jslet.data.getDataset(dsName);\r\n\t\t\tif(dsObj) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tconsole.log('Creating dataset: ' + dsName)\r\n\t\t\tvar dsType = null, hostDsName = null;\r\n\t\t\tif(creatingOption) {\r\n\t\t\t\tvar hostDsName = creatingOption.hostDatasetName;\r\n\t\t\t\tif(hostDsName && !Z._canCreatingDataset(hostDsName)) {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t\tif(creatingOption.maxCreatingLevel) {\r\n\t\t\t\t\tZ._maxCreatingLevels[dsName] = creatingOption.maxCreatingLevel;\r\n\t\t\t\t}\r\n\t\t\t\tdsType = creatingOption.datasetType;\r\n\t\t\t\thostDsName = creatingOption.hostDatasetName;\r\n\t\t\t}\r\n\t\t\tvar isLookup = dsType && dsType === jslet.data.DatasetType.LOOKUP;\r\n\t\t\tZ._startCreateDataset(dsName, hostDsName, isLookup);\r\n\t\t\treturn dsName;\r\n\t\t};\r\n\t\t\r\n\t\tfunction doCreate(dsName, creatingOption, metaStoreIndex) {\r\n\t\t\tvar metaStoreIndex = metaStoreIndex || 0;\r\n\t\t\tif(metaStoreIndex > Z._metaStores.length - 1) {\r\n\t\t\t\tZ._innerCreateDataset(dsName, null, null, deferred);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar metaStore = Z._metaStores[metaStoreIndex];\r\n\t\t\tvar realDsName = dsName;\r\n\t\t\tif(creatingOption && creatingOption.realDatasetName) {\r\n\t\t\t\trealDsName = creatingOption.realDatasetName;\r\n\t\t\t}\r\n\t\t\tvar result = metaStore.getDatasetMeta(dsName);\r\n\t\t\tif(result && result.done) { //return promise;\r\n\t\t\t\tresult.done(function(dsMeta) {\r\n\t\t\t\t\tif(dsMeta) {\r\n\t\t\t\t\t\tZ._innerCreateDataset(dsName, dsMeta, creatingOption, deferred);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdoCreate(dsName, creatingOption, metaStoreIndex + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}).fail(function() {\r\n\t\t\t\t\t\tdoCreate(dsName, creatingOption, metaStoreIndex + 1);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tif(result) {\r\n\t\t\t\t\tZ._innerCreateDataset(dsName, result, creatingOption, deferred);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdoCreate(dsName, creatingOption, metaStoreIndex + 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tvar dsName;\r\n\t\tif(jslet.isArray(datasetNames)) {\r\n\t\t\tvar arrNames = [], i,\r\n\t\t\t\tlen = datasetNames.length;\r\n\t\t\tfor(i = 0; i < len; i++) {\r\n\t\t\t\tdsName = datasetNames[i];\r\n\t\t\t\tdsName = Z._beforeCreateOneDataset(dsName, creatingOption);\r\n\t\t\t\tif(dsName) {\r\n\t\t\t\t\tarrNames.push(dsName);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlen = arrNames.length;\r\n\t\t\tfor(i = 0; i < len; i++) {\r\n\t\t\t\tdoCreate(arrNames[i], creatingOption);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif(beforeCreateOneDataset(datasetNames, creatingOption)) {\r\n\t\t\t\tdoCreate(datasetNames, creatingOption);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn deferred.promise();\r\n\t},\r\n\r\n\t_innerCreateDataset: function(dsName, dsMeta, creatingOption, deferred) {\r\n\t\tif(!dsMeta) {\r\n\t\t\tthrow new Error(jslet.formatMessage(jsletlocale.DatasetFactory.metaNotFound, [dsName]));\r\n\t\t}\r\n\t\tif(!dsMeta.isEnum && creatingOption && creatingOption.datasetType === jslet.data.DatasetType.LOOKUP) {\r\n\t\t\tdsMeta = jQuery.extend({}, dsMeta);\r\n\t\t\tthis._filterOutLookupFields(dsMeta, creatingOption);\r\n\t\t}\r\n\r\n\t\tdsMeta.createdByFactory = true;\r\n\t\tvar dsObj = new jslet.data.Dataset(dsMeta);\r\n\t\t\r\n\t\t//Create dataset query criteria dataset\r\n\t\tif(dsMeta.criteriaFields) {\r\n\t\t\tvar queryMeta = {name: dsName + '_criteria', fields: dsMeta.criteriaFields};\r\n\t\t\tnew jslet.data.Dataset(queryMeta);\r\n\t\t}\r\n\t\tthis._doDatasetCreatedDebounce.call(this, deferred);\r\n\t},\r\n\t\r\n\t_filterOutLookupFields: function(dsMeta, creatingOption) {\r\n\t\tvar\tonlyLookupFields = creatingOption.onlyLookupFields? true: false,\r\n\t\t\tincludeFields = creatingOption.includeFields,\r\n\t\t\texcludeFields = creatingOption.excludeFields,\r\n\t\t\tvisibleFields = creatingOption.visibleFields;\r\n\t\tvar enableFields = {}, filtered = false, \r\n\t\t\tcodeField = dsMeta.codeField,\r\n\t\t\tnameField = dsMeta.nameField;\r\n\t\tif(creatingOption.onlyLookupFields) {\r\n\t\t\tfiltered = true;\r\n\t\t\tif(dsMeta.keyField) {\r\n\t\t\t\tenableFields[dsMeta.keyField] = true;\r\n\t\t\t}\r\n\t\t\tif(codeField) {\r\n\t\t\t\tenableFields[codeField] = true;\r\n\t\t\t}\r\n\t\t\tif(nameField) {\r\n\t\t\t\tenableFields[nameField] = true;\r\n\t\t\t}\r\n\t\t\tif(dsMeta.parentField) {\r\n\t\t\t\tenableFields[dsMeta.parentField] = true;\r\n\t\t\t}\r\n\t\t\tif(dsMeta.statusField) {\r\n\t\t\t\tenableFields[dsMeta.statusField] = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar i, len, fldName;\r\n\t\tif(includeFields) {\r\n\t\t\tfiltered = true;\r\n\t\t\tfor(i = 0, len = includeFields.length; i < len; i++) {\r\n\t\t\t\tenableFields[includeFields[i]] = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(excludeFields) {\r\n\t\t\tfiltered = true;\r\n\t\t\tfor(i = 0, len = excludeFields.length; i < len; i++) {\r\n\t\t\t\tfldName = excludeFields[i];\r\n\t\t\t\tif(enableFields[fldName]) {\r\n\t\t\t\t\tenableFields[fldName] = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar fields = dsMeta.fields, fldCfg,\r\n\t\t\tfilteredFields = [];\r\n\t\t\r\n\t\tfor(i = 0, len = fields.length; i < len; i++) {\r\n\t\t\tfldCfg = fields[i];\r\n\t\t\tfldName = fldCfg.name;\r\n\t\t\tif(!filtered || filtered && enableFields[fldName]) {\r\n\t\t\t\tfldCfg = jQuery.extend({}, fldCfg);\r\n\t\t\t\tfilteredFields.push(fldCfg);\r\n\t\t\t\tif(visibleFields && visibleFields.indexOf(fldName) >= 0) {\r\n\t\t\t\t\tfldCfg.visible = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfldCfg.visible = (fldName == codeField || fldName == nameField);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tdsMeta.fields = filteredFields;\r\n\t},\r\n\t\t\r\n\t_startCreateDataset: function(dsName, hostDsName, isLookup) {\r\n\t\tvar hostDsCfg;\r\n\t\tif(hostDsName) {\r\n\t\t\thostDsCfg = this._getDsCfg(hostDsName);\r\n\t\t\tif(!hostDsCfg) {\r\n\t\t\t\thostDsCfg = {name: hostDsName, level: 0, relative: []};\r\n\t\t\t\tthis._creatingDatasets.push(hostDsCfg);\r\n\t\t\t}\r\n\t\t\tif(!this._getDsCfg(dsName)) {\r\n\t\t\t\tvar relative = hostDsCfg.relative;\r\n\t\t\t\tif(!relative) {\r\n\t\t\t\t\thostDsCfg.relative = [];\r\n\t\t\t\t\trelative = hostDsCfg.relative;\r\n\t\t\t\t}\r\n\t\t\t\trelative.push({name: dsName, level: (isLookup? hostDsCfg.level + 1: 0), parent: hostDsCfg});\r\n\t\t\t}\r\n\t\t\tconsole.debug(dsName + '->' + hostDsName);\r\n\t\t}\r\n\t},\r\n\t\r\n\t_canCreatingDataset: function(hostDsName) {\r\n\t\tvar hostDsCfg = this._getDsCfg(hostDsName);\r\n\t\tif(!hostDsCfg) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tvar dsCfg = hostDsCfg;\r\n\t\tvar maxLevel = 0;\r\n\t\twhile(true) {\r\n\t\t\tif(!dsCfg.parent) {\r\n\t\t\t\tmaxLevel = this._maxCreatingLevels[dsCfg.name];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tdsCfg = dsCfg.parent;\r\n\t\t}\r\n\t\tif(maxLevel && hostDsCfg.level === maxLevel) {\r\n\t\t\treturn false\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\t\r\n\t_checkAllCreated: function(hostDsCfg) {\r\n\t\tvar result = true, \r\n\t\t\tdsCfg, \r\n\t\t\trelative = hostDsCfg.relative;\r\n\t\t\r\n\t\tfor(var i = 0, len = relative.length; i < len; i++) {\r\n\t\t\tdsCfg = relative[i];\r\n\t\t\tif(!jslet.data.getDataset(dsCfg.name)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(dsCfg.relative) {\r\n\t\t\t\tresult = this._checkAllCreated(dsCfg);\r\n\t\t\t\tif(!result) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\t\r\n\t_getDsCfg: function(dsName, datasets) {\r\n\t\tif(!dsName) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar datasets, dsCfg;\r\n\t\tif(datasets === undefined) {\r\n\t\t\tdatasets = this._creatingDatasets;\r\n\t\t}\r\n\t\tfor(var i = 0, len = datasets.length; i < len; i++) {\r\n\t\t\tdsCfg = datasets[i];\r\n\t\t\tif(dsCfg.name == dsName) {\r\n\t\t\t\treturn dsCfg;\r\n\t\t\t}\r\n\t\t\tif(dsCfg.relative) {\r\n\t\t\t\tdsCfg = this._getDsCfg(dsName, dsCfg.relative);\r\n\t\t\t\tif(dsCfg) {\r\n\t\t\t\t\treturn dsCfg;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t},\r\n\t\r\n\t_doDatasetCreated: function(deferred) {\r\n\t\tvar datasets = this._creatingDatasets,\r\n\t\t\trootDsCfg, rootDsName,\r\n\t\t\tallCreated = true;\r\n\t\tfor(var i = datasets.length - 1; i >= 0; i--) {\r\n\t\t\trootDsCfg = datasets[i];\r\n\t\t\trootDsName = rootDsCfg.name;\r\n\t\t\tif(this._checkAllCreated(rootDsCfg)) {\r\n\t\t\t\tdatasets.splice(i, 1);\r\n\t\t\t\tdelete this._maxCreatingLevels[rootDsName];\r\n\t\t\t} else {\r\n\t\t\t\tallCreated = false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(allCreated) {\r\n\t\t\tdeferred.resolve();\r\n\t\t}\r\n\t}\r\n}\r\njslet.data.datasetFactory = new jslet.data.DatasetFactory();\r\n\r\n/**\r\n * @class\r\n * \r\n * This class is a interface for datase meta. Any class which exists 'getDatasetMeta' method can be as a datase meta store. <br />\r\n * Dataset meta store can be an object array, IndexedDB object or a query from server side. <br />  \r\n * we extremely suggest you store dataset meta to IndexedDB.\r\n */\r\njslet.data.DatasetMetaStore = {\r\n\t/**\r\n\t * This method will be called by jslet.data.DatasetFactory. Do not call it manually. <br />\r\n\t * This method uses to get dataset meta when creating dataset. <br />\r\n\t * It can be called asynchronously or synchronously. Example:\r\n\t * \r\n\t *     @example\r\n\t *     //synchronously\r\n\t *     function getDatasetMeta(dsName) {\r\n\t *          var defer = jQuery.Deferred();\r\n\t *          var getMetaUrl = ...;\r\n\t *          var settings = ...;\r\n\t *          jQuery.ajax(getMetaUrl, settings).done(function(datasetMeta, textStatus, jqXHR) {\r\n\t *          \tdefer.resolve(datasetMeta);\r\n\t *          })\r\n\t *          return defer.promise();\r\n\t *     }\r\n\t * \r\n\t *     //synchronously\r\n\t *     var datasetMetas = [{name: '',....}], dsMeta;\r\n\t *     function getDatasetMeta(dsName) {\r\n\t *          for(var i = 0, len = datasetMetas.length; i < len; i++) {\r\n\t *              dsMeta = datasetMetas[i];\r\n\t *              if(dsMeta.name == dsName) {\r\n\t *                  return dsMeta;\r\n\t *              }\r\n\t *          }\r\n\t *          return null;\r\n\t *     }\r\n\t *     \r\n\t * \t\t\r\n\t * @param {String} datasetName The creating dataset name.\r\n\t * \r\n\t * @return {Promise | Object} Dataset meta, see example to get more.\r\n\t */\r\n\tgetDatasetMeta: function(datasetName) {}\r\n}\n/**\r\n * @class\r\n * \r\n * Expression for calculating field value. It can used in formula field, finding data,\r\n * filtering data and context rule.\r\n * \r\n * Example:\r\n * \r\n *     @example\r\n *     var expr = new jslet.data.Expression(dsEmployee, '[salary] * 0.2');\r\n *     expr.eval(); \r\n */\r\njslet.data.Expression = function(dataset, expr) {\r\n\tjslet.Checker.test('jslet.data.Expression#dataset', dataset).required();\r\n\tjslet.Checker.test('jslet.data.Expression#expr', expr).required().isString();\r\n\tthis._fields = [];\r\n\tthis._otherDatasetFields = [];\r\n\tthis._expr = expr;\r\n\tthis._parsedExpr = '';\r\n\tif (typeof dataset == 'string') {\r\n\t\tthis._dataset = jslet.data.getDataset(dataset);\r\n\t\tif (!this._dataset) {\r\n\t\t\tthrow new Error(jslet.formatMessage(jsletlocale.Dataset.datasetNotFound, [dataset]));\r\n\t\t}\r\n\t}else{\r\n\t\tjslet.Checker.test('jslet.data.Expression#dataset', dataset).isClass(jslet.data.Dataset.className);\r\n\t\tthis._dataset = dataset;\r\n\t}\r\n\t\r\n\tthis.context = {mainds: dataset};\r\n\tthis.parse();\r\n};\r\n\r\njslet.data.Expression.prototype = {\r\n\t_ParserPattern: /\\[[_a-zA-Z][\\.!\\w]*(,\\d){0,1}]/gim,\r\n\t\r\n\tparse: function() {\r\n\t\t\r\n\t\tvar start = 0, end, k, \r\n\t\t\tdsName, fldName, \r\n\t\t\totherDs, stag, dsObj,\r\n\t\t\ttmpExpr = [], \r\n\t\t\tvalueIndex = null;\r\n\t\tthis._ParserPattern.lastIndex = 0;\r\n\t\twhile ((stag = this._ParserPattern.exec(this._expr)) !== null) {\r\n\t\t\tfldName = stag[0];\r\n\r\n\t\t\tif (!fldName || fldName.endsWith('(')) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tdsName = null;\r\n\t\t\tfldName = fldName.substr(1, fldName.length - 2);\r\n\t\t\tk = fldName.indexOf(',');\r\n\t\t\tif(k > 0) {\r\n\t\t\t\tvalueIndex = parseInt(fldName.substr(k + 1));\r\n\t\t\t\tif(isNaN(valueIndex)) {\r\n\t\t\t\t\tvalueIndex = null;\r\n\t\t\t\t}\r\n\t\t\t\tfldName = fldName.substr(0, k);\r\n\t\t\t}\r\n\t\t\tk = fldName.indexOf('!');\r\n\t\t\tif (k > 0) {\r\n\t\t\t\tdsName = fldName.substr(0, k);\r\n\t\t\t\tfldName = fldName.substr(k + 1);\r\n\t\t\t}\r\n\r\n\t\t\tend = stag.index;\r\n\t\t\tdsObj = this._dataset;\r\n\t\t\tif(dsName) {\r\n\t\t\t\totherDs = jslet.data.dataModule[dsName];\r\n\t\t\t\tif (!otherDs) {\r\n\t\t\t\t\tthrow new Error(jslet.formatMessage(jsletlocale.Dataset.datasetNotFound, [dsName]));\r\n\t\t\t\t}\r\n\t\t\t\tthis.context[dsName] = otherDs;\r\n\t\t\t\tdsObj = otherDs;\r\n\t\t\t}\r\n\r\n\t\t\tif (!dsName) {\r\n\t\t\t\ttmpExpr.push(this._expr.substring(start, end));\r\n\t\t\t\ttmpExpr.push('context.mainds.getFieldValueByRecord(context.dataRec, \"');\r\n\t\t\t\tthis._fields.push(fldName);\r\n\t\t\t} else {\r\n\t\t\t\ttmpExpr.push(this._expr.substring(start, end));\r\n\t\t\t\ttmpExpr.push('context.');\r\n\t\t\t\ttmpExpr.push(dsName);\r\n\t\t\t\ttmpExpr.push('.getFieldValue(\"');\r\n\t\t\t\tthis._otherDatasetFields.push({\r\n\t\t\t\t\t\t\tdataset : dsName,\r\n\t\t\t\t\t\t\tfieldName : fldName\r\n\t\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\ttmpExpr.push(fldName);\r\n\t\t\ttmpExpr.push('\"');\r\n\t\t\tif(valueIndex !== null) {\r\n\t\t\t\ttmpExpr.push(',');\r\n\t\t\t\ttmpExpr.push(valueIndex);\r\n\t\t\t}\r\n\t\t\ttmpExpr.push(')');\r\n\t\t\t\r\n\t\t\tstart = end + stag[0].length;\r\n\t\t}//end while\r\n\t\ttmpExpr.push(this._expr.substr(start));\r\n\t\tthis._parsedExpr = tmpExpr.join('');\r\n\t}, //end function\r\n\r\n\t/**\r\n\t * Get field names included in the expression.\r\n\t * \r\n\t * @return {String[]}\r\n\t */\r\n\tmainFields: function() {\r\n\t\treturn this._fields;\r\n\t},\r\n\r\n\t/**\r\n\t * Get fields of other dataset included in the expression.\r\n\t * Other dataset fields are identified with 'datasetName!fieldName', like: department!deptName\r\n\t * \r\n\t * @return {Object[]} the return value like:[{dataset : 'dsName', fieldName: 'fldName'}]\r\n\t */\r\n\totherDatasetFields: function() {\r\n\t\treturn this._otherDatasetFields;\r\n\t},\r\n\r\n\t/**\r\n\t * Evaluate the expression.\r\n\t * \r\n\t * @param {Object} dataRec Data record object, this argument is used in parsedExpr \r\n\t * @return {Object} The value of Expression.\r\n\t */\r\n\teval: function(dataRec) {\r\n\t\tvar context = this.context;\r\n\t\tcontext.mainds = this._dataset;\r\n\t\tcontext.dataRec = dataRec;\r\n\t\t//Customized functions for expression evaluation\r\n\t\tvar like = jslet.like;\r\n\t\tvar between = jslet.between;\r\n\t\tvar inlist = jslet.inlist;\r\n\t\tvar inArray = jslet.inArray;\r\n\t\tvar inchildren = function(fldName, parentValue, onlyDirectChild) {\r\n\t\t\treturn context.mainds.inChildren(fldName, parentValue, onlyDirectChild);\r\n\t\t};\r\n\t\tvar inChildren = inchildren;\r\n\t\tvar inchildrenandself = function(fldName, parentValue, onlyDirectChild) {\r\n\t\t\treturn context.mainds.inChildrenAndSelf(fldName, parentValue, onlyDirectChild);\r\n\t\t};\r\n\t\tvar inChildrenAndSelf = inchildrenandself;\r\n\t\t/* jshint ignore:start */\r\n\t\treturn eval(this._parsedExpr); //Don't use window.eval\r\n\t\t/* jshint ignore:end */\r\n\r\n\t},\r\n\t\r\n\tdestroy: function() {\r\n\t\tthis._dataset = null;\r\n\t\tthis._fields = null;\r\n\t\tthis._otherDatasetFields = [];\r\n\t\tthis._parsedExpr = null;\r\n\t\tthis._expr = null;\r\n\t\tthis.context = null;\r\n\t}\r\n\t\r\n};\r\n\r\n\n/**\r\n * @class\r\n * \r\n * Datase field class.\r\n * \r\n * @param {String} dsObj Field name.\r\n * @param {jslet.data.DataType} dataType Data type of field.\r\n */\r\njslet.data.Field = function (dsObj, fldCfg, parentFldObj) {\r\n\tvar Z = this;\r\n\tZ._dataset = null;\r\n\tZ._datasetName = null;\r\n\tZ._displayOrder = null;\r\n\tZ._tabIndex = null;\r\n\tZ._shortName = null;\r\n\t\r\n\tZ._proxyHostFieldName = null;\r\n\t\r\n\tZ._proxyFldObjs = null;\r\n\tZ._proxyFieldChanged = null;\r\n\tZ._currProxyFieldName = null;\r\n\t\r\n\tZ._length = 0;\r\n\tZ._scale = 0;\r\n\tZ._unique = false;\r\n\t\r\n\tZ._defaultExpr = null;\r\n\tZ._defaultValue = null;\r\n\tZ._label = null;\r\n\tZ._displayLabel = null;\r\n\tZ._tip = null;\r\n\tZ._displayWidth = 0;\r\n\tZ._editMask = null;\r\n\tZ._displayFormat = null;\r\n\tZ._dateFormat = null;\r\n\tZ._formula = null;\r\n\tZ._readOnly = false;\r\n\tZ._visible = true;\r\n\tZ._disabled = false;\r\n\tZ._unitConverted = false;\r\n\r\n\tZ._lookup = null;\r\n\t\r\n\tZ._displayControl = null;\r\n\tZ._editControl = null;\r\n\tZ._detailDataset = null;\r\n\tZ._urlExpr = null;\r\n\tZ._innerUrlExpr = null;\r\n\tZ._urlTarget = null;\r\n\tZ._valueStyle = jslet.data.FieldValueStyle.NORMAL; //0 - Normal, 1 - Between style value, 2 - Multiple value\r\n\tZ._valueCountLimit = 0;\r\n\tZ._valueCountRange = null;\r\n\tZ._required = false;\r\n\tZ._nullText = jsletlocale.Dataset.nullText;\r\n\tZ._dataRange= null;\r\n\tZ._regularExpr = null;\r\n\tZ._antiXss = true;\r\n\t\r\n\tZ._customValueAccessor = null;\r\n\tZ._customValueConverter = null;\r\n\tZ._customValidator = null;\r\n\tZ._validChars = null; //Array of characters\r\n\tZ._dateChar = null;\r\n\tZ._dateRegular = null;\r\n\tZ._parent = null; //parent field object\r\n\tZ._children = null; //child field object\r\n\tZ._trueValue = true;\r\n\tZ._falseValue = false;\r\n\tZ._trueText = null;\r\n\tZ._falseText = null;\r\n\tZ._mergeSame = false;\r\n\tZ._mergeSameBy = null;\r\n\tZ._fixedValue = null;\r\n\tZ._valueFollow = false;\r\n\tZ._trimBlank = true;\r\n\tZ._focused = false;\r\n\tZ._encrypted = null;\r\n\tZ._aggregated = false;\r\n\tZ._aggregatedBy = null;\r\n\tZ._extendHostName = null;\r\n\tZ._crossSource = null;\r\n\t\r\n\tZ._dataset = dsObj;\r\n\tZ._create(fldCfg, parentFldObj);\r\n};\r\n\r\njslet.data.Field.className = 'jslet.data.Field';\r\n\r\njslet.data.Field.prototype = {\r\n\tclassName: jslet.data.Field.className,\r\n\t\r\n\t_create: function (fldCfg, parentFldObj) {\r\n\t\tjslet.Checker.test('Field#fieldConfig', fldCfg).required().isObject();\r\n\t\tvar fldName = jslet.trim(fldCfg.name);\r\n\t\tif (!fldName) {\r\n\t\t\tthrow new Error(jslet.formatMessage(jsletlocale.Dataset.fieldNameRequired));\r\n\t\t}\r\n\t\t\r\n\t\tvar dtype = fldCfg.type || fldCfg.dataType;\r\n\t\tif (dtype === null || dtype === undefined) {\r\n\t\t\tdtype = jslet.data.DataType.STRING;\r\n\t\t} else {\r\n\t\t\tdtype = dtype.toUpperCase();\r\n\t\t\tif (dtype !== jslet.data.DataType.STRING && \r\n\t\t\t\t\tdtype !== jslet.data.DataType.NUMBER && \r\n\t\t\t\t\tdtype !== jslet.data.DataType.DATE && \r\n\t\t\t\t\tdtype !== jslet.data.DataType.BOOLEAN && \r\n\t\t\t\t\tdtype !== jslet.data.DataType.CROSS && \r\n\t\t\t\t\tdtype !== jslet.data.DataType.PROXY && \r\n\t\t\t\t\tdtype !== jslet.data.DataType.ACTION && \r\n\t\t\t\t\tdtype !== jslet.data.DataType.EDITACTION && \r\n\t\t\t\t\tdtype !== jslet.data.DataType.DATASET) {\r\n\t\t\t\tdtype = jslet.data.DataType.STRING;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tvar Z = this;\r\n\t\tZ._fieldName = fldName;\r\n\t\tZ._dataType = dtype;\r\n\t\tfunction setPropValue(propName) {\r\n\t\t\tvar propValue = fldCfg[propName];\r\n\t\t\tif (propValue !== undefined) {\r\n\t\t\t\tZ[propName](propValue);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tZ.parent(parentFldObj);\r\n\t\tif(parentFldObj) {\r\n\t\t\tvar children = parentFldObj.children();\r\n\t\t\tif(!children) {\r\n\t\t\t\tchildren = [];\r\n\t\t\t\tparentFldObj.children(children);\r\n\t\t\t}\r\n\t\t\tchildren.push(Z);\r\n\t\t}\r\n\t\t\r\n\t\tsetPropValue('tabIndex');\r\n\t\tsetPropValue('displayOrder');\r\n\t\tsetPropValue('label');\r\n\t\tsetPropValue('displayLabel');\r\n\t\tsetPropValue('shortName');\r\n\t\tsetPropValue('tip');\r\n\r\n\t\tif(dtype === jslet.data.DataType.PROXY) {\r\n\t\t\tjslet.Checker.test('Field.proxyHostFieldName', fldCfg.proxyHostFieldName).required().isString();\r\n\t\t\tjslet.Checker.test('Field.proxyFieldChanged', fldCfg.proxyFieldChanged).required().isFunction();\r\n\t\t\tsetPropValue('proxyHostFieldName');\r\n\t\t\tsetPropValue('proxyFieldChanged');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (dtype === jslet.data.DataType.DATASET){\r\n\t\t\tvar detailDs = fldCfg.detailDataset || fldCfg.subDataset;\r\n\t\t\tif (detailDs) {\r\n\t\t\t\tZ.detailDataset(detailDs);\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(jslet.formatMessage(jsletlocale.Dataset.invalidDatasetField, [fldName]));\r\n\t\t\t}\r\n\t\t\tZ.visible(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tsetPropValue('visible');\r\n\t\t\r\n\t\tif(dtype === jslet.data.DataType.EDITACTION) {\r\n\t\t\tZ._displayWidth = 3;\r\n\t\t\tZ._readOnly = true;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetPropValue('displayWidth');\r\n\t\tsetPropValue('fixedValue');\r\n\t\tif (dtype === jslet.data.DataType.ACTION){\r\n\t\t\tif (!fldCfg.fixedValue) {\r\n\t\t\t\tthrow new Error(jslet.formatMessage(jsletlocale.Dataset.invalidActionField, [fldName]));\r\n\t\t\t}\r\n\t\t\tZ._readOnly = true;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tsetPropValue('formula');\r\n\t\tsetPropValue('unique');\r\n\t\tsetPropValue('required');\r\n\t\tsetPropValue('readOnly');\r\n\t\tsetPropValue('disabled');\r\n\t\tsetPropValue('length');\r\n\t\tsetPropValue('scale');\r\n\t\tsetPropValue('alignment');\r\n\t\tsetPropValue('defaultExpr');\r\n\t\tsetPropValue('defaultValue');\r\n\t\tsetPropValue('editMask');\r\n\t\tsetPropValue('displayFormat');\r\n\t\tsetPropValue('nullText');\r\n\t\tsetPropValue('unitConverted');\r\n\t\tsetPropValue('editControl');\r\n\t\tsetPropValue('urlExpr');\r\n\t\tsetPropValue('urlTarget');\r\n\t\tsetPropValue('valueStyle');\r\n\t\t\r\n\t\tsetPropValue('valueCountLimit');\r\n\t\tsetPropValue('valueCountRange');\r\n\t\tsetPropValue('dataRange');\r\n\t\tsetPropValue('customValidator');\r\n\t\tsetPropValue('customValueConverter');\r\n\t\tsetPropValue('customValueAccessor');\r\n\t\t\r\n\t\tsetPropValue('trueValue');\r\n\t\tsetPropValue('falseValue');\r\n\t\tsetPropValue('mergeSame');\r\n\t\tsetPropValue('mergeSameBy');\r\n\t\tif(fldCfg.aggraded) {\r\n\t\t\tsetPropValue('aggraded');\r\n\t\t} else {\r\n\t\t\tsetPropValue('aggregated');\r\n\t\t}\r\n\t\tif(fldCfg.aggradedBy) {\r\n\t\t\tsetPropValue('aggradedBy');\r\n\t\t} else {\r\n\t\t\tsetPropValue('aggregatedBy');\r\n\t\t}\r\n\r\n\t\tsetPropValue('valueFollow');\r\n\t\tsetPropValue('trimBlank');\r\n\t\t\r\n\t\tsetPropValue('focused');\r\n\t\tsetPropValue('encrypted');\r\n\t\t\r\n\t\tsetPropValue('antiXss');\r\n\t\tsetPropValue('validChars');\r\n\t\t\r\n\t\tsetPropValue('trueValue');\r\n\t\tsetPropValue('falseValue');\r\n\t\tsetPropValue('trueText');\r\n\t\tsetPropValue('falseText');\r\n\r\n\t\tvar regularExpr = fldCfg.regularExpr;\r\n\t\tvar regularMessage = fldCfg.regularMessage;\r\n\t\tif(regularExpr) {\r\n\t\t\tZ.regularExpr(regularExpr, regularMessage);\r\n\t\t}\r\n\t\t\r\n\t\tvar lkfCfg = fldCfg.lookup;\r\n\t\tif(lkfCfg === undefined) {\r\n\t\t\tvar lkDataset = fldCfg.lookupSource || fldCfg.lookupDataset,\r\n\t\t\t\tlkParam = fldCfg.lookupParam,\r\n\t\t\t\trealDataset = fldCfg.realSource || fldCfg.realDataset;\r\n\t\t\tif(lkDataset) {\r\n\t\t\t\tif(lkParam) {\r\n\t\t\t\t\tif (jslet.isString(lkParam)) {\r\n\t\t\t\t\t\tlkfCfg = jslet.JSON.parse(lkParam);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlkfCfg = lkParam;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlkfCfg = {};\r\n\t\t\t\t}\r\n\t\t\t\tlkfCfg.dataset = lkDataset;\r\n\t\t\t\tif(realDataset) {\r\n\t\t\t\t\tlkfCfg.realDataset = realDataset;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (lkfCfg !== undefined && lkfCfg) {\r\n\t\t\tZ.lookup(lkfCfg);\r\n\t\t}\r\n\t\tif (fldCfg.children){\r\n\t\t\tvar\tchildFldObj, childFldCfg;\r\n\t\t\tfor(var i = 0, cnt = fldCfg.children.length; i < cnt; i++){\r\n\t\t\t\tchildFldCfg = fldCfg.children[i];\r\n\t\t\t\tchildFldObj = new jslet.data.Field(Z._dataset, childFldCfg, Z);\r\n\t\t\t\tif(childFldCfg.displayOrder === undefined) {\r\n\t\t\t\t\tchildFldObj.displayOrder(i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tZ.alignment('center');\r\n\t\t}\t\r\n\t},\r\n\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get dataset. Don't set dataset property manually.\r\n\t * \r\n\t *     @example\r\n\t *     fldObj.dataset('test'); //Set property, return this.\r\n\t *     var propValue = dsObj.dataset(); //Get property value.\r\n\t * \r\n\t * @param {jslet.data.Dataset | undefined} dataset Dataset object.\r\n\t * \r\n\t * @return {this | jslet.data.Dataset}\r\n\t */\r\n\tdataset: function (dataset) {\r\n\t\tvar Z = this;\r\n\t\tif (dataset === undefined) {\r\n\t\t\tif(Z._parent && !Z._dataset) {\r\n\t\t\t\tZ.dataset(Z._parent.dataset());\r\n\t\t\t}\r\n\t\t\treturn Z._dataset;\r\n\t\t}\r\n\t\t\r\n\t\tif(jslet.isString(dataset)) {\r\n\t\t\tdataset = jslet.data.getDataset(dataset); \r\n\t\t} else {\r\n\t\t\tjslet.Checker.test('Field.dataset', dataset).isClass(jslet.data.Dataset.className);\r\n\t\t}\r\n\t\tif(dataset) {\r\n\t\t\tZ._datasetName = dataset.name();\r\n\t\t}\r\n\t\tZ._removeRelation();\r\n\t\tZ._dataset = dataset;\r\n\t\tZ._clearFieldCache();\r\n\t\tZ._addRelation();\r\n\t\tvar children = Z._children;\r\n\t\tif(children) {\r\n\t\t\tvar childFldObj;\r\n\t\t\tfor(var i = 0, len = children.length; i < len; i++) {\r\n\t\t\t\tchildFldObj = children[i];\r\n\t\t\t\tchildFldObj.dataset(Z._dataset);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Get field name.\r\n\t * \r\n\t * @return {String}\r\n\t */\r\n\tname: function () {\r\n\t\tif(arguments.length >0) {\r\n\t\t\tconsole.error(\"Can't change field name!\");\r\n\t\t}\r\n\t\treturn this._fieldName;\r\n\t},\r\n\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get field short name. <br />\r\n\t * Field short name is used to reduce field name length. It can reduce data size obviously. <br />\r\n\t * For example, suppose field name is 'department', short name is 'a', it will reduce 9 characters for one record, if querying 10000 records, it will reduce 90000 characters.\r\n\t * This will improve the whole performance. Example:  \r\n\t * \r\n\t *     @example\r\n\t *     fldObj.shortName('test'); //Set property, return this.\r\n\t *     var propValue = dsObj.shortName(); //Get property value.\r\n\t * \r\n\t * @param {String | undefined} shortName Field short name.\r\n\t * \r\n\t * @return {this | String}\r\n\t */\r\n\tshortName: function(shortName) {\r\n\t\tvar Z = this;\r\n\t\tif (shortName === undefined) {\r\n\t\t\treturn Z._shortName;\r\n\t\t}\r\n\t\tjslet.Checker.test('Field.shortName', shortName).isString();\r\n\t\tZ._shortName = shortName;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get field label, field label can be used to display, configure, export, import data. Example:  \r\n\t * \r\n\t *     @example\r\n\t *     fldObj.label('test'); //Set property, return this.\r\n\t *     var propValue = dsObj.label(); //Get property value.\r\n\t * \r\n\t * @param {String | undefined} label Field label.\r\n\t * @return {this | String}\r\n\t */\r\n\tlabel: function (label) {\r\n\t\tvar Z = this;\r\n\t\tif (label === undefined) {\r\n\t\t\tif(Z._dataType === jslet.data.DataType.EDITACTION) {\r\n\t\t\t\treturn '  ';\r\n\t\t\t}\r\n\t\t\treturn Z._label || Z._fieldName;\r\n\t\t}\r\n\t\tjslet.Checker.test('Field.label', label).isString();\r\n\t\tZ._label = label;\r\n\t\tZ._fireMetaChangedEvent('label');\r\n\t\tZ._fireGlobalMetaChangedEvent('label');\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get field display label, display label is only used to display data.\r\n\t * In some scenarios, display label can be different from field label.\r\n\t * \r\n\t *     @example\r\n\t *     fldObj.displayLabel('test'); //Set property, return this.\r\n\t *     var propValue = dsObj.displayLabel(); //Get property value.\r\n\t * \r\n\t * @param {String | undefined} displayLabel Field display label.\r\n\t * @return {this | String}\r\n\t */\r\n\tdisplayLabel: function (displayLabel) {\r\n\t\tvar Z = this;\r\n\t\tif (displayLabel === undefined) {\r\n\t\t\tif(Z._dataType === jslet.data.DataType.EDITACTION) {\r\n\t\t\t\treturn '  ';\r\n\t\t\t}\r\n\t\t\treturn Z._displayLabel || Z.label();\r\n\t\t}\r\n\t\tjslet.Checker.test('Field.displayLabel', displayLabel).isString();\r\n\t\tZ._displayLabel = displayLabel;\r\n\t\tZ._fireMetaChangedEvent('label');\r\n\t\tZ._fireGlobalMetaChangedEvent('label');\r\n\t\treturn this;\r\n\t},\r\n\r\n\tfullLabel: function(separator) {\r\n\t\tif(!this.parent()) {\r\n\t\t\treturn this.label();\r\n\t\t}\r\n\t\tif(separator === undefined) {\r\n\t\t\tseparator = '_';\r\n\t\t}\r\n\t\tvar labels = [this.label()];\r\n\t\tvar pFldObj = this.parent();\r\n\t\twhile(pFldObj) {\r\n\t\t\tlabels.push(pFldObj.label());\r\n\t\t\tpFldObj = pFldObj.parent();\r\n\t\t}\r\n\t\treturn labels.reverse().join(separator);\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get field tip.\r\n\t * \r\n\t *     @example\r\n\t *     fldObj.tip('test'); //Set property, return this.\r\n\t *     var propValue = dsObj.tip(); //Get property value.\r\n\t * \r\n\t * @param {String | undefined} tip Field tip.\r\n\t * @return {this | String}\r\n\t */\r\n\ttip: function(tip) {\r\n\t\tvar Z = this;\r\n\t\tif (tip === undefined) {\r\n\t\t\treturn Z._tip;\r\n\t\t}\r\n\t\tjslet.Checker.test('Field.tip', tip).isString();\r\n\t\tZ._tip = tip;\r\n\t\tZ._fireMetaChangedEvent('tip');\r\n\t\tZ._fireGlobalMetaChangedEvent('tip');\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Get field data type.\r\n\t * \r\n\t * @return {jslet.data.DataType} \r\n\t */\r\n\tgetType: function () {\r\n\t\tif(this._dataType == jslet.data.DataType.PROXY) {\r\n\t\t\tvar result = this._getProxyPropValue('dataType') || jslet.data.DataType.STRING;\r\n\t\t\tif(result === jslet.data.DataType.DATASET) {\r\n\t\t\t\treturn this._dataType;\r\n\t\t\t} else {\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._dataType;\r\n\t},\r\n\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get field data type.\r\n\t * \r\n\t *     @example\r\n\t *     fldObj.dataType('test'); //Set property, return this.\r\n\t *     var propValue = dsObj.dataType(); //Get property value.\r\n\t * \r\n\t * @param {String | undefined} dataType Field's data type.\r\n\t * \r\n\t * @return {this | String}\r\n\t */\r\n\tdataType: function(dataType) {\r\n\t\tif(dataType === undefined) {\r\n\t\t\treturn this._dataType;\r\n\t\t}\r\n\t\tjslet.Checker.test('Field#dataType', dataType).isString().required();\r\n\t\tvar dtype = dataType;\r\n\t\tif (dtype === null) {\r\n\t\t\tdtype = jslet.data.DataType.STRING;\r\n\t\t} else {\r\n\t\t\tdtype = dtype.toUpperCase();\r\n\t\t\tif (dtype != jslet.data.DataType.STRING && \r\n\t\t\t\t\tdtype != jslet.data.DataType.NUMBER && \r\n\t\t\t\t\tdtype != jslet.data.DataType.DATE && \r\n\t\t\t\t\tdtype != jslet.data.DataType.BOOLEAN && \r\n\t\t\t\t\tdtype != jslet.data.DataType.CROSS && \r\n\t\t\t\t\tdtype != jslet.data.DataType.PROXY && \r\n\t\t\t\t\tdtype != jslet.data.DataType.ACTION && \r\n\t\t\t\t\tdtype != jslet.data.DataType.EDITACTION && \r\n\t\t\t\t\tdtype != jslet.data.DataType.DATASET)\r\n\t\t\tdtype = jslet.data.DataType.STRING;\r\n\t\t}\r\n\t\tthis._dataType = dtype;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\tproxyHostFieldName: function(proxyHostFieldName) {\r\n\t\tvar Z = this;\r\n\t\tif(proxyHostFieldName === undefined) {\r\n\t\t\treturn Z._proxyHostFieldName;\r\n\t\t}\r\n\t\tZ._proxyHostFieldName = proxyHostFieldName;\r\n\t},\r\n\t\r\n\tproxyFieldChanged: function(proxyFieldChanged) {\r\n\t\tvar Z = this;\r\n\t\tif (proxyFieldChanged === undefined) {\r\n\t\t\treturn Z._proxyFieldChanged;\r\n\t\t}\r\n\t\tjslet.Checker.test('Field.proxyFieldChanged', proxyFieldChanged).required().isFunction();\r\n\t\tZ._proxyFieldChanged = proxyFieldChanged;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\tchangeProxyFieldName: function(dataRecord, isSilence) {\r\n\t\tvar Z = this,\r\n\t\t\tfldObj, proxyHostFldName, proxyFldName;\r\n\t\t\r\n\t\tproxyFldName = dataRecord[Z._proxyHostFieldName];\r\n\t\tif(!proxyFldName || Z._currProxyFieldName == proxyFldName) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(!Z._proxyFldObjs) {\r\n\t\t\tZ._proxyFldObjs = {};\r\n\t\t}\r\n\t\tvar oldProxyFldObj = Z._proxyFldObjs[Z._currProxyFieldName],\r\n\t\t\tnewProxyFldObj = Z._proxyFldObjs[proxyFldName];\r\n\t\t\r\n\t\tif(!newProxyFldObj) {\r\n\t\t\tnewProxyFldObj = new jslet.data.Field(Z._dataset, {name: proxyFldName, dataType: 'S'});\r\n\t\t\tZ._proxyFieldChanged.call(Z._dataset, dataRecord, proxyFldName, newProxyFldObj);\r\n\t\t\tZ._proxyFldObjs[proxyFldName] = newProxyFldObj;\r\n\t\t}\r\n\t\tZ._currProxyFieldName = proxyFldName;\r\n\t\tif(!isSilence) {\r\n\t\t\tZ._fireMetaChangedEvent('editControl');\r\n\t\t}\r\n\t},\r\n\t\r\n\t_getProxyPropValue: function(propName) {\r\n\t\tif(!this._proxyFldObjs) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar proxyFldObj = this._proxyFldObjs[this._currProxyFieldName];\r\n\t\tif(proxyFldObj) {\r\n\t\t\treturn proxyFldObj[propName]();\r\n\t\t}\r\n\t\treturn null;\r\n\t},\r\n\t\r\n\t_setProxyPropValue: function(propName, propValue) {\r\n\t\tif(!this._proxyFldObjs) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar proxyFldObj = this._proxyFldObjs[this._currProxyFieldName];\r\n\t\tif(proxyFldObj) {\r\n\t\t\tproxyFldObj[propName](propValue);\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get parent field object.\r\n\t * \r\n\t *     @example\r\n\t *     fldObj.parent(fldParent); //Set property, return this.\r\n\t *     var propValue = dsObj.parent(); //Get property value.\r\n\t * \r\n\t * @param {jslet.data.Field | undefined} parent Parent field object.\r\n\t * \r\n\t * @return {this | jslet.data.Field}\r\n\t */\r\n\tparent: function (parent) {\r\n\t\tvar Z = this;\r\n\t\tif (parent === undefined) {\r\n\t\t\treturn Z._parent;\r\n\t\t}\r\n\t\tjslet.Checker.test('Field.parent', parent).isClass(this.className);\r\n\t\tZ._parent = parent;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get child fields of this field.\r\n\t * \r\n\t *     @example\r\n\t *     fldObj.children([fldObj1, fldObj2]); //Set property, return this.\r\n\t *     var propValue = dsObj.children(); //Get property value.\r\n\t * \r\n\t * @param {jslet.data.Field[] | undefined} children Child field object.\r\n\t * \r\n\t * @return {this | jslet.data.Field[]}\r\n\t */\r\n\tchildren: function (children) {\r\n\t\tvar Z = this;\r\n\t\tif (children === undefined) {\r\n\t\t\treturn Z._children;\r\n\t\t}\r\n\t\tjslet.Checker.test('Field.children', children).isArray();\r\n\t\tfor(var i = 0, len = children.length; i < len; i++) {\r\n\t\t\tjslet.Checker.test('Field.children#childField', children[i]).isClass(this.className);\r\n\t\t}\r\n\t\tZ._children = children;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get field display order. <br />\r\n\t * Dataset uses this property to set field order.\r\n\t * \r\n\t *     @example\r\n\t *     fldObj.displayOrder(1); //Set property, return this.\r\n\t *     var propValue = dsObj.displayOrder(); //Get property value.\r\n\t * \r\n\t * @param {Integer | undefined} displayOrder Field display order.\r\n\t * \r\n\t * @return {this | Integer}\r\n\t */\r\n\tdisplayOrder: function (displayOrder) {\r\n\t\tvar Z = this;\r\n\t\tif (displayOrder === undefined) {\r\n\t\t\treturn Z._displayOrder;\r\n\t\t}\r\n\t\tjslet.Checker.test('Field.displayOrder', displayOrder).isNumber();\r\n\t\tZ._displayOrder = parseInt(displayOrder);\r\n\t\tZ._fireGlobalMetaChangedEvent('displayOrder');\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get the edit control tab index of this field.\r\n\t * \r\n\t *     @example\r\n\t *     fldObj.tabIndex(1); //Set property, return this.\r\n\t *     var propValue = dsObj.tabIndex(); //Get property value.\r\n\t * \r\n\t * @param {Integer | undefined} tabIndex Tab index of edit control linked this field.\r\n\t * \r\n\t * @return {this | Integer}\r\n\t */\r\n\ttabIndex: function(tabIndex) {\r\n\t\tvar Z = this;\r\n\t\tif (tabIndex === undefined) {\r\n\t\t\t//If not set tabIndex property, use displayOrder instead.\r\n//\t\t\tif(Z._tabIndex === null || Z._tabIndex === undefined) {\r\n//\t\t\t\treturn Z._displayOrder + 1;\r\n//\t\t\t}\r\n\t\t\treturn Z._tabIndex;\r\n\t\t}\r\n\t\tjslet.Checker.test('Field.tabIndex', tabIndex).isNumber();\r\n\t\ttabIndex = tabIndex? parseInt(tabIndex): null;\r\n\t\tZ._tabIndex = tabIndex !== NaN? tabIndex: null;\r\n\t\tZ._fireMetaChangedEvent('tabIndex');\r\n\t\tZ._fireGlobalMetaChangedEvent('tabIndex');\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get field stored length.<br />\r\n\t * \r\n\t *     @example\r\n\t *     fldObj.length(10); //Set property, return this.\r\n\t *     var propValue = dsObj.length(); //Get property value.\r\n\t * \r\n\t * @param {Integer | undefined} len Field stored length.\r\n\t * \r\n\t * @return {this | Integer}\r\n\t */\r\n\tlength: function (len) {\r\n\t\tvar Z = this;\r\n\t\tif (len === undefined) {\r\n\t\t\tif(Z._dataType == jslet.data.DataType.PROXY) {\r\n\t\t\t\treturn Z._getProxyPropValue('length') || 10;\r\n\t\t\t}\r\n\t\t\treturn Z._length || 10;\r\n\t\t}\r\n\t\tjslet.Checker.test('Field.length', len).isGTEZero();\r\n\t\tif(Z._dataType == jslet.data.DataType.PROXY) {\r\n\t\t\tZ._setProxyPropValue('length', parseInt(len));\r\n\t\t} else {\r\n\t\t\tZ._length = parseInt(len);\r\n\t\t}\r\n\t\tZ._fireGlobalMetaChangedEvent('length');\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Get edit length. Edit length is used in editor to input data.\r\n\t * \r\n\t * @return {Integer}\r\n\t */\r\n\tgetEditLength: function () {\r\n\t\tvar Z = this,\r\n\t\t\tlkObj = Z.lookup(),\r\n\t\t\tlen = Z.length();\r\n\t\tif (lkObj) {\r\n\t\t\tvar codeFld = lkObj.codeField(),\r\n\t\t\t\tnameFld = lkObj.nameField(),\r\n\t\t\t\tlkds = lkObj.dataset();\r\n\t\t\tif (lkds && codeFld) {\r\n\t\t\t\tvar lkf = lkds.getField(codeFld);\r\n\t\t\t\tif (lkf) {\r\n\t\t\t\t\tlen = lkf.getEditLength();\r\n\t\t\t\t}\r\n\t\t\t\tif(nameFld) {\r\n\t\t\t\t\tlkf = lkds.getField(nameFld);\r\n\t\t\t\t\tif(lkf) {\r\n\t\t\t\t\t\tlen = Math.max(len, lkf.getEditLength());\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn len;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(Z.getType() === jslet.data.DataType.NUMBER && Z.scale() > 0) {\r\n\t\t\treturn len + 1; // 1 for decimal point\r\n\t\t}\r\n\t\treturn len > 0 ? len : 10;\r\n\t},\r\n\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get field decimal length.\r\n\t * \r\n\t *     @example\r\n\t *     fldObj.scale(10); //Set property, return this.\r\n\t *     var propValue = dsObj.scale(); //Get property value.\r\n\t * \r\n\t * @param {Integer | undefined} scale Field decimal length.\r\n\t * \r\n\t * @return {this | Integer}\r\n\t */\r\n\tscale: function (scale) {\r\n\t\tvar Z = this;\r\n\t\tif (scale === undefined) {\r\n\t\t\tif(Z._dataType == jslet.data.DataType.PROXY) {\r\n\t\t\t\treturn Z._getProxyPropValue('scale') || 0;\r\n\t\t\t}\r\n\t\t\treturn Z._scale;\r\n\t\t}\r\n\t\tjslet.Checker.test('Field.scale', scale).isGTEZero();\r\n\t\tif(Z._dataType == jslet.data.DataType.PROXY) {\r\n\t\t\tZ._setProxyPropValue('scale', parseInt(scale));\r\n\t\t} else {\r\n\t\t\tZ._scale = parseInt(scale);\r\n\t\t}\r\n\t\tZ._fireGlobalMetaChangedEvent('scale');\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get field alignment. The optional values: left, center, right.\r\n\t * \r\n\t *     @example\r\n\t *     fldObj.alignment('left'); //Set property, return this.\r\n\t *     var propValue = dsObj.alignment(); //Get property value.\r\n\t * \r\n\t * @param {String | undefined} alignment Field alignment.\r\n\t * \r\n\t * @return {this | String}\r\n\t */\r\n\talignment: function (alignment) {\r\n\t\tvar Z = this;\r\n\t\tif (alignment === undefined){\r\n\t\t\tvar align = Z._alignment;\r\n\t\t\tif(Z._dataType == jslet.data.DataType.PROXY) {\r\n\t\t\t\talign = Z._getProxyPropValue('alignment');\r\n\t\t\t}\r\n\t\t\tif(align) {\r\n\t\t\t\treturn align;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(Z.lookup()) {\r\n\t\t\t\treturn 'left';\r\n\t\t\t}\r\n\t\t\tif(Z.getType() == jslet.data.DataType.NUMBER) {\r\n\t\t\t\treturn 'right';\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(Z.getType() == jslet.data.DataType.BOOLEAN) {\r\n\t\t\t\treturn 'center';\r\n\t\t\t}\r\n\t\t\treturn 'left';\r\n\t\t}\r\n\t\t\r\n\t\tjslet.Checker.test('Field.alignment', alignment).isString();\r\n\t\tif(Z._dataType == jslet.data.DataType.PROXY) {\r\n\t\t\tZ._setProxyPropValue('alignment', jslet.trim(alignment));\r\n\t\t} else {\r\n\t\t\tZ._alignment = jslet.trim(alignment);\r\n\t\t}\r\n\t\tZ._fireColumnUpdatedEvent();\r\n\t\tZ._fireGlobalMetaChangedEvent('alignment');\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get the display text if the field value is null.\r\n\t * \r\n\t *     @example\r\n\t *     fldObj.nullText('<Empty>'); //Set property, return this.\r\n\t *     var propValue = dsObj.nullText(); //Get property value.\r\n\t * \r\n\t * @param {String | undefined} nullText Field null text.\r\n\t * \r\n\t * @return {this | String}\r\n\t */\r\n\tnullText: function (nullText) {\r\n\t\tvar Z = this;\r\n\t\tif (nullText === undefined) {\r\n\t\t\treturn Z._nullText;\r\n\t\t}\r\n\t\tjslet.Checker.test('Field.nullText', nullText).isString();\r\n\t\tnullText = jslet.trim(nullText);\r\n\t\tZ._nullText = nullText;\r\n\t\tZ._clearFieldCache();\r\n\t\tZ._fireColumnUpdatedEvent();\r\n\t\tZ._fireGlobalMetaChangedEvent('nullText');\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get field display width.\r\n\t * Display width is usually used in DBTable column.\r\n\t * \r\n\t *     @example\r\n\t *     fldObj.displayWidth(10); //Set property, return this.\r\n\t *     var propValue = dsObj.displayWidth(); //Get property value.\r\n\t * \r\n\t * @param {Integer | undefined} displayWidth Field display width.\r\n\t * \r\n\t * @return {this | Integer}\r\n\t */\r\n\tdisplayWidth: function (displayWidth) {\r\n\t\tvar Z = this;\r\n\t\tif (displayWidth === undefined) {\r\n\t\t\tif (Z._displayWidth <= 0) {\r\n\t\t\t\treturn Z.length() || 12;\r\n\t\t\t} else {\r\n\t\t\t\treturn Z._displayWidth;\r\n\t\t\t}\r\n\t\t}\r\n\t\tjslet.Checker.test('Field.displayWidth', displayWidth).isGTEZero();\r\n\t\tZ._displayWidth = parseInt(displayWidth);\r\n\t\tZ._fireGlobalMetaChangedEvent('displayWidth');\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get field default expression.\r\n\t * This expression will be calculated when inserting a record.\r\n\t * \r\n\t *     @example\r\n\t *     fldObj.defaultExpr('20'); //Default value: 20.\r\n\t *     fldObj.defaultExpr('\"OK\"'); //Default value: 'OK'.\r\n\t *     var propValue = dsObj.defaultExpr(); //Get property value.\r\n\t * \r\n\t * @param {String | undefined} defaultExpr Field default expression.\r\n\t * \r\n\t * @return {this | String}\r\n\t */\r\n\tdefaultExpr: function (defaultExpr) {\r\n\t\tvar Z = this;\r\n\t\tif (defaultExpr === undefined) {\r\n\t\t\treturn Z._defaultExpr;\r\n\t\t}\r\n\t\tjslet.Checker.test('Field.defaultExpr', defaultExpr).isString();\r\n\t\tZ._defaultExpr = defaultExpr;\r\n\t\tZ._fireGlobalMetaChangedEvent('defaultExpr');\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get field display format:<br />\r\n\t * Number field placeholder: # - one number, 0 - one number(if not exists, 0 instread), like: #,##0.00, $#,##0.00;<br />\r\n\t * Date field placeholder: y - year, M - month, d - date, h - hour, m - minute, s - second, like: yyyy/MM/dd hh:mm:ss;<br />\r\n\t * String field: # - one character, ecapse: \\# like ###-###-###, \\###<br />\r\n\t * \r\n\t *     @example\r\n\t *     numFldObj.setValue(134589.8);\r\n\t *     numFldObj.displayFormat('$#,##0.00');\r\n\t *     numFldObj.getTextValue(); //return '$1,345,89.80'\r\n\t *     \r\n\t *     numFldObj.displayFormat('$#,##0.##');\r\n\t *     numFldObj.getTextValue(); //return '$1,345,89.8'\r\n\t *     \r\n\t *     dateFldObj.setValue(new Date(2015, 9, 1));\r\n\t *     dateFldObj.displayFormat('yyyy-MM-dd');\r\n\t *     dateFldObj.getTextValue(); //return '2015-10-01'\r\n\t *     \r\n\t *     strFldObj.setValue('08579');\r\n\t *     strFldObj.displayFormat('NO##-###');\r\n\t *     strFldObj.getTextValue(); //return 'NO08-579'\r\n\r\n\t *     var propValue = dsObj.displayFormat(); //Get property value.\r\n\t * \r\n\t * @param {String | undefined} format Field display format.\r\n\t * \r\n\t * @return {this | String}\r\n\t */\r\n\tdisplayFormat: function (format) {\r\n\t\tvar Z = this;\r\n\t\tif (format === undefined) {\r\n\t\t\tvar displayFmt = Z._displayFormat;\r\n\t\t\tif(Z._dataType == jslet.data.DataType.PROXY) {\r\n\t\t\t\tdisplayFmt = Z._getProxyPropValue('displayFormat');\r\n\t\t\t}\r\n\t\t\tif (displayFmt) {\r\n\t\t\t\treturn displayFmt;\r\n\t\t\t} else {\r\n\t\t\t\tif (Z.getType() == jslet.data.DataType.DATE) {\r\n\t\t\t\t\treturn jsletlocale.Date.format;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn displayFmt;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tjslet.Checker.test('Field.displayFormat', format).isString();\r\n\t\tif(Z._dataType == jslet.data.DataType.PROXY) {\r\n\t\t\tZ._setProxyPropValue('displayFormat', jslet.trim(format));\r\n\t\t} else {\r\n\t\t\tZ._displayFormat = jslet.trim(format);\r\n\t\t}\r\n\t\tZ._dateFormat = null;\r\n\t\tZ._dateChar = null;\r\n\t\tZ._dateRegular = null;\r\n\t\tZ._clearFieldCache();\t\t\r\n\t\tZ._fireColumnUpdatedEvent();\r\n\t\tZ._fireGlobalMetaChangedEvent('displayFormat');\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get field default value. <br />\r\n\t * The data type of default value must be same as Field data type. Example:\r\n\t * \r\n\t *     @example\r\n\t *     fldObj.defauleValue(100); //Number field \r\n\t *     fldObj.defaultValue(new Date()); //Date field\r\n\t *     fldObj.defaultValue('test'); //String field\r\n\t * \r\n\t * @param {Object | undefined} dftValue Field default value.\r\n\t * \r\n\t * @return {this | Object}\r\n\t */\r\n\tdefaultValue: function (dftValue) {\r\n\t\tvar Z = this;\r\n\t\tif (dftValue === undefined) {\r\n\t\t\treturn Z._defaultValue;\r\n\t\t}\r\n\t\tjslet.Checker.test('Field.defaultValue', Z.dftValue).isDataType(Z._dateType);\r\n\t\tZ._defaultValue = dftValue;\r\n\t\tZ._fireGlobalMetaChangedEvent('defaultValue');\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get field is unique or not.\r\n\t * \r\n\t *     @example\r\n\t *     fldObj.unique(true); //Set property, return this.\r\n\t *     var propValue = dsObj.unique(); //Get property value.\r\n\t * \r\n\t * @param {Boolean | undefined} unique Field is unique or not.\r\n\t * \r\n\t * @return {this | Boolean}\r\n\t */\r\n\tunique: function (unique) {\r\n\t\tvar Z = this;\r\n\t\tif (unique === undefined) {\r\n\t\t\treturn Z._unique;\r\n\t\t}\r\n\t\tZ._unique = unique ? true: false;\r\n\t\tZ._fireGlobalMetaChangedEvent('unique');\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get field is required or not.\r\n\t * \r\n\t *     @example\r\n\t *     fldObj.required(true); //Set property, return this.\r\n\t *     var propValue = dsObj.required(); //Get property value.\r\n\t * \r\n\t * @param {Boolean | undefined} required Field is required or not.\r\n\t * \r\n\t * @return {this | Boolean}\r\n\t */\r\n\trequired: function (required) {\r\n\t\tvar Z = this;\r\n\t\tif (required === undefined) {\r\n\t\t\treturn Z._required;\r\n\t\t}\r\n\t\tZ._required = required ? true: false;\r\n\t\tZ._fireMetaChangedEvent('required');\r\n\t\tZ._fireGlobalMetaChangedEvent('required');\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get field edit mask.\r\n\t * \r\n\t *     @example\r\n\t *     fldObj.editMask('CC-00-00'); //Set property, return this.\r\n\t *     \r\n\t *     fldObj.editMask({mask: 'CC-00-00', keepChar:false}); //Set property, return this.\r\n\t *     var propValue = dsObj.editMask(); //Get property value.\r\n\t * \r\n\t * @param {String | Object | undefined} mask Field edit mask.\r\n\t * \r\n\t * @return {this | Object}\r\n\t */\r\n\teditMask: function (mask) {\r\n\t\tvar Z = this;\r\n\t\tif (mask === undefined) {\r\n\t\t\tif(Z._dataType == jslet.data.DataType.PROXY) {\r\n\t\t\t\treturn Z._getProxyPropValue('editMask');\r\n\t\t\t}\r\n\t\t\treturn Z._editMask;\r\n\t\t}\r\n\t\tif(mask) {\r\n\t\t\tif (jslet.isString(mask)) {\r\n\t\t\t\tmask = {mask: mask,keepChar:false};\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tmask = null;\r\n\t\t}\r\n\t\tif(Z._dataType == jslet.data.DataType.PROXY) {\r\n\t\t\tZ._setProxyPropValue('editMask', mask);\r\n\t\t} else {\r\n\t\t\tZ._editMask = mask;\r\n\t\t}\r\n\t\tZ._clearFieldCache();\t\t\r\n\t\tZ._fireMetaChangedEvent('editMask');\r\n\t\tZ._fireGlobalMetaChangedEvent('required');\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\tdateFormat: function(){\r\n\t\tvar Z = this;\r\n\t\tif (Z._dateFormat) {\r\n\t\t\treturn Z._dateFormat;\r\n\t\t}\r\n\t\tif (this.getType() != jslet.data.DataType.DATE) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar displayFmt = this.displayFormat().toUpperCase();\r\n\t\tZ._dateFormat = '';\r\n\t\tvar c;\r\n\t\tfor(var i = 0, len = displayFmt.length; i < len; i++){\r\n\t\t\tc = displayFmt.charAt(i);\r\n\t\t\tif ('YMD'.indexOf(c) < 0) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (Z._dateFormat.indexOf(c) < 0) {\r\n\t\t\t\tZ._dateFormat += c;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn Z._dateFormat;\r\n\t},\r\n\t\r\n\tdateSeparator: function(){\r\n\t\tvar Z = this;\r\n\t\tif (Z._dateChar) {\r\n\t\t\treturn Z._dateChar;\r\n\t\t}\r\n\t\tif (this.getType() != jslet.data.DataType.DATE) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar displayFmt = this.displayFormat().toUpperCase();\r\n\t\tfor(var i = 0, c, len = displayFmt.length; i < len; i++){\r\n\t\t\tc = displayFmt.charAt(i);\r\n\t\t\tif ('YMD'.indexOf(c) < 0){\r\n\t\t\t\tZ._dateChar = c;\r\n\t\t\t\treturn c;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\tdateRegular: function(){\r\n\t\tvar Z = this;\r\n\t\tif (Z._dateRegular) {\r\n\t\t\treturn Z._dateRegular;\r\n\t\t}\r\n\t\tvar dateFmt = this.dateFormat(),\r\n\t\t\tdateSeparator = this.dateSeparator(),\r\n\t\t\tresult = ['^'];\r\n\t\tfor(var i = 0, c; i < dateFmt.length; i++){\r\n\t\t\tif (i > 0){\r\n\t\t\t\tresult.push('\\\\');\r\n\t\t\t\tresult.push(dateSeparator);\r\n\t\t\t}\r\n\t\t\tc = dateFmt.charAt(i);\r\n\t\t\tif (c == 'Y') {\r\n\t\t\t\tresult.push('(\\\\d{4}|\\\\d{2})');\r\n\t\t\t} else if (c == 'M'){\r\n\t\t\t\tresult.push('(0?[1-9]|1[012])');\r\n\t\t\t} else {\r\n\t\t\t\tresult.push('(0?[1-9]|[12][0-9]|3[01])');\r\n\t\t\t}\r\n\t\t}\r\n\t\tresult.push('(\\\\s+\\\\d{2}:\\\\d{2}:\\\\d{2}(\\\\.\\\\d{3}){0,1}){0,1}');\r\n\t\tresult.push('$');\r\n\t\tZ._dateRegular = {expr: new RegExp(result.join(''), 'gim'), message: jslet.formatMessage(jsletlocale.Dataset.invalidDate, [Z._displayFormat])};\r\n\t\t\r\n\t\treturn Z._dateRegular;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get field formula.<br />\r\n\t * Jslet formula is base on javascript expression, to get field value to use '[' + fieldName + ']'. \r\n\t * \r\n\t *     @example\r\n\t *     fldObj.formula('[price]*[num]'); //Set property, return this.\r\n\t *     fldObj.formula('[fld1] > 0 && [fld2] > 0'? [fld3]: [fld4]'); \r\n\t *     var propValue = dsObj.formula(); //Get property value.\r\n\t * \r\n\t * @param {String | undefined} formula Field formula.\r\n\t * \r\n\t * @return {this | String}\r\n\t */\r\n\tformula: function (formula) {\r\n\t\tvar Z = this;\r\n\t\tif (formula === undefined) {\r\n\t\t\treturn Z._formula;\r\n\t\t}\r\n\t\t\r\n\t\tjslet.Checker.test('Field.formula', formula).isString();\r\n\t\tZ._formula = jslet.trim(formula);\r\n\t\tZ._readOnly = true;\r\n\t\tZ._clearFieldCache();\r\n\t\tvar dataset = Z.dataset(); \r\n\t\tif (dataset) {\r\n\t\t\tdataset.removeInnerFormulaField(Z._fieldName);\r\n\t\t\tdataset.addInnerFormulaField(Z._fieldName, Z._formula);\t\t\r\n\t\t\tZ._fireColumnUpdatedEvent();\r\n\t\t}\r\n\t\tZ._fireGlobalMetaChangedEvent('formula');\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get field is visible or not.\r\n\t * \r\n\t *     @example\r\n\t *     fldObj.visible(true); //Set property, return this.\r\n\t *     var propValue = dsObj.visible(); //Get property value.\r\n\t * \r\n\t * @param {Boolean | undefined} visible Field is visible or not.\r\n\t * \r\n\t * @return {this | Boolean}\r\n\t */\r\n\tvisible: function (visible) {\r\n\t\tvar Z = this;\r\n\t\tif (visible === undefined){\r\n\t\t\tif (Z._visible){\r\n\t\t\t\tvar p = this.parent();\r\n\t\t\t\twhile(p){\r\n\t\t\t\t\tif (!p.visible()) { //if parent is invisible\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tp = p.parent();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn Z._visible;\r\n\t\t}\r\n\t\tZ._visible = visible ? true: false;\r\n\t\tZ._fireMetaChangedEvent('visible');\r\n\t\tZ._fireGlobalMetaChangedEvent('visible');\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get field is disabled or not.\r\n\t * \r\n\t *     @example\r\n\t *     fldObj.disabled(true); //Set property, return this.\r\n\t *     var propValue = dsObj.disabled(); //Get property value.\r\n\t * \r\n\t * @param {Boolean | undefined} disabled Field is disabled or not.\r\n\t * \r\n\t * @return {this | Boolean}\r\n\t */\r\n\tdisabled: function (disabled) {\r\n\t\tvar Z = this;\r\n\t\tif (disabled === undefined) {\r\n\t\t\tif(Z._formula || Z._dataType === jslet.data.DataType.DATASET || Z._children) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn Z._disabled;\r\n\t\t}\r\n\t\tZ._disabled = disabled ? true: false;\r\n\t\tZ._fireMetaChangedEvent('disabled');\r\n\t\tZ._fireGlobalMetaChangedEvent('disabled');\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get field is read only or not.\r\n\t * \r\n\t *     @example\r\n\t *     fldObj.readOnly(true); //Set property, return this.\r\n\t *     var propValue = dsObj.readOnly(); //Get property value.\r\n\t * \r\n\t * @param {Boolean | undefined} readOnly Field is readOnly or not.\r\n\t * \r\n\t * @return {this | Boolean}\r\n\t */\r\n\treadOnly: function (readOnly) {\r\n\t\tvar Z = this;\r\n\t\tif (readOnly === undefined){\r\n\t\t\tif (Z._dataType == jslet.data.DataType.DATASET) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tvar children = Z.children();\r\n\t\t\tif (children && children.length === 0) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\treturn Z._readOnly || Z._dataset.readOnly();\r\n\t\t}\r\n\t\t\r\n\t\tZ._readOnly = readOnly? true: false;\r\n\t\tZ._fireMetaChangedEvent('readOnly');\r\n\t\tZ._fireGlobalMetaChangedEvent('readOnly');\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\tfieldReadOnly: function() {\r\n\t\tvar Z = this;\r\n\t\tif (Z._dataType == jslet.data.DataType.DATASET) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tvar children = Z.children();\r\n\t\tif (children && children.length === 0) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn Z._readOnly;\r\n\t},\r\n\t\r\n\tfieldDisabled: function() {\r\n\t\tvar Z = this;\r\n\t\treturn this._disabled;\r\n\t},\r\n\t\r\n\t_fireGlobalMetaChangedEvent: function(metaName) {\r\n\t\tvar dsObj = this.dataset();\r\n\t\tif (dsObj && dsObj.designMode() && dsObj.isFireGlobalEvent()) {\r\n\t\t\tvar handler = jslet.data.globalDataHandler.fieldMetaChanged();\r\n\t\t\tif(handler) {\r\n\t\t\t\thandler.call(this, dsObj, this._fieldName, metaName);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\t_fireMetaChangedEvent: function(metaName) {\r\n\t\tvar ds = this.dataset();\r\n\t\tif (ds) {\r\n\t\t\tvar evt = jslet.data.RefreshEvent.changeMetaEvent(metaName, this._fieldName);\r\n\t\t\tds.refreshControl(evt);\r\n\t\t}\r\n\t},\r\n\t\r\n\t_fireColumnUpdatedEvent: function() {\r\n\t\tvar ds = this.dataset();\r\n\t\tif (ds) {\r\n\t\t\tvar evt = jslet.data.RefreshEvent.updateColumnEvent(this._fieldName);\r\n\t\t\tds.refreshControl(evt);\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get if field participates unit converting.\r\n\t * \r\n\t *     @example\r\n\t *     fldObj.unitConverted(true); //Set property, return this.\r\n\t *     var propValue = dsObj.unitConverted(); //Get property value.\r\n\t * \r\n\t * @param {Boolean | undefined} unitConverted.\r\n\t * \r\n\t * @return {this | Boolean}\r\n\t */\r\n\tunitConverted: function (unitConverted) {\r\n\t\tvar Z = this;\r\n\t\tif (unitConverted === undefined) {\r\n\t\t\treturn Z._dataType == jslet.data.DataType.NUMBER? Z._unitConverted:false;\r\n\t\t}\r\n\t\tZ._unitConverted = unitConverted ? true : false;\r\n\t\tvar ds = this.dataset();\r\n\t\tZ._clearFieldCache();\t\t\r\n\t\tif (Z._dataType == jslet.data.DataType.NUMBER && ds && ds.unitConvertFactor() != 1) {\r\n\t\t\tZ._fireColumnUpdatedEvent();\r\n\t\t}\r\n\t\tZ._fireGlobalMetaChangedEvent('unitConverted');\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get value style of this field. Optional value is come from {@link jslet.data.FieldValueStyle}. <br />\r\n\t * \r\n\t *     @example\r\n\t *     fldObj.valueStyle(jslet.data.FieldValueStyle.MULTIPLE); //Set property, return this.\r\n\t *     var propValue = dsObj.valueStyle(); //Get property value.\r\n\t * \r\n\t * @param {Integer | undefined} valueStyle.\r\n\t * \r\n\t * @return {this | Integer}\r\n\t */\r\n\tvalueStyle: function (valueStyle) {\r\n\t\tvar Z = this;\r\n\t\tif (valueStyle === undefined) {\r\n\t\t\tif(Z._dataType == jslet.data.DataType.DATASET ||  \r\n\t\t\t\t\tZ._children && Z._children.length > 0) \r\n\t\t\t\treturn jslet.data.FieldValueStyle.NORMAL;\r\n\t\t\tif(Z._dataType == jslet.data.DataType.PROXY) {\r\n\t\t\t\treturn Z._getProxyPropValue('valueStyle');\r\n\t\t\t}\r\n\r\n\t\t\treturn Z._valueStyle;\r\n\t\t}\r\n\r\n\t\tif(valueStyle) {\r\n\t\t\tvalueStyle = parseInt(valueStyle);\r\n\t\t} else {\r\n\t\t\tvalueStyle = 0;\r\n\t\t}\r\n\t\tjslet.Checker.test('Field.valueStyle', valueStyle).isNumber().inArray([0,1,2]);\r\n\t\tif(Z._dataType == jslet.data.DataType.PROXY) {\r\n\t\t\tZ._setProxyPropValue('valueStyle', valueStyle);\r\n\t\t} else {\r\n\t\t\tZ._valueStyle = valueStyle;\r\n\t\t}\r\n\t\tZ._clearFieldCache();\r\n\t\tZ._fireColumnUpdatedEvent();\r\n\t\tZ._fireMetaChangedEvent('valueStyle');\r\n\t\tZ._fireGlobalMetaChangedEvent('valueStyle');\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get allowed item count when {@link jslet.data.Field#valueStyle} is multiple.\r\n\t * \r\n\t *     @example\r\n\t *     fldObj.valueCountLimit(5); //Set property, return this.\r\n\t *     var propValue = dsObj.valueCountLimit(); //Get property value.\r\n\t * \r\n\t * @param {Integer | undefined} count Maximum items for multiple values.\r\n\t * \r\n\t * @return {this | Integer}\r\n\t */\r\n\tvalueCountLimit: function (count) {\r\n\t\tvar Z = this;\r\n\t\tif (count === undefined) {\r\n\t\t\tif(Z._dataType == jslet.data.DataType.PROXY) {\r\n\t\t\t\treturn Z._getProxyPropValue('valueCountLimit');\r\n\t\t\t}\r\n\t\t\treturn Z._valueCountLimit;\r\n\t\t}\r\n\t\tif(count) {\r\n\t\t\tjslet.Checker.test('Field.valueCountLimit', count).isNumber();\r\n\t\t} else {\r\n\t\t\tcount = 0;\r\n\t\t}\r\n\t\tif(Z._dataType == jslet.data.DataType.PROXY) {\r\n\t\t\tZ._setProxyPropValue('valueCountLimit', parseInt(count));\r\n\t\t} else {\r\n\t\t\tZ._valueCountLimit = parseInt(count);\r\n\t\t}\r\n\t\tZ._fireGlobalMetaChangedEvent('valueCountLimit');\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get allowed item count when {@link jslet.data.Field#valueStyle} is multiple or between.\r\n\t * \r\n\t *     @example\r\n\t *     fldObj.valueCountRange({min: 1, max: 5}); //Set property, return this.\r\n\t *     var propValue = fldObj.valueCountRange(); //Get property value.\r\n\t * \r\n\t * @param {Object | undefined} valueCountRange The value count range.\r\n\t * \r\n\t * @return {this | Object}\r\n\t */\r\n\tvalueCountRange: function (valueCountRange) {\r\n\t\tvar Z = this;\r\n\t\tif (valueCountRange === undefined) {\r\n\t\t\tif(Z._dataType == jslet.data.DataType.PROXY) {\r\n\t\t\t\treturn Z._getProxyPropValue('valueCountRange');\r\n\t\t\t}\r\n\t\t\treturn Z._valueCountRange;\r\n\t\t}\r\n\t\tif(valueCountRange) {\r\n\t\t\tjslet.Checker.test('Field.valueCountRange', valueCountRange).isObject();\r\n\t\t\tjslet.Checker.test('Field.valueCountRange', valueCountRange.min).isGTEZero();\r\n\t\t\tjslet.Checker.test('Field.valueCountRange', valueCountRange.max).isGTEZero();\r\n\t\t}\r\n\t\tif(Z._dataType == jslet.data.DataType.PROXY) {\r\n\t\t\tZ._setProxyPropValue('valueCountRange', valueCountRange);\r\n\t\t} else {\r\n\t\t\tZ._valueCountRange = valueCountRange;\r\n\t\t}\r\n\t\tZ._fireGlobalMetaChangedEvent('valueCountRange');\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * @private\r\n\t * @property\r\n\t * \r\n\t * Set or get field display control. It is similar as DBControl configuration.\r\n\t * Here you need not set 'dataset' and 'field' property. Example:\r\n\t * \r\n\t *     @example\r\n\t *     //Normal DBControl configuration\r\n\t *     //var normalCtrlCfg = {type: \"DBSpinEdit\", dataset: \"employee\", field: \"age\", minValue:10, maxValue: 100, step: 5};\r\n\t * \r\n\t *     var displayCtrlCfg = {type: \"DBSpinEdit\", minValue: 10, maxValue: 100, step: 5};\r\n\t *     fldObj.displayControl(displayCtrlCfg);\r\n\t * \r\n\t * @param {Object | String | undefined} dispCtrl If String, it will convert to DBControl Config.\r\n\t * \r\n\t * @return {this | Object}\r\n\t */\r\n\tdisplayControl: function (dispCtrl) {\r\n\t\tvar Z = this;\r\n\t\tif (dispCtrl === undefined){\r\n\t\t\tvar result = Z._displayControl;\r\n\t\t\tif(Z._dataType == jslet.data.DataType.PROXY) {\r\n\t\t\t\tresult = Z._getProxyPropValue('displayControl');\r\n\t\t\t}\r\n\t\t\tif (Z.getType() == jslet.data.DataType.BOOLEAN && !result) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttype: 'dbcheckbox'\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\tdispCtrl = jslet.isString(dispCtrl) ? { type: dispCtrl } : dispCtrl;\r\n\t\tif(Z._dataType == jslet.data.DataType.PROXY) {\r\n\t\t\tZ._setProxyPropValue('displayControl', dispCtrl);\r\n\t\t} else {\r\n\t\t\tZ._displayControl = dispCtrl;\r\n\t\t}\r\n\t\tZ._fireGlobalMetaChangedEvent('displayControl');\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get field edit control. It is similar as DBControl configuration except not set 'dataset' and 'field' property. Example:\r\n\t * \r\n\t *     @example\r\n\t *     //Normal DBControl configuration\r\n\t *     //var normalCtrlCfg = {type: \"DBSpinEdit\", dataset: \"employee\", field: \"age\", minValue: 10, maxValue: 100, step: 5};\r\n\t *     \r\n\t *     var editCtrlCfg = {type: \"DBSpinEdit\", minValue: 10, maxValue: 100, step: 5};\r\n\t *     fldObj.displayControl(editCtrlCfg);\r\n\t * \r\n\t * @param {Object | String | undefined} editCtrl If String, it will convert to DBControl Config.\r\n\t * \r\n\t * @return {this | Object}\r\n\t */\r\n\teditControl: function (editCtrl) {\r\n\t\tvar Z = this;\r\n\t\tif (editCtrl=== undefined){\r\n\t\t\tvar result = Z._editControl;\r\n\t\t\tif(Z._dataType == jslet.data.DataType.PROXY) {\r\n\t\t\t\tresult = Z._getProxyPropValue('editControl');\r\n\t\t\t}\r\n\t\t\tif (result) {\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\r\n\t\t\tvar fldType = Z.getType();\r\n\t\t\tif (fldType == jslet.data.DataType.BOOLEAN) {\r\n\t\t\t\treturn {type: 'dbcheckbox'};\r\n\t\t\t}\r\n\t\t\tif (fldType == jslet.data.DataType.DATE) {\r\n\t\t\t\treturn {type: 'dbdatepicker'};\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn Z.lookup()? {type: 'dbselect'}:{type: 'dbtext'};\r\n\t\t}\r\n\t\tif(jslet.isString(editCtrl)) {\r\n\t\t\teditCtrl = jslet.trim(editCtrl);\r\n\t\t\tif(editCtrl) {\r\n\t\t\t\tif(editCtrl.indexOf(':') > 0) {\r\n\t\t\t\t\teditCtrl = jslet.JSON.parse(editCtrl);\r\n\t\t\t\t} else {\r\n\t\t\t\t\teditCtrl =  {type: editCtrl};\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\teditCtrl = null;\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar oldValue = Z._getProxyPropValue('editControl');\r\n\t\tif(oldValue && editCtrl && oldValue.type == editCtrl.type) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tif(Z._dataType == jslet.data.DataType.PROXY) {\r\n\t\t\tZ._setProxyPropValue('editControl', editCtrl);\r\n\t\t} else {\r\n\t\t\tZ._editControl = editCtrl;\r\n\t\t}\r\n\t\tZ._fireMetaChangedEvent('editControl');\r\n\t\tZ._fireGlobalMetaChangedEvent('editControl');\r\n\t\treturn this;\r\n\t},\r\n\r\n\t_addRelation: function() {\r\n\t\tvar Z = this, \r\n\t\t\tlkObj = Z.lookup(),\r\n\t\t\tlkDsName,\r\n\t\t\thostDsName = Z._datasetName;\r\n\t\tif(!hostDsName || (Z.getType() != jslet.data.DataType.DATASET && !lkObj)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tvar hostField = Z._fieldName,\r\n\t\t\trelationType;\r\n\t\tif(Z.getType() == jslet.data.DataType.DATASET) {\r\n\t\t\tif(Z._detailDataset) {\r\n\t\t\t\tlkDsName = Z._getDatasetName(Z._detailDataset);\r\n\t\t\t\trelationType = jslet.data.DatasetType.DETAIL;\r\n\t\t\t\tjslet.data.datasetRelationManager.addRelation(hostDsName, hostField, lkDsName, relationType);\r\n\t\t\t\tvar detailDsObj = jslet.data.getDataset(Z._detailDataset);\r\n\t\t\t\tif(detailDsObj) {\r\n\t\t\t\t\tdetailDsObj.masterDataset(hostDsName);\r\n\t\t\t\t\tdetailDsObj.masterField(hostField);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tlkDsName = Z._getDatasetName(lkObj._dataset);\r\n\t\t\trelationType = jslet.data.DatasetType.LOOKUP;\r\n\t\t\tjslet.data.datasetRelationManager.addRelation(hostDsName, hostField, lkDsName, relationType);\r\n\t\t}\r\n\t},\r\n\t\r\n\t_removeRelation: function() {\r\n\t\tvar Z = this,\r\n\t\t\tlkObj = Z.lookup(),\r\n\t\t\thostDsName = Z._datasetName;\r\n\t\tif(!hostDsName || (!Z._detailDataset && !lkObj)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar hostField = Z._fieldName,\r\n\t\t\trelationType, lkDsName;\r\n\r\n\t\tif(Z._detailDataset) {\r\n\t\t\tlkDsName = Z._getDatasetName(Z._detailDataset);\r\n\t\t\tvar detailDsObj = jslet.data.getDataset(Z._detailDataset);\r\n\t\t\tif(detailDsObj) {\r\n\t\t\t\tdetailDsObj.masterDataset(null);\r\n\t\t\t\tdetailDsObj.masterField(null);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tlkDsName = Z._getDatasetName(lkObj._dataset);\r\n\t\t}\r\n\t\tjslet.data.datasetRelationManager.removeRelation(hostDsName, hostField, lkDsName);\r\n\t},\r\n\t\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get lookup field object. <br />\r\n\t * In jslet, there are two relations of dataset: LOOKUP and DETAIL.<br />\r\n\t * \"Lookup\" relation means where one field value is come from. Example:\r\n\t * \r\n\t *     @example\r\n\t *     var dsDepartment = jslet.data.getDataset('department');\r\n\t *     fldObj.lookup({dataset: dsDepartment}); \r\n\t *     //or\r\n\t *     fldObj.lookup({dataset: 'department'});\r\n\t * \r\n\t * @param {jslet.data.FieldLookup | Object | undefined} lookupObject Lookup field object or lookup configuration.\r\n\t * \r\n\t * @return {this | jslet.data.FieldLookup}\r\n\t */\r\n\tlookup: function (lookupObj) {\r\n\t\tvar Z = this;\r\n\t\tif (lookupObj === undefined){\r\n\t\t\tif(Z._dataType == jslet.data.DataType.PROXY) {\r\n\t\t\t\treturn Z._getProxyPropValue('lookup');\r\n\t\t\t}\r\n\t\t\treturn Z._lookup;\r\n\t\t}\r\n\t\tif(lookupObj && lookupObj.className != jslet.data.FieldLookup.className) {\r\n\t\t\tlookupObj = new jslet.data.FieldLookup(Z, lookupObj);\r\n\t\t}\r\n\t\tZ._removeRelation();\r\n\t\t\r\n\t\tif(Z._dataType == jslet.data.DataType.PROXY) {\r\n\t\t\tZ._setProxyPropValue('lookup', lookupObj);\r\n\t\t} else {\r\n\t\t\tZ._lookup = lookupObj;\r\n\t\t}\r\n\t\tif(lookupObj) {\r\n\t\t\tZ._addRelation();\r\n\t\t}\r\n\t\tZ._clearFieldCache();\t\t\r\n\t\tZ._fireColumnUpdatedEvent();\r\n\t\tZ._fireLookupChangedEvent();\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @private\r\n\t * \r\n\t * Fire lookup setting changed event.\r\n\t */\r\n\t_fireLookupChangedEvent: function() {\r\n\t\tvar Z = this;\r\n\t\tif(!Z._dataset) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar fldName = this.name();\r\n\t\tvar lookupEvt = jslet.data.RefreshEvent.lookupEvent(fldName, true);\r\n\t\tthis._dataset.refreshControl(lookupEvt);\r\n\t},\r\n\r\n\t_getDatasetName: function(dsObjOrName) {\r\n\t\treturn jslet.isString(dsObjOrName)? dsObjOrName: dsObjOrName.name();\r\n\t},\r\n\r\n\t/**\r\n\t * @deprecated\r\n\t * Use detailDataset instead.\r\n\t */\r\n\tsubDataset: function (subDataset) {\r\n\t\treturn this.detailDataset(subDataset);\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get sub dataset. <br />\r\n\t * In jslet, there are two relations of dataset: LOOKUP and DETAIL.<br />\r\n\t * \"Detail\" relation is used to define \"Master/Detail\" between two dataset.\r\n\t * \r\n\t *     @example\r\n\t *     var dsDetail = new jslet.data.Dataset({name: 'detail', fields: [...]); //create detail dataset\r\n\t *     dsMaster.getField('detail1').detailDataset(dsDetail); //set detail dataset\r\n\t *     \r\n\t *     dsMaster.getField('detail1').detailDataset(); //get detail dataset\r\n\t *  \r\n\t * @param {jslet.data.Dataset | undefined} detailDataset Detail dataset.\r\n\t * \r\n\t * @return {this | jslet.data.Dataset}\r\n\t */\r\n\tdetailDataset: function (detailDataset) {\r\n\t\tvar Z = this;\r\n\t\tif (detailDataset === undefined) {\r\n\t\t\tif(Z._detailDataset && jslet.isString(Z._detailDataset)) {\r\n\t\t\t\tZ.detailDataset(Z._detailDataset);\r\n\t\t\t\tif(jslet.isString(Z._detailDataset)) {\r\n\t\t\t\t\tthrow new Error(jslet.formatMessage(jsletlocale.Dataset.datasetNotFound, [Z._detailDataset]));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn Z._detailDataset;\r\n\t\t}\r\n\t\t\r\n\t\tZ._removeRelation();\r\n\t\tif(!detailDataset) {\r\n\t\t\tZ._detailDataset = null;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tif (jslet.isString(detailDataset)) {\r\n\t\t\tvar dtlDsObj = jslet.data.getDataset(detailDataset);\r\n\t\t\tif(!dtlDsObj) {\r\n\t\t\t\tZ._detailDataset = detailDataset;\r\n\t\t\t\tif(Z._dataset.createdByFactory) {\r\n\t\t\t\t    jslet.data.datasetFactory.createDataset(detailDataset);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif(jslet.global.dataset.onDatasetCreating) {\r\n\t\t\t\t\t\tvar hostDsName = Z._datasetName;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar creatingOpt = {datasetType: jslet.data.DatasetType.DETAIL}; \r\n\t\t\t\t\t\tjslet.data.createDynamicDataset(detailDataset, creatingOpt, hostDsName);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tZ._addRelation();\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\tdetailDataset = dtlDsObj;\r\n\t\t} else {\r\n\t\t\tjslet.Checker.test('Field.detailDataset', detailDataset).isClass(jslet.data.Dataset.className);\r\n\t\t}\r\n\t\tZ._detailDataset = detailDataset;\r\n\t\tZ._addRelation();\r\n\t\treturn this;\r\n\t},\r\n\r\n\turlExpr: function (urlExpr) {\r\n\t\tvar Z = this;\r\n\t\tif (urlExpr === undefined) {\r\n\t\t\treturn Z._urlExpr;\r\n\t\t}\r\n\r\n\t\tjslet.Checker.test('Field.urlExpr', urlExpr).isString();\r\n\t\tZ._urlExpr = jslet.trim(urlExpr);\r\n\t\tZ._innerUrlExpr = null;\r\n\t\tZ._clearFieldCache();\t\t\r\n\t\tZ._fireColumnUpdatedEvent();\r\n\t\tZ._fireGlobalMetaChangedEvent('urlExpr');\r\n\t\treturn this;\r\n\t},\r\n\r\n\turlTarget: function (target) {\r\n\t\tvar Z = this;\r\n\t\tif (target === undefined){\r\n\t\t\treturn !Z._urlTarget ? jslet.data.Field.URLTARGETBLANK : Z._urlTarget;\r\n\t\t}\r\n\r\n\t\tjslet.Checker.test('Field.urlTarget', target).isString();\r\n\t\tZ._urlTarget = jslet.trim(target);\r\n\t\tZ._clearFieldCache();\r\n\t\tZ._fireColumnUpdatedEvent();\r\n\t\tZ._fireGlobalMetaChangedEvent('urlTarget');\r\n\t\treturn this;\r\n\t},\r\n\r\n\tcalcUrl: function () {\r\n\t\tvar Z = this;\r\n\t\tif (!this.dataset() || !Z._urlExpr) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tif (!Z._innerUrlExpr) {\r\n\t\t\tZ._innerUrlExpr = new jslet.data.Expression(this.dataset(), Z._urlExpr);\r\n\t\t}\r\n\t\treturn Z._innerUrlExpr.eval();\r\n\t},\r\n\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get if field need be anti-xss.\r\n\t * If true, field value will be encoded.\r\n\t * \r\n\t * @param {Boolean | undefined} isXss.\r\n\t * @return {this | Boolean}\r\n\t */\r\n\tantiXss: function(isXss){\r\n\t\tvar Z = this;\r\n\t\tif (isXss === undefined) {\r\n\t\t\treturn Z._antiXss;\r\n\t\t}\r\n\t\tZ._antiXss = isXss ? true: false;\r\n\t\tZ._fireGlobalMetaChangedEvent('antiXss');\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get field rang.\r\n\t * Range is an object as: {min: x, max: y}. Example:\r\n\t * \r\n\t *     @example\r\n\t *     //For String field\r\n\t *     var range = {min: 'a', max: 'z'};\r\n\t *     //For Date field\r\n\t *     var range = {min: new Date(2000,1,1), max: new Date(2010,12,31)};\r\n\t *     //For Number field\r\n\t *     var range = {min: 0, max: 100};\r\n\t *     fldObj.dataRange(range);\r\n\t * \r\n\t * @param {Object | undefined} range Field range;\r\n\t * @return {this | Object}\r\n\t */\r\n\tdataRange: function (range) {\r\n\t\tvar Z = this;\r\n\t\tif (range === undefined) {\r\n\t\t\tif(Z._dataType == jslet.data.DataType.PROXY) {\r\n\t\t\t\treturn Z._getProxyPropValue('dataRange');\r\n\t\t\t}\r\n\t\t\treturn Z._dataRange;\r\n\t\t}\r\n\t\tif(range && jslet.isString(range)) {\r\n\t\t\trange = jslet.JSON.parse(range);\r\n\t\t}\r\n\t\tif(range) {\r\n\t\t\tjslet.Checker.test('Field.dataRange', range).isObject();\r\n\t\t\tif(range.min) {\r\n\t\t\t\tjslet.Checker.test('Field.dataRange.min', range.min).isDataType(Z._dateType);\r\n\t\t\t}\r\n\t\t\tif(range.max) {\r\n\t\t\t\tjslet.Checker.test('Field.dataRange.max', range.max).isDataType(Z._dateType);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(Z._dataType == jslet.data.DataType.PROXY) {\r\n\t\t\tZ._setProxyPropValue('dataRange', range);\r\n\t\t} else {\r\n\t\t\tZ._dataRange = range;\r\n\t\t}\r\n\t\tZ._fireGlobalMetaChangedEvent('dataRange');\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get regular expression.\r\n\t * You can specify your own validator with regular expression. If regular expression not specified, \r\n\t * The default regular expression for Date and Number field will be used. Example:\r\n\t * \r\n\t *     @example\r\n\t *     var exprObj = {expr: /(\\(\\d{3,4}\\)|\\d{3,4}-|\\s)?\\d{8}/ig, message: 'Invalid phone number!'};\r\n\t *     fldObj.regularExpr(exprObj);//like: 0755-12345678\r\n\t *     fldObj.regularExpr(/(\\(\\d{3,4}\\)|\\d{3,4}-|\\s)?\\d{8}/ig, 'Invalid phone number!');//like: 0755-12345678\r\n\t * \r\n\t * @param {String} expr Regular expression;\r\n\t * @param {String} message Message for invalid.\r\n\t * @return {Object} An object like: {expr: expr, message: message}\r\n\t */\r\n\tregularExpr: function (expr, message) {\r\n\t\tvar Z = this;\r\n\t\tvar argLen = arguments.length;\r\n\t\tif (argLen === 0){\r\n\t\t\tif(Z._dataType == jslet.data.DataType.PROXY) {\r\n\t\t\t\treturn Z._getProxyPropValue('regularExpr');\r\n\t\t\t}\r\n\t\t\treturn Z._regularExpr;\r\n\t\t}\r\n\t\tif(argLen > 1) {\r\n\t\t\texpr = { expr: expr, message: message };\r\n\t\t}\r\n\t\tif(Z._dataType == jslet.data.DataType.PROXY) {\r\n\t\t\tZ._setProxyPropValue('regularExpr', expr);\r\n\t\t} else {\r\n\t\t\tZ._regularExpr = expr;\r\n\t\t}\r\n\t\tZ._fireGlobalMetaChangedEvent('regularExpr');\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get customized field value accessor, the example:\r\n\t * \r\n\t *     @example\r\n\t *     var accessor = {\r\n\t * \t     getValue: function(dataRecord, fldName) {\r\n\t *         var dynamicProps = dataRecord['dynamicProps'];\r\n\t *         if(dynamicProps) {\r\n\t *           return dynamicProps[fldName];\r\n\t *         } else {\r\n\t *           return null;\r\n\t *         }\r\n\t *         //The default method is: return dataRecord[fldname];\r\n\t *      },\r\n\t * \t     setValue: function(dataRecord, fldName, fldValue) {\r\n\t *         //Field value is stores in property 'dynamicProps'\r\n\t *         var dynamicProps = dataRecord['dynamicProps'];\r\n\t *         if(!dynamicProps) {\r\n\t *           dynamicProps = {};\r\n\t *           dataRecord['dynamicProps'] = dynamicProps;\r\n\t *         }\r\n\t *         dynamicProps[fldName] = fldValue;\r\n\t *         //The default method is: dataRecord[fldname] = fldValue;\r\n\t *       }\r\n\t *     };\r\n\t *     fldDyncField1.customValueAccessor(accessor); \r\n\t *     fldDyncField2.customValueAccessor(accessor);\r\n\t *     \r\n\t * @param {Object | undefined} accessor Field raw value accessor.\r\n\t * @param {Function} accessor.getValue The method to get value from the original record.\r\n\t * @param {Object} accessor.getValue.dataRecord Field The original record.\r\n\t * @param {Object} accessor.getValue.fieldName Field name.\r\n\t * @param {Object} accessor.getValue.return Field value.\r\n\t * @param {Object} accessor.setValue The method to get value from the original record.\r\n\t * @param {Object} accessor.setValue.dataRecord Field The original record.\r\n\t * @param {Object} accessor.setValue.fieldName Field name.\r\n\t * \r\n\t * @return {this | Object}\r\n\t */\r\n\tcustomValueAccessor: function(accessor) {\r\n\t\tvar Z = this;\r\n\t\tif (accessor === undefined) {\r\n\t\t\treturn Z._customValueAccessor;\r\n\t\t}\r\n\t\tZ._customValueAccessor = accessor;\r\n\t\tZ._clearFieldCache();\r\n\t\tZ._fireColumnUpdatedEvent();\r\n\t\tZ._fireGlobalMetaChangedEvent('customValueAccessor');\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get customized field value converter. The converter is used to convert field value <--> field text. \r\n\t * \r\n\t * @param {jslet.data.FieldValueConverter | undefined} converter converter object, sub class of {@link jslet.data.FieldValueConverter}.\r\n\t * \r\n\t * @return {this | jslet.data.FieldValueConverter} \r\n\t */\r\n\tcustomValueConverter: function (converter) {\r\n\t\tvar Z = this;\r\n\t\tif (converter === undefined) {\r\n\t\t\treturn Z._customValueConverter;\r\n\t\t}\r\n\t\tZ._customValueConverter = converter;\r\n\t\tZ._clearFieldCache();\r\n\t\tZ._fireColumnUpdatedEvent();\r\n\t\tZ._fireGlobalMetaChangedEvent('customValueConverter');\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get customized validator. Example:\r\n\t * \r\n\t *     @example\r\n\t *     //Client validating\r\n\t *     var clientValidateFn = function(fldObj, fldValue) {\r\n\t *       if(fldValue <= 0) {\r\n\t *       \treturn 'Must be great than 0';\r\n\t *       } else \r\n\t *       \treturn null;\r\n\t *     };\r\n\t *     fldObj1.customValidator(clientValidateFn);\r\n\t *     \r\n\t *     var serverValidateFn = function(fldObj, fldValue, serverValidateFn) {\r\n\t *       //Send request to server to validate.\r\n\t *       return serverValidateFn('/xx/check.do', {fieldValue: fldValue});\r\n\t *     };\r\n\t *     fldObj2.customValidator(serverValidateFn);\r\n\t * \r\n\t * @param {Function} validator Validator function.\r\n\t * @param {jslet.data.Field} validator.fieldObject Field object.\r\n\t * @param {Object} validator.fieldValue Field value.\r\n\t * @param {Function} validator.serverValidateFn (optional) Validator function which will send request to server.\r\n\t * @param {String} validator.serverValidateFn.requestUrl The request URL for server validator.\r\n\t * @param {Object} validator.serverValidateFn.requestData The request data for server validator.\r\n\t * @param {String} validator.serverValidateFn.return Error message, if validate failed, return error message, otherwise return null.\r\n\t * @param {String} validator.return Error message, if validate failed, return error message, otherwise return null.\r\n\t */\r\n\tcustomValidator: function (validator) {\r\n\t\tvar Z = this;\r\n\t\tif (validator === undefined) {\r\n\t\t\tif(Z._dataType == jslet.data.DataType.PROXY) {\r\n\t\t\t\treturn Z._getProxyPropValue('customValidator');\r\n\t\t\t}\r\n\t\t\treturn Z._customValidator;\r\n\t\t}\r\n\t\tif(validator) {\r\n\t\t\tjslet.Checker.test('Field.customValidator', validator).isFunction();\r\n\t\t}\r\n\t\tif(Z._dataType == jslet.data.DataType.PROXY) {\r\n\t\t\tZ._setProxyPropValue('customValidator', validator);\r\n\t\t} else {\r\n\t\t\tZ._customValidator = validator;\r\n\t\t}\r\n\t\tZ._fireGlobalMetaChangedEvent('customValidator');\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Valid characters for this field.\r\n\t * \r\n\t *     @example\r\n\t *     fldObj.validChars('abc'); //Set property, return this.\r\n\t *     var propValue = dsObj.validChars(); //Get property value.\r\n\t * \r\n\t * @param {String | undefined} validChars Valid characters.\r\n\t * \r\n\t * @return {this | String}\r\n\t */\r\n\tvalidChars: function(validChars){\r\n\t\tvar Z = this;\r\n\t\tif (validChars === undefined){\r\n\t\t\tvar result = Z._validChars;\r\n\t\t\tif(Z._dataType == jslet.data.DataType.PROXY) {\r\n\t\t\t\tresult = Z._getProxyPropValue('validChars');\r\n\t\t\t}\r\n\t\t\tif (result) {\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t\tif (Z.getType() == jslet.data.DataType.NUMBER){\r\n\t\t\t\treturn Z._scale ? '+-0123456789.' : '+-0123456789';\r\n\t\t\t}\r\n\t\t\tif (Z.getType() == jslet.data.DataType.DATE){\r\n\t\t\t\tvar displayFormat = Z.displayFormat();\r\n\t\t\t\tvalidChars = '0123456789';\r\n\t\t\t\tfor(var i = 0, len = displayFormat.length; i < len; i++) {\r\n\t\t\t\t\tvar c = displayFormat.charAt(i);\r\n\t\t\t\t\tif(c === 'y' || c === 'M' || c === 'd' || c === 'h' || c === 'm' || c === 's') {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvalidChars += c;\r\n\t\t\t\t}\r\n\t\t\t\treturn validChars;\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\t\r\n\t\tif(Z._dataType == jslet.data.DataType.PROXY) {\r\n\t\t\tZ._setProxyPropValue('validChars', validChars);\r\n\t\t} else {\r\n\t\t\tZ._validChars = validChars;\r\n\t\t}\r\n\t\tZ._fireGlobalMetaChangedEvent('validChars');\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Used for Boolean field, actual value for 'true' value, like: 1, 'yes', 'true'. Example:\r\n\t * \r\n\t *     @example\r\n\t *     var propValue = dsObj.trueValue(); //get property.\r\n\t *     \r\n\t *     var fldObj = dsObj.getField('booleanFld');\r\n\t *     var rec = dsObj.getRecord(); //Get original record object\r\n\t *     fldObj.trueValue(1); \r\n\t *     fldObj.setValue(true);\r\n\t *     console.log(rec.booleanFld); //return 1\r\n\t *     \r\n\t *     fldObj.trueValue('yes'); //\r\n\t *     fldObj.setValue(true);\r\n\t *     console.log(rec.booleanFld); //return 'yes'\r\n\t * \r\n\t * @param {Object | undefined} trueValue Actual value for 'true' value.\r\n\t * \r\n\t * @return {this | Object}\r\n\t */\r\n\ttrueValue: function(trueValue) {\r\n\t\tvar Z = this;\r\n\t\tif (trueValue === undefined) {\r\n\t\t\tif(Z._dataType == jslet.data.DataType.PROXY) {\r\n\t\t\t\treturn Z._getProxyPropValue('trueValue');\r\n\t\t\t}\r\n\t\t\treturn Z._trueValue;\r\n\t\t}\r\n\t\tif(Z._dataType == jslet.data.DataType.PROXY) {\r\n\t\t\tZ._setProxyPropValue('trueValue', trueValue);\r\n\t\t} else {\r\n\t\t\tZ._trueValue = trueValue;\r\n\t\t}\r\n\t\treturn this;\t\t\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Used for Boolean field, actual value for 'false' value, like: 0, 'no', 'false'. Example:\r\n\t * \r\n\t *     @example\r\n\t *     var propValue = dsObj.falseValue(); //get property.\r\n\t *     \r\n\t *     var fldObj = dsObj.getField('booleanFld');\r\n\t *     var rec = dsObj.getRecord(); //Get original record object\r\n\t *     fldObj.falseValue(1); \r\n\t *     fldObj.setValue(false);\r\n\t *     console.log(rec.booleanFld); //return 1\r\n\t *     \r\n\t *     fldObj.trueValue('no'); //\r\n\t *     fldObj.setValue(false);\r\n\t *     console.log(rec.booleanFld); //return 'no'\r\n\t * \r\n\t * @param {Object | undefined} falseValue Actual value for 'false' value.\r\n\t * \r\n\t * @return {this | Object}\r\n\t */\r\n\tfalseValue: function(falseValue) {\r\n\t\tvar Z = this;\r\n\t\tif (falseValue === undefined) {\r\n\t\t\tif(Z._dataType == jslet.data.DataType.PROXY) {\r\n\t\t\t\treturn Z._getProxyPropValue('falseValue');\r\n\t\t\t}\r\n\t\t\treturn Z._falseValue;\r\n\t\t}\r\n\t\tif(Z._dataType == jslet.data.DataType.PROXY) {\r\n\t\t\tZ._setProxyPropValue('falseValue', falseValue);\r\n\t\t} else {\r\n\t\t\tZ._falseValue = falseValue;\r\n\t\t}\r\n\t\treturn this;\t\t\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Used for Boolean field, diaplay text for 'true' value, like: 'Yes', 'True', 'Enabled'. Example:\r\n\t * \r\n\t *     @example\r\n\t *     var propValue = dsObj.trueText(); //get property.\r\n\t *     \r\n\t *     var fldObj = dsObj.getField('booleanFld');\r\n\t *     fldObj.trueText('Enabled'); \r\n\t *     fldObj.setValue(true);\r\n\t *     dsObj.getFieldText('booleanFld'); //return 'Enabled'\r\n\t *     \r\n\t *     fldObj.trueText('yes'); //\r\n\t *     fldObj.setValue(true);\r\n\t *     dsObj.getFieldText('booleanFld'); //return 'Yes'\r\n\t * \r\n\t * @param {Object | undefined} trueText Display text for 'true' value.\r\n\t * \r\n\t * @return {this | Object}\r\n\t */\r\n\ttrueText: function(trueText) {\r\n\t\tvar Z = this;\r\n\t\tif (trueText === undefined) {\r\n\t\t\tvar result = Z._trueText;\r\n\t\t\tif(Z._dataType == jslet.data.DataType.PROXY) {\r\n\t\t\t\tresult = Z._getProxyPropValue('trueText');\r\n\t\t\t}\r\n\t\t\treturn result || jsletlocale.Dataset.trueText;\r\n\t\t}\r\n\t\tif(Z._dataType == jslet.data.DataType.PROXY) {\r\n\t\t\tZ._setProxyPropValue('trueText', trueText);\r\n\t\t} else {\r\n\t\t\tZ._trueText = trueText;\r\n\t\t}\r\n\t\treturn this;\t\t\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Used for Boolean field, diaplay text for 'false' value, like: 'No', 'False', 'Disabled'. Example:\r\n\t * \r\n\t *     @example\r\n\t *     var propValue = dsObj.falseText(); //get property.\r\n\t *     \r\n\t *     var fldObj = dsObj.getField('booleanFld');\r\n\t *     fldObj.trueText('Disabled'); \r\n\t *     fldObj.setValue(false);\r\n\t *     dsObj.getFieldText('booleanFld'); //return 'Disabled'\r\n\t *     \r\n\t *     fldObj.trueText('No'); //\r\n\t *     fldObj.setValue(false);\r\n\t *     dsObj.getFieldText('booleanFld'); //return 'No'\r\n\t * \r\n\t * @param {Object | undefined} falseText Display text for 'false' value.\r\n\t * \r\n\t * @return {this | Object}\r\n\t */\r\n\tfalseText: function(falseText) {\r\n\t\tvar Z = this;\r\n\t\tif (falseText === undefined) {\r\n\t\t\tvar result = Z._falseText;\r\n\t\t\tif(Z._dataType == jslet.data.DataType.PROXY) {\r\n\t\t\t\tresult = Z._getProxyPropValue('falseText');\r\n\t\t\t}\r\n\t\t\treturn result || jsletlocale.Dataset.falseText;\r\n\t\t}\r\n\t\tif(Z._dataType == jslet.data.DataType.PROXY) {\r\n\t\t\tZ._setProxyPropValue('falseText', falseText);\r\n\t\t} else {\r\n\t\t\tZ._falseText = falseText;\r\n\t\t}\r\n\t\treturn this;\t\t\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get whether the same field values will be merged.\r\n\t * \r\n\t *     @example\r\n\t *     dsFld.mergeSame(true); //Set property, return this.\r\n\t *     var propValue = fldObj.mergeSame(); //Get property value.\r\n\t * \r\n\t * @param {Boolean | undefined} mergeSame.\r\n\t * \r\n\t * @return {this | Boolean}\r\n\t */\r\n\tmergeSame: function(mergeSame){\r\n\t\tvar Z = this;\r\n\t\tif (mergeSame === undefined) {\r\n\t\t\treturn Z._mergeSame;\r\n\t\t}\r\n\t\tZ._mergeSame = mergeSame ? true: false;\r\n\t\tZ._fireGlobalMetaChangedEvent('mergeSame');\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get the field names to be merge by. <br />\r\n\t * Multiple field names are separated by ','.\r\n\t * \r\n\t *     @example\r\n\t *     //The the same field values of \"salesNo\" + \"customer\" will be merged. \r\n\t *     dsObj.getField('customer').mergeSame(true);\r\n\t *     dsFld.mergeSameBy('salesNo');\r\n\t * \r\n\t * @param {String | undefined} mergeSameBy.\r\n\t * \r\n\t * @return {this | String}\r\n\t */\r\n\tmergeSameBy: function(mergeSameBy){\r\n\t\tvar Z = this;\r\n\t\tif (mergeSameBy === undefined) {\r\n\t\t\treturn Z._mergeSameBy;\r\n\t\t}\r\n\t\tjslet.Checker.test('Field.mergeSameBy', mergeSameBy).isString();\r\n\t\tZ._mergeSameBy = jslet.trim(mergeSameBy);\r\n\t\tZ._fireGlobalMetaChangedEvent('mergeSameBy');\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get if the field is following the value of previous record which append before.\r\n\t * \r\n\t *     @example\r\n\t *     dsObj.getField('fld1').valueFollow(true);\r\n\t *     dsObj.setFieldValue('fld1', 123); //Step 1\r\n\t *     dsObj.confirm();\r\n\t *     dsObj.appendRecord();\r\n\t *     dsObj.getFieldValue('fld1'); //return 123, same as \"step 1\"\r\n\t * \r\n\t * @param {Boolean | undefined} valueFollow True - the default value is same as the value which appended before, false -otherwise.\r\n\t * \r\n\t * @return {this | Boolean}\r\n\t */\r\n\tvalueFollow: function(valueFollow) {\r\n\t\tvar Z = this;\r\n\t\tif(valueFollow === undefined) {\r\n\t\t\tif(Z._formula) { //Formula field can't set value followed or it will cause unpredictable issue.\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn Z._valueFollow;\r\n\t\t}\r\n\t\tZ._valueFollow = valueFollow? true: false;\r\n\t\tif(!Z._valueFollow && Z._dataset) {\r\n\t\t\tZ._dataset.clearFollowedValues();\r\n\t\t}\r\n\t\tZ._fireGlobalMetaChangedEvent('valueFollow');\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Identity whether trim the prefix or suffix blank character when setting field value.\r\n\t * \r\n\t * @param {Boolean | undefined} trimBlank True - (Default) trim the prefix or suffix blank character, false -otherwise.\r\n\t * \r\n\t * @return {this | Boolean}\r\n\t */\r\n\ttrimBlank: function(trimBlank) {\r\n\t\tvar Z = this;\r\n\t\tif(trimBlank === undefined) {\r\n\t\t\treturn Z._trimBlank;\r\n\t\t}\r\n\t\tZ._trimBlank = trimBlank? true: false;\r\n\t\tZ._fireGlobalMetaChangedEvent('_trimBlank');\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get whether the field is focused or not. <br />\r\n\t * If a field is focused, the input focus will be jumped in them.\r\n\t * \r\n\t * @param {Boolean | undefined} focused True - the field is focused, false - otherwise.\r\n\t * \r\n\t * @return {this | Boolean}\r\n\t */\r\n\tfocused: function(focused) {\r\n\t\tvar Z = this;\r\n\t\tif(focused === undefined) {\r\n\t\t\treturn Z._focused;\r\n\t\t}\r\n\t\tfocused = focused? true: false;\r\n\t\tif(focused === Z._focused) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tZ._focused = focused;\r\n\t\tif(Z._dataset) {\r\n\t\t\tZ._dataset.calcFocusedFields();\r\n\t\t}\r\n\t\tZ._fireGlobalMetaChangedEvent('focused');\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get whether the field is encrypted or not. <br />\r\n\t * It can be an object like: {start: 5, end: 8}. Example:\r\n\t * \r\n\t *     @example\r\n\t *     fldObj.encrypted({start: 5, end: 8});\r\n\t *     //If field value is : '0123456789', the display text will be '01234***890'.\r\n\t *      \r\n\t * @param {Object | undefined} encrypted An plan object.\r\n\t * @param {Integer} encrypted.start The start position to be encrypted, start with 0.\r\n\t * @param {Integer} encrypted.end The end position to be encrypted(Not include the end position).\r\n\t * \r\n\t * @return {this | Object}\r\n\t */\r\n\tencrypted: function(encrypted) {\r\n\t\tvar Z = this;\r\n\t\tif(encrypted === undefined) {\r\n\t\t\treturn Z._encrypted;\r\n\t\t}\r\n\t\tjslet.Checker.test('Field.encrypted', encrypted).isPlanObject();\r\n\t\tif(encrypted) {\r\n\t\t\tjslet.Checker.test('Field.encrypted.start', encrypted.start).isGTEZero();\r\n\t\t\tjslet.Checker.test('Field.encrypted.end', encrypted.end).isGTEZero();\r\n\t\t}\r\n\t\tZ._encrypted = encrypted;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get whether the field value is aggregated.\r\n\t * \r\n\t * @param {Boolean | undefined} aggregated.\r\n\t * \r\n\t * @return {this | Boolean}\r\n\t */\r\n\taggregated: function (aggregated) {\r\n\t\tvar Z = this;\r\n\t\tif (aggregated === undefined){\r\n\t\t\treturn Z._aggregated;\r\n\t\t}\r\n\t\t\r\n\t\tZ._aggregated = aggregated? true: false;\r\n\t\tif(Z._dataset) {\r\n\t\t\tZ._dataset.refreshAggregatedFields();\r\n\t\t}\r\n\t\tZ._fireGlobalMetaChangedEvent('aggregated');\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t * @deprecated\r\n\t * Use aggregated instead.\r\n\t */\r\n\taggraded: function (aggregated) {\r\n\t\treturn this.aggregated(aggregated);\r\n\t},\r\n\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get the field names to aggregate field value. <br /> \r\n\t * Same field values which specified by \"aggregatedBy\" will only calculate once. Multiple field names are separated by ','.\r\n\t * \r\n\t * @param {String | undefined} aggregatedBy Field names.\r\n\t * \r\n\t * @return {this | String}\r\n\t */\r\n\taggregatedBy: function(aggregatedBy){\r\n\t\tvar Z = this;\r\n\t\tif (aggregatedBy === undefined) {\r\n\t\t\treturn Z._aggregatedBy;\r\n\t\t}\r\n\t\tjslet.Checker.test('Field.aggregatedBy', aggregatedBy).isString();\r\n\t\tZ._aggregatedBy = jslet.trim(aggregatedBy);\r\n\t\tZ._fireGlobalMetaChangedEvent('aggregatedBy');\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t * @deprecated\r\n\t * Use aggregatedBy instead.\r\n\t */\r\n\taggradedBy: function(aggregatedBy){\r\n\t\treturn this.aggregatedBy(aggregatedBy);\r\n\t},\r\n\t\r\n\textendHostName: function(extendHostName) {\r\n\t\tvar Z = this;\r\n\t\tif(extendHostName === undefined) {\r\n\t\t\treturn Z._extendHostName;\r\n\t\t}\r\n\t\tjslet.Checker.test('Field.extendHostName', extendHostName).isString();\r\n\t\tZ._extendHostName = extendHostName;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\tcrossSource: function(crossSource) {\r\n\t\tvar Z = this;\r\n\t\tif(crossSource === undefined) {\r\n\t\t\treturn Z._crossSource;\r\n\t\t}\r\n\t\tjslet.Checker.test('Field.crossSource', crossSource).isClass(jslet.data.CrossFieldSource.className);\r\n\t\tZ._crossSource = crossSource;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get fixed field value, if field value not specified, fixed field value used.<br />\r\n\t * This property can be used to display non-data field, like \"action field\"(one or multiple buttons).\r\n\t * \r\n\t * @param {String | undefined} fixedValue Fixed value.\r\n\t * \r\n\t * @return {this | String}\r\n\t */\r\n\tfixedValue: function(fixedValue){\r\n\t\tvar Z = this;\r\n\t\tif (fixedValue === undefined) {\r\n\t\t\treturn Z._fixedValue;\r\n\t\t}\r\n\t\tjslet.Checker.test('Field.fixedValue', fixedValue).isString();\r\n\t\tZ._fixedValue = jslet.trim(fixedValue);\r\n\t\tZ._fireGlobalMetaChangedEvent('fixedValue');\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Get field value.\r\n\t * \r\n\t * @param {Integer} valueIndex (optional) Field value index, only used for field.valueStyle is BETWEEN or MULTIPLE, start with 0.\r\n\t * \r\n\t * @return {Object}\r\n\t */\r\n\tgetValue: function(valueIndex) {\r\n\t\treturn this._dataset.getFieldValue(this._fieldName, valueIndex);\r\n\t},\r\n\t\r\n\t/**\r\n\t * Set field value.\r\n\t * \r\n\t * @param {Object} value Field value.\r\n\t * @param {Integer} valueIndex (optional) Field value index, only used for field.valueStyle is BETWEEN or MULTIPLE, start with 0.\r\n\t * \r\n\t * @return {this}\r\n\t */\r\n\tsetValue: function(value, valueIndex) {\r\n\t\tthis._dataset.setFieldValue(this._fieldName, value, valueIndex);\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Get field text.\r\n\t * \r\n\t * @param {Boolean} isEditing (optional) In edit mode or not, if in edit mode, return 'Input Text'(user inputting text), else return 'Display Text'(Display text is almost formatted). \r\n\t * @param {Integer} valueIndex (optional) Field value index, only used for field.valueStyle is BETWEEN or MULTIPLE, starts with 0.\r\n\t * \r\n\t * @return {String} Field text.\r\n\t */\r\n\tgetTextValue: function(isEditing, valueIndex) {\r\n\t\treturn this._dataset.getFieldText(this._fieldName, isEditing, valueIndex);\r\n\t},\r\n\t\r\n\t/**\r\n\t * Set field text.\r\n\t * \r\n\t * @param {String} inputText String value inputed by user.\r\n\t * @param {Integer} valueIndex (optional) Field value index, only used for field.valueStyle is BETWEEN or MULTIPLE, starts with 0.\r\n\t * \r\n\t * @return {this}\r\n\t */\r\n\tsetTextValue: function(inputText, valueIndex) {\r\n\t\tthis._dataset.setFieldText(this._fieldName, inputText, valueIndex);\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Clone a field object. Example:\r\n\t * \r\n\t *     @example\r\n\t *     var dsNew = jslet.data.getDataset('newDataset');\r\n\t *     var newFldObj = fldObj.clone('field1', dsNew);\r\n\t *     dsNew.addField(newFldObj);\r\n\t * \r\n\t * @param {String} fldName Field name.\r\n\t * @param {jslet.data.Dataset} newDataset New dataset object.\r\n\t * \r\n\t * @return {jslet.data.Field}\r\n\t */\r\n\tclone: function(fldName, newDataset){\r\n\t\tvar Z = this;\r\n\t\tjslet.Checker.test('Field.clone#fldName', fldName).required().isString();\r\n\t\t\r\n\t\tvar result = new jslet.data.Field(newDataset, {name: fldName, dataType: Z._dataType, detailDataset: Z._detailDataset});\r\n\t\tnewDataset = newDataset || this.dataset();\r\n\t\tresult.dataset(newDataset);\r\n\t\tresult.visible(Z._visible);\r\n\t\tif (Z._parent) {\r\n\t\t\tresult.parent(Z._parent.clone(Z._parent.name(), newDataset));\r\n\t\t}\r\n\t\tif (Z._children && Z._children.length > 0){\r\n\t\t\tvar childFlds = [], childFldObj;\r\n\t\t\tfor(var i = 0, cnt = Z._children.length; i < cnt; i++){\r\n\t\t\t\tchildFldObj = Z._children[i];\r\n\t\t\t\tchildFlds.push(childFldObj.clone(childFldObj.name(), newDataset));\r\n\t\t\t}\r\n\t\t\tresult.children(childFlds);\r\n\t\t}\r\n\t\t\r\n\t\tresult.length(Z._length);\r\n\t\tresult.scale(Z._scale);\r\n\t\tresult.alignment(Z._alignment);\r\n\t\tresult.defaultExpr(Z._defaultExpr);\r\n\t\tresult.defaultValue(Z._defaultValue);\r\n\t\tresult.label(Z._label);\r\n\t\tresult.displayLabel(Z._displayLabel);\r\n\t\t\r\n\t\tresult.shortName(Z._shortName);\r\n\t\tresult.tip(Z._tip);\r\n\t\tresult.displayWidth(Z._displayWidth);\r\n\t\tif (Z._editMask) {\r\n\t\t\tresult.editMask(Z._editMask.clone());\r\n\t\t}\r\n\t\tresult.displayOrder(Z._displayOrder);\r\n\t\tresult.tabIndex(Z._tabIndex);\r\n\t\tresult.displayFormat(Z._displayFormat);\r\n\t\tresult.formula(Z._formula);\r\n\t\tresult.unique(Z._unique);\r\n\t\tresult.required(Z._required);\r\n\t\tresult.readOnly(Z._readOnly);\r\n\t\tresult.disabled(Z._disabled);\r\n\t\tresult.unitConverted(Z._underted);\r\n\t\tif (Z._lookup) {\r\n\t\t\tresult.lookup(Z._lookup.clone(result));\r\n\t\t}\r\n\t\tresult.displayControl(Z._displayControl);\r\n\t\tresult.editControl(Z._editControl);\r\n\t\tresult.urlExpr(Z._urlExpr);\r\n\t\tresult.urlTarget(Z._urlTarget);\r\n\t\tresult.valueStyle(Z._valueStyle);\r\n\t\tresult.valueCountLimit(Z._valueCountLimit);\r\n\t\tresult.valueCountRange(Z._valueCountRange);\r\n\t\tresult.nullText(Z._nullText);\r\n\t\tresult.dataRange(Z._dataRange);\r\n\t\tif (Z._regularExpr) {\r\n\t\t\tresult.regularExpr(Z._regularExpr);\r\n\t\t}\r\n\t\tresult.antiXss(Z._antiXss);\r\n\t\tresult.customValidator(Z._customValidator);\r\n\t\tresult.customValueConverter(Z._customValueConverter);\r\n\t\tresult.customValueAccessor(Z._customValueAccessor);\r\n\t\tresult.validChars(Z._validChars);\r\n\t\t\r\n\t\tresult.mergeSame(Z._mergeSame);\r\n\t\tresult.mergeSameBy(Z._mergeSameBy);\r\n\t\tresult.fixedValue(Z._fixedValue);\r\n\t\t\r\n\t\tresult.valueFollow(Z._valueFollow);\r\n\t\tresult.trimBlank(Z._trimBlank);\r\n\t\tresult.focused(Z._focused);\r\n\t\tresult.encrypted(Z._encrypted);\r\n\t\tresult.aggregated(Z._aggregated);\r\n\t\tresult.aggregatedBy(Z._aggregatedBy);\r\n\r\n\t\tresult.trueValue(Z._trueValue);\r\n\t\tresult.falseValue(Z._falseValue);\r\n\t\tresult.trueText(Z._trueText);\r\n\t\tresult.falseText(Z._falseText);\r\n\t\tresult._addRelation();\r\n\t\treturn result;\r\n\t},\r\n\t\r\n\t_clearFieldCache: function() {\r\n\t\tvar Z = this;\r\n\t\tif(Z._dataset && Z._fieldName) {\r\n\t\t\tjslet.data.FieldValueCache.clearAll(Z._dataset, Z._fieldName);\r\n\t\t}\r\n\t}\r\n\t\r\n};\r\n\r\njslet.data.Field.URLTARGETBLANK = '_blank';\r\n\r\n\r\n/**\r\n * @class\r\n * \r\n * A lookup field represents a field value is from another dataset named \"Lookup Dataset\";\r\n * \r\n * @param {jslet.data.Field} hostFieldObject Host field object.\r\n * @param {Object} lookupConfig Lookup field configuration. Its member must be same the properties of jslet.data.FieldLookup.\r\n */\r\njslet.data.FieldLookup = function(hostFldObj, lookupCfg) {\r\n\tjslet.Checker.test('FieldLookup#hostFldObj', hostFldObj).required().isClass(jslet.data.Field.className);\r\n\tjslet.Checker.test('FieldLookup#lookupCfg', lookupCfg).required();\r\n\tif (jslet.isString(lookupCfg)) {\r\n\t\tlookupCfg = lookupCfg.trim();\r\n\t\tif(lookupCfg) {\r\n\t\t\tif(lookupCfg.trim().startsWith('{')) {\r\n\t\t\t\tlookupCfg = jslet.JSON.parse(lookupCfg);\r\n\t\t\t} else {\r\n\t\t\t\tlookupCfg = {dataset: lookupCfg};\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tjslet.Checker.test('FieldLookup#lookupCfg.dataset', lookupCfg.dataset).required();\r\n\tvar Z = this;\r\n\tZ._hostDatasetName = hostFldObj.dataset().name();\r\n\tZ._hostField = hostFldObj;//The field which contains this lookup field object.\r\n\tZ._dataset = null;\r\n\tZ._realDataset = null;\r\n\tZ._dsParsed = false;\r\n\tZ._keyField = null;\r\n\tZ._codeField = null;\r\n\tZ._nameField = null;\r\n\tZ._codeFormat = null;\r\n\tZ._displayFields = null;\r\n\tZ._innerdisplayFields = null;\r\n\tZ._parentField = null;\r\n\tZ._onlyLeafLevel = true;\r\n\tZ._returnFieldMap = null;\r\n\tZ._editFilter = null;\r\n\tZ._editItemDisabled = false;\r\n\tZ._onlyLookupFields = false;\r\n\tZ._includeFields = null;\r\n\tZ._excludeFields = null;\r\n\tZ._visibleFields = null;\r\n\tZ._create(lookupCfg);\r\n};\r\njslet.data.FieldLookup.className = 'jslet.data.FieldLookup';\r\n\r\njslet.data.FieldLookup.prototype = {\r\n\tclassName: jslet.data.FieldLookup.className,\r\n\t\r\n\t_create: function(param) {\r\n\t\tvar Z = this;\r\n\t\tif (param.realDataset !== undefined) {\r\n\t\t\tZ.realDataset(param.realDataset);\r\n\t\t}\r\n\t\t\r\n\t\tif (param.keyField !== undefined) {\r\n\t\t\tZ.keyField(param.keyField);\r\n\t\t}\r\n\t\tif (param.codeField !== undefined) {\r\n\t\t\tZ.codeField(param.codeField);\r\n\t\t}\r\n\t\tif (param.nameField !== undefined) {\r\n\t\t\tZ.nameField(param.nameField);\r\n\t\t}\r\n\t\tif (param.parentField !== undefined) {\r\n\t\t\tZ.parentField(param.parentField);\r\n\t\t}\r\n\t\tif (param.displayFields !== undefined) {\r\n\t\t\tZ.displayFields(param.displayFields);\r\n\t\t}\r\n\t\tif (param.onlyLeafLevel !== undefined) {\r\n\t\t\tZ.onlyLeafLevel(param.onlyLeafLevel);\r\n\t\t}\r\n\t\tif (param.returnFieldMap !== undefined) {\r\n\t\t\tZ.returnFieldMap(param.returnFieldMap);\r\n\t\t}\r\n\t\tif (param.editFilter !== undefined) {\r\n\t\t\tZ.editFilter(param.editFilter);\r\n\t\t}\r\n\t\tif (param.editItemDisabled !== undefined) {\r\n\t\t\tZ.editItemDisabled(param.editItemDisabled);\r\n\t\t}\r\n\t\t\r\n\t\tif (param.onlyLookupFields !== undefined) {\r\n\t\t\tZ.onlyLookupFields(param.onlyLookupFields);\r\n\t\t}\r\n\t\t\r\n\t\tif (param.includeFields !== undefined) {\r\n\t\t\tZ.includeFields(param.includeFields);\r\n\t\t}\r\n\t\t\r\n\t\tif (param.excludeFields !== undefined) {\r\n\t\t\tZ.excludeFields(param.excludeFields);\r\n\t\t}\r\n\t\t\r\n\t\tif (param.visibleFields !== undefined) {\r\n\t\t\tZ.visibleFields(param.visibleFields);\r\n\t\t}\r\n\t\t\r\n\t\tZ.dataset(param.dataset);\r\n\t},\r\n\t\r\n\tclone: function(hostFldObj){\r\n\t\tvar Z = this, \r\n\t\t\tresult = new jslet.data.FieldLookup(hostFldObj, {dataset: Z._dataset});\r\n\t\tresult.keyField(Z._keyField);\r\n\t\tresult.codeField(Z._codeField);\r\n\t\tresult.nameField(Z._nameField);\r\n\t\tresult.displayFields(Z._displayFields);\r\n\t\tresult.parentField(Z._parentField);\r\n\t\tresult.onlyLeafLevel(Z._onlyLeafLevel);\r\n\t\tresult.returnFieldMap(Z._returnFieldMap);\r\n\t\tresult.editFilter(Z._editFilter);\r\n\t\tresult.editItemDisabled(Z._editItemDisabled);\r\n\t\t\r\n\t\tresult.onlyLookupFields(Z._onlyLookupFields);\r\n\t\tresult.includeFields(Z._includeFields);\r\n\t\tresult.excludeFields(Z._excludeFields);\r\n\t\tresult.visibleFields(Z._visibleFields);\r\n\t\treturn result;\r\n\t},\r\n\t\r\n\ttoPlanObject: function() {\r\n\t\tvar Z = this,\r\n\t\t\tresult = {};\r\n\t\tresult.dataset = Z._dataset;\r\n\t\tresult.keyField = Z._keyField;\r\n\t\tresult.codeField = Z._codeField;\r\n\t\tresult.nameField = Z._nameField;\r\n\t\tresult.displayFields = Z._displayFields;\r\n\t\tresult.parentField = Z._parentField;\r\n\t\tresult.onlyLeafLevel = Z._onlyLeafLevel;\r\n\t\tresult.returnFieldMap = Z._returnFieldMap;\r\n\t\tresult.editFilter = Z._editFilter;\r\n\t\tresult.editItemDisabled = Z._editItemDisabled;\r\n\t\t\r\n\t\tresult.onlyLookupFields = Z._onlyLookupFields;\r\n\t\tresult.includeFields = Z._includeFields;\r\n\t\tresult.excludeFields = Z._excludeFields;\r\n\t\tresult.visibleFields = Z._visibleFields;\r\n\t\treturn result;\r\n\t},\r\n\t\r\n\thostField: function(fldObj) {\r\n\t\tvar Z = this;\r\n\t\tif (fldObj === undefined) {\r\n\t\t\treturn Z._hostField;\r\n\t\t}\r\n\t\tjslet.Checker.test('FieldLookup.hostField', fldObj).isClass(jslet.data.Field.className);\r\n\t\tZ._hostField = fldObj;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Fire lookup setting changed event.\r\n\t */\r\n\t_fireLookupChangedEvent: function() {\r\n\t\tvar Z = this;\r\n\t\tif(!Z._hostField) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tZ._hostField._fireLookupChangedEvent();\r\n\t},\r\n\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get lookup dataset.\r\n\t * \r\n\t * @param {jslet.data.Dataset | undefined} dataset Lookup dataset.\r\n\t * \r\n\t * @return {this | jslet.data.Dataset}\r\n\t */\r\n\tdataset: function(lkdataset) {\r\n\t\tvar Z = this;\r\n\t\tif (lkdataset === undefined) {\r\n\t\t\tif(!Z._dsParsed) {\r\n\t\t\t\tZ.dataset(Z._dataset);\r\n\t\t\t\tif(!Z._dsParsed) {\r\n\t\t\t\t\tthrow new Error('Not found lookup dataset: ' + Z._dataset);\r\n\t\t\t\t}\t\t\t}\r\n\t\t\t\r\n\t\t\treturn Z._dataset;\r\n\t\t}\r\n\t\tvar lkDsName;\r\n\t\tif(lkdataset) {\r\n\t\t\tif (typeof(lkdataset) == 'string') {\r\n\t\t\t\tlkDsName = lkdataset;\r\n\t\t\t} else {\r\n\t\t\t\tlkDsName = lkdataset.name();\r\n\t\t\t}\r\n\t\t\tif(lkDsName == Z._hostDatasetName) {\r\n\t\t\t\tthrow new Error(jsletlocale.Dataset.LookupDatasetNotSameAsHost);\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar lkDsObj = lkdataset;\r\n\t\tif (typeof(lkDsObj) == 'string') {\r\n\t\t\tlkDsObj = jslet.data.getDataset(lkDsObj);\r\n\t\t\tif(!lkDsObj) {\r\n\t\t\t\tvar creatingOpt = {datasetType: jslet.data.DatasetType.LOOKUP, \r\n\t\t\t\t\t\tonlyLookupFields: (Z._onlyLookupFields === undefined || Z._onlyLookupFields)};\r\n\t\t\t\tif(Z._includeFields) {\r\n\t\t\t\t\tcreatingOpt.includeFields = Z._includeFields;\r\n\t\t\t\t}\r\n\t\t\t\tif(Z._excludeFields) {\r\n\t\t\t\t\tcreatingOpt.excludeFields = Z._excludeFields;\r\n\t\t\t\t}\r\n\t\t\t\tif(Z._visibleFields) {\r\n\t\t\t\t\tcreatingOpt.visibleFields = Z._visibleFields;\r\n\t\t\t\t}\r\n\t\t\t\tif(Z._realDataset) {\r\n\t\t\t\t\tcreatingOpt.realDatasetName = Z._realDataset;\r\n\t\t\t\t}\r\n\t\t\t\tif(Z._hostField.dataset().createdByFactory) {\r\n\t\t\t\t    jslet.data.datasetFactory.createDataset(lkdataset, creatingOpt);\r\n\t\t\t\t} else if(jslet.global.dataset.onDatasetCreating &&\r\n\t\t\t\t\tjslet.data.defaultDatasetCreatingManager.allowCreatingDataset(Z._hostDatasetName)) {\r\n\t\t\t\t\tjslet.data.createDynamicDataset(lkdataset, creatingOpt, Z._hostDatasetName);\r\n\t\t\t\t} \r\n\t\t\t}\r\n\t\t}\r\n\t\tif(lkDsObj) {\r\n\t\t\tZ._dataset = lkDsObj;\r\n\t\t\tZ._dataset.autoRefreshHostDataset(true);\r\n\t\t\tZ._dsParsed = true;\r\n\t\t\tZ._fireLookupChangedEvent();\r\n\t\t} else {\r\n\t\t\tZ._dataset = lkdataset;\r\n\t\t\tZ._dsParsed = false;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get key field. <br />\r\n\t * Key field is optional, if it is null, it will use LookupDataset.keyField instead. \r\n\t * \r\n\t * @param {String | undefined} keyFldName Key field name.\r\n\t * \r\n\t * @return {this | String}\r\n\t */\r\n\trealDataset: function(realDataset) {\r\n\t\tvar Z = this;\r\n\t\tif (realDataset === undefined){\r\n\t\t\treturn Z._realDataset;\r\n\t\t}\r\n\r\n\t\tjslet.Checker.test('FieldLookup.realDataset', realDataset).isString();\r\n\t\tZ._realDataset = realDataset;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get key field. <br />\r\n\t * Key field is optional, if it is null, it will use LookupDataset.keyField instead. \r\n\t * \r\n\t * @param {String | undefined} keyFldName Key field name.\r\n\t * \r\n\t * @return {this | String}\r\n\t */\r\n\tkeyField: function(keyFldName) {\r\n\t\tvar Z = this;\r\n\t\tif (keyFldName === undefined){\r\n\t\t\treturn Z._keyField || Z.dataset().keyField();\r\n\t\t}\r\n\r\n\t\tjslet.Checker.test('FieldLookup.keyField', keyFldName).isString();\r\n\t\tZ._keyField = jslet.trim(keyFldName);\r\n\t\tZ._fireLookupChangedEvent();\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get code field. <br />\r\n\t * Code field is optional, if it is null, it will use LookupDataset.codeField instead. \r\n\t * \r\n\t * @param {String | undefined} codeFldName Code field name.\r\n\t * \r\n\t * @return {this | String}\r\n\t */\r\n\tcodeField: function(codeFldName) {\r\n\t\tvar Z = this;\r\n\t\tif (codeFldName === undefined){\r\n\t\t\treturn Z._codeField || Z.dataset().codeField();\r\n\t\t}\r\n\r\n\t\tjslet.Checker.test('FieldLookup.codeField', codeFldName).isString();\r\n\t\tZ._codeField = jslet.trim(codeFldName);\r\n\t\tZ._fireLookupChangedEvent();\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\tcodeFormat: function(format) {\r\n\t\tvar Z = this;\r\n\t\tif (format === undefined) {\r\n\t\t\treturn Z._codeFormat;\r\n\t\t}\r\n\r\n\t\tjslet.Checker.test('FieldLookup.codeFormat', format).isString();\r\n\t\tZ._codeFormat = jslet.trim(format);\r\n\t\tZ._fireLookupChangedEvent();\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get name field. <br />\r\n\t * Name field is optional, if it is null, it will use LookupDataset.nameField instead. \r\n\t * \r\n\t * @param {String | undefined} nameFldName Name field name.\r\n\t * \r\n\t * @return {this | String}\r\n\t */\r\n\tnameField: function(nameFldName) {\r\n\t\tvar Z = this;\r\n\t\tif (nameFldName === undefined){\r\n\t\t\treturn Z._nameField || Z.dataset().nameField();\r\n\t\t}\r\n\r\n\t\tjslet.Checker.test('FieldLookup.nameField', nameFldName).isString();\r\n\t\tZ._nameField = jslet.trim(nameFldName);\r\n\t\tZ._fireLookupChangedEvent();\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Set or get parent field. <br />\r\n\t * Parent field is optional, if it is null, it will use LookupDataset.parentField instead. \r\n\t * \r\n\t * @param {String | undefined} parentFldName Parent field name.\r\n\t * \r\n\t * @return {this | String}\r\n\t */\r\n\tparentField: function(parentFldName) {\r\n\t\tvar Z = this;\r\n\t\tif (parentFldName === undefined){\r\n\t\t\treturn Z._parentField || Z.dataset().parentField();\r\n\t\t}\r\n\r\n\t\tjslet.Checker.test('FieldLookup.parentField', parentFldName).isString();\r\n\t\tZ._parentField = jslet.trim(parentFldName);\r\n\t\tZ._fireLookupChangedEvent();\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * An expression for display field value. Example:\r\n\t * \r\n\t *     @example\r\n\t *     lookupFldObj.displayFields('[code]-[name]'); //set property value\r\n\t *     lookupFldObj.displayFields(); //get property value.\r\n\t *    \r\n\t * @param {String | undefined} displayFields Display fields expression.\r\n\t * \r\n\t * @return {this | String}\r\n\t */\r\n\tdisplayFields: function(fieldExpr) {\r\n\t\tvar Z = this;\r\n\t\tif (fieldExpr === undefined) {\r\n\t\t\treturn Z._displayFields? Z._displayFields: this.getDefaultDisplayFields();\r\n\t\t}\r\n\t\tjslet.Checker.test('FieldLookup.displayFields', fieldExpr).isString();\r\n\t\tfieldExpr = jslet.trim(fieldExpr);\r\n\t\tif (Z._displayFields != fieldExpr) {\r\n\t\t\tZ._displayFields = fieldExpr;\r\n\t\t\tZ._innerdisplayFields = null;\r\n\t\t\tif(Z._hostField) {\r\n\t\t\t\tZ._hostField._clearFieldCache();\r\n\t\t\t}\r\n\t\t}\r\n\t\tZ._fireLookupChangedEvent();\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Return extra field values of lookup dataset into main dataset. <br />\r\n\t * Map format: {\"main dataset field name\":\"lookup dataset field name\", ...}. <br /> \r\n\t * Example:\r\n\t * \r\n\t *     @example\r\n\t *     lookupObj.returnFieldMap({hostDsFieldName: lookupDsFieldName}); //Set property value\r\n\t *     lookupObj.returnFieldMap(); //Get property value\r\n\t *     \r\n\t *     var dsDepartment = jslet.data.getDataset('customer'); //Fields: custNo, custName, contactor\r\n\t *     var dsSales = jslet.data.getDataset('sales'); //Fields: customer, customerName, contactor\r\n\t *     \r\n\t *     dsSales.getField('customer').lookup().returnFieldMap({\"customerName\": \"custName\", \"contactor\": \"contactor\"});\r\n\t *     \r\n\t *     dsSales.setFieldValue('customer', 23); //Add customer(custName: 'IBM', contactor: 'James')\r\n\t *     \r\n\t *     //After customer is set, the field value of 'customerName' and 'contactor' will be set automatically.\r\n\t *     dsSales.getFieldValue('customerName'); //return 'IBM'\r\n\t *     dsSales.getFieldValue('contactor'); //return 'James'\r\n\t *     \r\n\t *       \r\n\t * @param {Object | undefined} returnFieldMap The key is master dataset's field name, and the value is the lookup dataset's field name.\r\n\t * \r\n\t * @return {this | Object}\r\n\t */\r\n\treturnFieldMap: function(returnFieldMap) {\r\n\t\tif(returnFieldMap === undefined) {\r\n\t\t\treturn this._returnFieldMap;\r\n\t\t}\r\n\t\tjslet.Checker.test('FieldLookup.returnFieldMap', returnFieldMap).isObject();\r\n\t\tthis._returnFieldMap = returnFieldMap;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tgetDefaultDisplayFields: function() {\r\n//\t\tvar expr = '[',fldName = this.codeField();\r\n//\t\tif (fldName) {\r\n//\t\t\texpr += fldName + ']';\r\n//\t\t}\r\n//\t\tfldName = this.nameField();\r\n//\r\n//\t\tif (fldName) {\r\n//\t\t\texpr += '+\"-\"+[';\r\n//\t\t\texpr += fldName + ']';\r\n//\t\t}\r\n//\t\tif (expr === '') {\r\n//\t\t\texpr = '\"Not set displayFields\"';\r\n//\t\t}\r\n//\t\t\r\n\t\tvar expr = '[' + (this.nameField() || this.codeField() || this.keyField()) + ']';\r\n\t\treturn expr;\r\n\t},\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tgetCurrentDisplayValue: function() {\r\n\t\tvar Z = this;\r\n\t\tif (Z._displayFields === null) {\r\n\t\t\tthis.displayFields(this.getDefaultDisplayFields());\r\n\t\t}\r\n\t\tif(!Z._innerdisplayFields) {\r\n\t\t\tZ._innerdisplayFields = new jslet.data.Expression(Z.dataset(), Z.displayFields());\r\n\t\t}\r\n\t\t\r\n\t\treturn Z._innerdisplayFields.eval();\r\n\t},\r\n\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Identify whether user can select leaf level item if lookup dataset is a tree-style dataset.\r\n\t * \r\n\t * @param {Boolean | undefined} onlyLeafLevel True(Default) - Only leaf level item user can selects, false - otherwise.\r\n\t * @return {this | Boolean}\r\n\t */\r\n\tonlyLeafLevel: function(flag) {\r\n\t\tvar Z = this;\r\n\t\tif (flag === undefined) {\r\n\t\t\treturn Z._onlyLeafLevel;\r\n\t\t}\r\n\t\tZ._onlyLeafLevel = flag ? true: false;\r\n\t\tZ._fireLookupChangedEvent();\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * An expression to filter lookup dataset records when editing the host dataset. Example:\r\n\t * \r\n\t *     @example\r\n\t *     lookupFldObj.editFilter('like([code], \"101%\" ');\r\n\t * \r\n\t * @param {String | undefined} editFilter An expression to filter the lookup dataset.\r\n\t * \r\n\t * @return {this | String}\r\n\t */\r\n\teditFilter: function(editFilter) {\r\n\t\tvar Z = this;\r\n\t\tif (editFilter === undefined) {\r\n\t\t\treturn Z._editFilter;\r\n\t\t}\r\n\t\tjslet.Checker.test('FieldLookup.editFilter', editFilter).isString();\r\n\t\t\r\n\t\tif (Z._editFilter != editFilter) {\r\n\t\t\tZ._editFilter = editFilter;\r\n\t\t}\r\n\t\tZ._fireLookupChangedEvent();\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * Disable or hide the edit item which not match the 'editFilter'.\r\n\t * editItemDisabled is true, the non-matched item will be disabled, not hidden.\r\n\t * \r\n\t * @param {Boolean | undefined} editItemDisabled - true: disable edit item, false: hide edit item, default is true.\r\n\t * \r\n\t * @return {this | Boolean}\r\n\t */\r\n\teditItemDisabled: function(editItemDisabled) {\r\n\t\tvar Z = this;\r\n\t\tif (editItemDisabled === undefined) {\r\n\t\t\treturn Z._editItemDisabled;\r\n\t\t}\r\n\t\t\r\n\t\tZ._editItemDisabled = editItemDisabled? true: false;\r\n\t\tZ._fireLookupChangedEvent();\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * It's used to create lookup dataset.\r\n\t * if onlyLookupFields is true, it will create dataset with fields \r\n\t * which specified by the following dataset's properties: keyField, codeField, nameField, parentField and statusField;\r\n\t * \r\n\t * @param{Boolean | undefined} onlyLookupFields\r\n\t * \r\n\t * @return {this | Boolean}\r\n\t */\r\n\tonlyLookupFields: function(onlyLookupFields) {\r\n\t\tvar Z = this;\r\n\t\tif (onlyLookupFields === undefined) {\r\n\t\t\treturn Z._onlyLookupFields;\r\n\t\t}\r\n\t\t\r\n\t\tZ._onlyLookupFields = onlyLookupFields? true: false;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * It's used to create lookup dataset.\r\n\t * Creating lookup dataset with the specified field names.\r\n\t * \r\n\t * @param {String[] | undefined} includeFields.\r\n\t * \r\n\t * @return {this | String[]}\r\n\t */\r\n\tincludeFields: function(includeFields) {\r\n\t\tvar Z = this;\r\n\t\tif (includeFields === undefined) {\r\n\t\t\treturn Z._includeFields;\r\n\t\t}\r\n\t\t\r\n\t\tjslet.Checker.test('FieldLookup.includeFields', includeFields).isArray();\r\n\t\tZ._includeFields = includeFields;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * It's used to create lookup dataset.\r\n\t * Creating lookup dataset with the specified field names.\r\n\t * \r\n\t * @param{String[] | undefined} excludeFields.\r\n\t * \r\n\t * @return {this | String[]}\r\n\t */\r\n\texcludeFields: function(excludeFields) {\r\n\t\tvar Z = this;\r\n\t\tif (excludeFields === undefined) {\r\n\t\t\treturn Z._excludeFields;\r\n\t\t}\r\n\t\t\r\n\t\tjslet.Checker.test('FieldLookup.excludeFields', excludeFields).isArray();\r\n\t\tZ._excludeFields = excludeFields;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @property\r\n\t * \r\n\t * It's used to create lookup dataset to specified which fields is visible.\r\n\t * \r\n\t * @param{String[] | undefined} visibleFields Visible fields.\r\n\t * \r\n\t * @return {this | String[]}\r\n\t */\r\n\tvisibleFields: function(visibleFields) {\r\n\t\tvar Z = this;\r\n\t\tif (visibleFields === undefined) {\r\n\t\t\treturn Z._visibleFields;\r\n\t\t}\r\n\t\t\r\n\t\tjslet.Checker.test('FieldLookup.visibleFields', visibleFields).isArray();\r\n\t\tZ._visibleFields = visibleFields;\r\n\t\treturn this;\r\n\t}\r\n\t\r\n};\r\n\r\njslet.data.CrossFieldSource = function() {\r\n\tvar Z = this;\r\n\t\r\n\tZ._sourceType = 0; //Optional value: 0-field, 1-custom'\r\n\tZ._sourceField = null;\r\n\tZ._lookupLevel = 1;\r\n\t\r\n\tZ._labels = null;\r\n\tZ._values = null;\r\n\tZ._matchExpr = null;\r\n\t\r\n\tZ._hideEmptyValue = false;\r\n\tZ._hasSubtotal = true;\r\n\tZ._subtotalPosition = 1; //Optional value: 0-first, 1-end\r\n\tZ._subtotalLabel = null;\t\t\r\n};\r\njslet.data.CrossFieldSource.className = 'jslet.data.CrossFieldSource';\r\n\r\njslet.data.CrossFieldSource.prototype = {\r\n\tclassName: jslet.data.CrossFieldSource.className,\r\n\t\r\n\tclone: function(){\r\n\t\tvar Z = this, \r\n\t\t\tresult = new jslet.data.CrossFieldSource();\r\n\t\tresult.sourceType(Z._sourceType);\r\n\t\tresult.sourceField(Z._sourceField);\r\n\t\tresult.lookupLevel(Z._lookupLevel);\r\n\t\tresult.labels(Z._labels);\r\n\t\tresult.values(Z._values);\r\n\t\tresult.matchExpr(Z._matchExpr);\r\n\t\tresult.hideEmptyValue(Z._hideEmptyValue);\r\n\t\tresult.hasSubtotal(Z._hasSubtotal);\r\n\t\tresult.subtotalPosition(Z._subtotalPosition);\r\n\t\tresult.subtotalLabel(Z._subtotalLabel);\r\n\t\treturn result;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Cross source type, optional value: 0 - field, 1 - custom.\r\n\t * \r\n\t * @param {Integer | undefined} sourceType Cross source type.\r\n\t * @return {this | Integer}\r\n\t */\r\n\tsourceType: function(sourceType) {\r\n\t\tvar Z = this;\r\n\t\tif (sourceType === undefined) {\r\n\t\t\treturn Z._sourceType;\r\n\t\t}\r\n\t\tjslet.Checker.test('CrossFieldSource.sourceType', sourceType).isNumber();\r\n\t\tZ._sourceType = sourceType;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Identify the field name which is used to create cross field. Avaliable when crossType is 0-Field.\r\n\t * sourceField must be a lookup field and required. \r\n\t * \r\n\t * @param {String | undefined} sourceField The field name which is used to create cross field.\r\n\t * @return {this | String}\r\n\t */\r\n\tsourceField: function(sourceField) {\r\n\t\tvar Z = this;\r\n\t\tif (sourceField === undefined) {\r\n\t\t\treturn Z._sourceField;\r\n\t\t}\r\n\t\tjslet.Checker.test('CrossFieldSource.sourceField', sourceField).isString();\r\n\t\tZ._sourceField = sourceField;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Identify cross field labels. Avaliable when crossType is 1-Field.\r\n\t * If labels is null, use \"values\" as \"labels\" instead.\r\n\t * \r\n\t * @param {String[] | undefined} labels The cross field labels.\r\n\t * @return {this | String[]}\r\n\t */\r\n\tlabels: function(labels) {\r\n\t\tvar Z = this;\r\n\t\tif (labels === undefined) {\r\n\t\t\treturn Z._labels;\r\n\t\t}\r\n\t\tjslet.Checker.test('CrossFieldSource.labels', labels).isArray();\r\n\t\tZ._labels = labels;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Identify cross field cross values. Avaliable when crossType is 1-Field.\r\n\t * If crossType is 1-Field, \"values\" is reqired.\r\n\t * \r\n\t * @param {Object[] | undefined} values The cross field source values.\r\n\t * @return {this | Object[]}\r\n\t */\r\n\tvalues: function(values) {\r\n\t\tvar Z = this;\r\n\t\tif (values === undefined) {\r\n\t\t\treturn Z._values;\r\n\t\t}\r\n\t\tjslet.Checker.test('CrossFieldSource.values', values).isArray();\r\n\t\tZ._values = values;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Identify the field name which is used to create cross field. Avaliable when crossType is 1-Custom.\r\n\t * If crossType is 1-Custom, matchExpr is required. \r\n\t * \r\n\t * @param {String | undefined} matchExpr The expression which use to match value.\r\n\t * @return {this | String}\r\n\t */\r\n\tmatchExpr: function(matchExpr) {\r\n\t\tvar Z = this;\r\n\t\tif (matchExpr === undefined) {\r\n\t\t\treturn Z._matchExpr;\r\n\t\t}\r\n\t\tjslet.Checker.test('CrossFieldSource.matchExpr', matchExpr).isString();\r\n\t\tZ._matchExpr = matchExpr;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Identify it has subtotal column or not.\r\n\t * \r\n\t * @param {Boolean | undefined} hasSubtotal True - has subtotal, false otherwise.\r\n\t * @return {this | Boolean}\r\n\t */\r\n\thasSubtotal: function(hasSubtotal) {\r\n\t\tvar Z = this;\r\n\t\tif (hasSubtotal === undefined) {\r\n\t\t\treturn Z._hasSubtotal;\r\n\t\t}\r\n\t\tjslet.Checker.test('CrossFieldSource.hasSubtotal', hasSubtotal).isString();\r\n\t\tZ._hasSubtotal = hasSubtotal;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Identify the \"subtotal\" column position. Avaliable when \"hasSubtotal\" is true;\r\n\t * Optional Value: 0 - At first column, 1 - At last column.\r\n\t * \r\n\t * @param {Integer | undefined} subtotalPosition subtotal column position.\r\n\t * @return {this | Integer}\r\n\t */\r\n\tsubtotalPosition: function(subtotalPosition) {\r\n\t\tvar Z = this;\r\n\t\tif (subtotalPosition === undefined) {\r\n\t\t\treturn Z._subtotalPosition;\r\n\t\t}\r\n\t\tjslet.Checker.test('CrossFieldSource.subtotalPosition', subtotalPosition).isNumber();\r\n\t\tZ._subtotalPosition = subtotalPosition;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Subtotal label. Avaliable when \"hasSubtotal\" is true;\r\n\t * \r\n\t * @param {String | undefined} subtotalLabel Subtotal label.\r\n\t * @return {this | String}\r\n\t */\r\n\tsubtotalLabel: function(subtotalLabel) {\r\n\t\tvar Z = this;\r\n\t\tif (subtotalLabel === undefined) {\r\n\t\t\treturn Z._subtotalLabel;\r\n\t\t}\r\n\t\tjslet.Checker.test('CrossFieldSource.subtotalLabel', subtotalLabel).isString();\r\n\t\tZ._subtotalLabel = subtotalLabel;\r\n\t\treturn this;\r\n\t}\r\n};\r\n\r\njslet.data.createCrossFieldSource = function(cfg) {\r\n\tvar result = new jslet.data.CrossFieldSource();\r\n\tvar srcType = cfg.sourceType || 0;\r\n\tresult.sourceType(srcType);\r\n\tif(cfg.hasSubtotal !== undefined) {\r\n\t\tresult.hasSubtotal(cfg.hasSubtotal);\r\n\t}\r\n\t\r\n\tif(cfg.subtotalPosition !== undefined) {\r\n\t\tresult.subtotalPosition(cfg.subtotalPosition);\r\n\t}\r\n\t\r\n\tif(cfg.subtotalLabel !== undefined) {\r\n\t\tresult.subtotalLabel(cfg.subtotalLabel);\r\n\t}\r\n\t\r\n\tif(srcType === 0) {\r\n\t\tresult.sourceField(cfg.sourceField);\r\n\t} else {\r\n\t\tresult.labels(cfg.labels);\r\n\t\tresult.values(cfg.values);\r\n\t\tresult.matchExpr(cfg.matchExpr);\r\n\t}\r\n\treturn result;\r\n};\r\n\n/**\r\n * @class\r\n */\r\njslet.data.FilterDataset = function(hostDataset) {\r\n\tif(!jslet.data.getDataset('ds_logical_opr_')) {\r\n\t\tvar dsObj = new jslet.data.Dataset({name: 'ds_logical_opr_', isEnum: true, records: {'and': jsletlocale.FilterDataset.and, 'or': jsletlocale.FilterDataset.or}});\r\n\t\tdsObj.isFireGlobalEvent(false);\r\n\t}\r\n\t\r\n\tif(!jslet.data.getDataset('ds_operator_')) {\r\n\t\tvar fldCfg = [{name: 'code', type: 'S', length: 10, label:'code'},\r\n\t                  {name: 'name', type: 'S', length: 30, label:'name'},\r\n\t                  {name: 'range', type: 'S', length: 30, label:'range'}];\r\n\t\t\r\n\t\tvar dsOperator = new jslet.data.Dataset({name: 'ds_operator_', fields: fldCfg, \r\n\t\t\t\tkeyField: 'code', codeField: 'code', nameField: 'name', autoRefreshHostDataset: true, isFireGlobalEvent: false});\r\n\t\tdsOperator.records([{code: '==', name: jsletlocale.FilterDataset.equal, range: 'NDSBLH'},\r\n\t\t                     {code: '!=', name: jsletlocale.FilterDataset.notEqual, range: 'NDS'},\r\n\t\t                     {code: '>', name: jsletlocale.FilterDataset.greatThan, range: 'ND'},\r\n\t\t                     {code: '>=', name: jsletlocale.FilterDataset.greatThanAndEqual, range: 'ND'},\r\n\t\t                     {code: '<', name: jsletlocale.FilterDataset.lessThan, range: 'ND'},\r\n\t\t                     {code: '<=', name: jsletlocale.FilterDataset.lessThanAndEqual, range: 'ND'},\r\n\t\t                     \r\n\t\t                     {code: 'likeany', name: jsletlocale.FilterDataset.likeany, range: 'S'},\r\n\t\t                     {code: 'likefirst', name: jsletlocale.FilterDataset.likefirst, range: 'S'},\r\n\t\t                     {code: 'likelast', name: jsletlocale.FilterDataset.likelast, range: 'S'},\r\n\t\t                     {code: 'between', name: jsletlocale.FilterDataset.between, range: 'NDS'},\r\n\t\r\n\t\t                     {code: 'select', name: jsletlocale.FilterDataset.select, range: 'LH'},\r\n\t\t                     {code: 'selfchildren0', name: jsletlocale.FilterDataset.selfchildren0, range: 'H'},\r\n\t\t                     {code: 'children0', name: jsletlocale.FilterDataset.children0, range: 'H'},\r\n\t\t                     {code: 'selfchildren1', name: jsletlocale.FilterDataset.selfchildren1, range: 'H'},\r\n\t\t                     {code: 'children1', name: jsletlocale.FilterDataset.children1, range: 'H'}\r\n\t\t                     ]);\r\n\t}\r\n\tthis._hostDataset = hostDataset;\r\n\tthis._filterDataset = null;\r\n\tthis._varValues = null;\r\n};\r\n\r\njslet.data.FilterDataset.prototype = {\r\n\t/**\r\n\t * Get filter dataset, if not found, generate it.\r\n\t * \r\n\t * @return {jslet.data.Dataset}\r\n\t */\r\n\tfilterDataset: function() {\r\n\t\tvar Z = this;\r\n\t\tif(Z._filterDataset) {\r\n\t\t\treturn Z._filterDataset;\r\n\t\t}\r\n\t\t\r\n\t\tvar id =  jslet.nextId();\r\n\t\tvar fldCfg = [\r\n            {name: 'name', type: 'S', length: 30, label: 'Field Code'}, \r\n            {name: 'label', type: 'S', length: 50, label: 'Field Name'}, \r\n            {name: 'dataType', type: 'S', length: 2, label: 'Data Type'}, \r\n            {name: 'parentName', type: 'S', length: 30, label: 'Parent Field Code'}, \r\n\t\t];\r\n\t\tvar dsFields = jslet.data.createDataset('ds_fields_' + id, fldCfg, \r\n\t\t\t\t{keyField: 'name', codeField: 'name', nameField: 'label', parentField: 'parentName', autoRefreshHostDataset: true, isFireGlobalEvent: false});\r\n\t\t\r\n\t\tvar fieldLabels = [];\r\n\t\tZ._appendFields(Z._hostDataset, fieldLabels);\r\n\t\tdsFields.records(fieldLabels);\r\n\t\t\r\n\t\tfunction doProxyFieldChanged(dataRec, proxyFldName, proxyFldObj) {\r\n\t\t\tif(proxyFldName.endsWith('.Y') || proxyFldName.endsWith('.M') || proxyFldName.endsWith('.YM')) {\r\n\t\t\t\tproxyFldObj.dataType('N');\r\n\t\t\t\tproxyFldObj.length(10);\r\n\t\t\t\tproxyFldObj.scale(0);\r\n\t\t\t\tproxyFldObj.editMask(null);\r\n\t\t\t\tproxyFldObj.displayFormat(null);\r\n\t\t\t\tproxyFldObj.dateFormat(null);\r\n\t\t\t\tproxyFldObj.displayControl(null);\r\n\t\t\t\tproxyFldObj.validChars(null);\r\n\t\t\t\tproxyFldObj.lookup(null);\r\n\t\t\t\tproxyFldObj.editControl('DBText');\r\n\t\t\t\tproxyFldObj.valueStyle(null);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar hostFldObj = jslet.data.getDataset(Z._hostDataset).getField(proxyFldName);\r\n\t\t\tproxyFldObj.dataType(hostFldObj.dataType());\r\n\t\t\tproxyFldObj.length(hostFldObj.length());\r\n\t\t\tproxyFldObj.scale(hostFldObj.scale());\r\n\t\t\tproxyFldObj.editMask(hostFldObj.editMask());\r\n\r\n\t\t\tproxyFldObj.displayFormat(hostFldObj.displayFormat());\r\n\t\t\tproxyFldObj.dateFormat(hostFldObj.dateFormat());\r\n\t\t\tproxyFldObj.displayControl(hostFldObj.displayControl());\r\n\t\t\tproxyFldObj.validChars(hostFldObj.validChars());\r\n\t\t\tif(hostFldObj.lookup()) {\r\n\t\t\t\tvar hostLkObj = hostFldObj.lookup();\r\n\t\t\t\tvar lkCfg = hostLkObj.toPlanObject();\r\n\t\t\t\tlkCfg.onlyLeafLevel = false;\r\n\t\t\t\tproxyFldObj.lookup(lkCfg);\r\n//\t\t\t\tproxyFldObj.editControl('DBComboSelect');\r\n\t\t\t\tproxyFldObj.editControl('DBAutoComplete');\r\n\t\t\t} else {\r\n\t\t\t\tproxyFldObj.lookup(null);\r\n\t\t\t\tvar editorObj = hostFldObj.editControl();\r\n\t\t\t\tif(jslet.compareValue(editorObj.type,'DBTextArea') === 0) {\r\n\t\t\t\t\teditorObj = {type: 'DBText'};\r\n\t\t\t\t}\r\n\t\t\t\tproxyFldObj.editControl(editorObj);\r\n\t\t\t}\r\n\t\t\tvar operator = dataRec.operator;\r\n\t\t\tvar valueStyle = jslet.data.FieldValueStyle.NORMAL;\r\n\t\t\tif(operator == 'between') {\r\n\t\t\t\tvalueStyle = jslet.data.FieldValueStyle.BETWEEN;\r\n\t\t\t} else if(operator == 'select') {\r\n\t\t\t\tvalueStyle = jslet.data.FieldValueStyle.MULTIPLE;\r\n\t\t\t}\r\n\t\t\tproxyFldObj.valueStyle(valueStyle);\r\n\t\t}\r\n\t\t\r\n\t\tvar filterFldCfg = [ \r\n             {name: 'lParenthesis', type: 'S', length: 10, label: jsletlocale.FilterDataset.lParenthesis, validChars:'(', tabIndex: 90980}, \r\n\t         {name: 'hostField', type: 'S', length: 30, label: 'Host Field', visible: false},\r\n\t         {name: 'field', type: 'S', length: 200, displayWidth:30, label: jsletlocale.FilterDataset.field, tabIndex: 90981, \r\n\t        \t lookup: {dataset: dsFields, onlyLeafLevel: false}, editControl: {type: 'DBComboSelect', textReadOnly: true}, required: true},\r\n\t         {name: 'dataType', type: 'S', length: 10, label: jsletlocale.FilterDataset.dataType, visible: false},\r\n\t         {name: 'operator', type: 'S',length: 50, displayWidth:20, label: jsletlocale.FilterDataset.operator, \r\n\t        \t lookup: {dataset:\"ds_operator_\"}, required: true, tabIndex: 90982},\r\n\t         {name: 'value', type: 'P', length: 200, displayWidth:30, label: jsletlocale.FilterDataset.value, tabIndex: 90983, \r\n\t        \t\t proxyHostFieldName: 'field', proxyFieldChanged: doProxyFieldChanged, visible: false},\r\n\t         {name: 'valueExpr', type: 'S', length: 30, visible: false},\r\n\t         {name: 'valueExprInput', type: 'S', length: 2, label: ' ', readOnly: true, visible: false,\r\n\t        \t fixedValue: '<button class=\"btn btn-defualt btn-xs\">...</button>', tabIndex: 90984},\r\n             {name: 'rParenthesis', type: 'S', length: 10, label: jsletlocale.FilterDataset.rParenthesis, validChars:')', tabIndex: 90985}, \r\n             {name: 'logicalOpr', type: 'S', length: 10, label: jsletlocale.FilterDataset.logicalOpr, \r\n            \t lookup: {dataset:\"ds_logical_opr_\"}, required: true, defaultValue: 'and', tabIndex: 90986} \r\n\t\t];\r\n\t\tvar dsFilter = new jslet.data.Dataset({name: 'dsFilter_' + id, fields: filterFldCfg, isFireGlobalEvent: false});\r\n\t\tvar rule1 = {condition: '[field]', rules: [{field: 'value', customized: function(fldObj, changingFldName){\r\n\t\t\tvar fldName = dsFilter.getFieldValue('field');\r\n\t\t\tif(!fldName) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar valueFldObj = dsFilter.getField('value', true);\r\n\t\t\tvar hostFldObj = jslet.data.getDataset(Z._hostDataset).getField(fldName), \r\n\t\t\t\tfldType;\r\n\t\t\tif(hostFldObj) {\r\n\t\t\t\tvar lkObj = hostFldObj.lookup();\r\n\t\t\t\tif(lkObj) {\r\n\t\t\t\t\tfldType = (lkObj.dataset().parentField()) ? 'H': 'L';\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfldType = hostFldObj.getType();\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\tfldType = dsFields.getFieldValue('dataType');\r\n\t\t\t}\r\n\t\t\tif(changingFldName) {\r\n\t\t\t\tdsFilter.setFieldValue('dataType', fldType);\r\n\t\t\t}\r\n\t\t\t}}\r\n\t\t]};\r\n\t\t\r\n\t\tvar rule2 = {\r\n\t\t\tcondition: '[dataType]',\r\n\t\t\trules: [{field: 'operator', customized: function(fldObj, changingFldName){\r\n\t\t\t\tvar dataType = dsFilter.getFieldValue('dataType');\r\n\t\t\t\tif(!dataType) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tfldObj = dsFilter.getField('operator');\r\n\t\t\t\tvar lkDs = fldObj.lookup().dataset();\r\n\t\t\t\tlkDs.filter('[range].indexOf(\"' + dataType + '\") >= 0');\r\n\t\t\t\tlkDs.filtered(true);\r\n\t\t\t\tlkDs.first();\r\n\t\t\t\tif(changingFldName) {\r\n\t\t\t\t\tvar firstValue = lkDs.getFieldValue('code');\r\n\t\t\t\t\tdsFilter.setFieldValue('operator', firstValue);\r\n\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t]};\r\n\r\n\t\tvar rule3 = {condition: '[operator]', rules: [{field: 'value', customized: function(fldObj, changingFldName){\r\n\t\t\tif(!changingFldName) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar oldValueStyle = dsFilter.getField('value').valueStyle();\r\n\t\t\tvar operator = dsFilter.getFieldValue('operator');\r\n\t\t\tvar valueStyle = jslet.data.FieldValueStyle.NORMAL;\r\n\t\t\tif(operator == 'between') {\r\n\t\t\t\tvalueStyle = jslet.data.FieldValueStyle.BETWEEN;\r\n\t\t\t}\r\n\t\t\tvar ctrlType = fldObj.editControl().type;\r\n\t\t\tif(operator == 'select') {\r\n\t\t\t\tvalueStyle = jslet.data.FieldValueStyle.MULTIPLE;\r\n\t\t\t\tif(ctrlType !== 'DBComboSelect') {\r\n\t\t\t\t\tfldObj.editControl('DBComboSelect');\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvar dataType = dsFilter.getFieldValue('dataType');\r\n\t\t\t\tif((dataType == 'L' || dataType == 'H') && ctrlType !== 'DBAutoComplete') {\r\n\t\t\t\t\tfldObj.editControl('DBAutoComplete');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(oldValueStyle != valueStyle) {\r\n\t\t\t\tfldObj.valueStyle(valueStyle);\r\n\t\t\t}\r\n\t\t\t}}\r\n\t\t]};\r\n\t\t\r\n\t\tdsFilter.contextRules([rule1, rule2, rule3]);\r\n\t\tdsFilter.enableContextRule();\r\n\t\tdsFilter.onFieldChanged(function(fldName, fldValue) {\r\n\t\t\tif(fldName == 'field' || fldName == 'operator') {\r\n\t\t\t\tthis.setFieldValue('value', null);\r\n\t\t\t\tthis.focusEditControl('value');\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis._filterDataset = dsFilter;\r\n\t\treturn dsFilter;\r\n\r\n\t},\r\n\t\r\n\t/**\r\n\t * Get filter expression text.\r\n\t * \r\n\t * @return {String} Filter expression text.\r\n\t */\r\n\tgetFilterExprText: function() {\r\n\t\tvar Z = this,\r\n\t\t\tdsFilter = Z._filterDataset;\r\n\t\tif(!dsFilter || dsFilter.recordCount() === 0) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tthis.validate();\r\n\t\tvar result = '', recno,\r\n\t\t\tlastRecno = dsFilter.recordCount() - 1;\r\n\t\t\r\n\t\tdsFilter.iterate(function() {\r\n\t\t\trecno = this.recno();\r\n\t\t\tresult += this.getFieldValue('lParenthesis') || '';\r\n\t\t\tresult += this.getFieldText('field') + ' ';\r\n\t\t\tresult += this.getFieldText('operator') + ' ';\r\n\t\t\tresult += this.getFieldText('value');\r\n\t\t\tresult += this.getFieldText('valueExpr');\r\n\t\t\tresult += this.getFieldValue('rParenthesis') || '';\r\n\t\t\tif(recno != lastRecno) {\r\n\t\t\t\tresult += ' ' + this.getFieldText('logicalOpr') + ' ';\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Get filter expression.\r\n\t * \r\n\t * @return {String} Filter expression.\r\n\t */\r\n\tgetFilterExpr: function() {\r\n\t\tvar Z = this,\r\n\t\t\tdsFilter = Z._filterDataset;\r\n\t\tif(!dsFilter || dsFilter.recordCount() === 0) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tthis.validate();\r\n\t\tvar result = '', recno,\r\n\t\t\tlastRecno = dsFilter.recordCount() - 1;\r\n\t\t\r\n\t\tdsFilter.iterate(function() {\r\n\t\t\trecno = this.recno();\r\n\t\t\tvar dataType = this.getFieldValue('dataType');\r\n\t\t\tresult += this.getFieldValue('lParenthesis') || '';\r\n\t\t\t\r\n\t\t\tresult += Z._getFieldFilter(this);\r\n\t\t\tresult += this.getFieldValue('rParenthesis') || '';\r\n\t\t\tif(recno != lastRecno) {\r\n\t\t\t\tresult += ' ' + (this.getFieldValue('logicalOpr') == 'or' ?  '||': '&&') + ' ';\r\n\t\t\t}\r\n\t\t\t\r\n\t\t});\r\n\t\treturn result;\r\n\t},\r\n\t\r\n\t_appendFields: function(hostDataset, fieldLabels, hostFldName, hostFldLabel) {\r\n\t\tvar fields = jslet.data.getDataset(hostDataset).getNormalFields(),\r\n\t\t\tfldObj;\r\n\t\tfor(var i = 0, len = fields.length; i < len; i++) {\r\n\t\t\tfldObj = fields[i];\r\n\t\t\t//Hidden fields, fixed value fields and dataset fieldS do not need to filter.\r\n\t\t\tif(!fldObj.visible() || fldObj.fixedValue() || fldObj.getType() === jslet.data.Dataset.DATASET) { \r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tvar fldCode = fldObj.name(),\r\n\t\t\t\tfldLabel = fldObj.label(),\r\n\t\t\t\tfldDataType = fldObj.getType();\r\n\t\t\tif(hostFldName) {\r\n\t\t\t\tfldCode = hostFldName + '.' + fldCode;\r\n\t\t\t\tfldLabel = hostFldLabel + '.' + fldLabel;\r\n\t\t\t}\r\n\t\t\tvar fldCfg = {name: fldCode, label: fldLabel, dataType: fldDataType};\r\n\t\t\tif(hostFldName) {\r\n\t\t\t\tfldCfg.parentName = hostFldName;\r\n\t\t\t}\r\n\t\t\tfieldLabels.push(fldCfg);\r\n\t\t\tif(fldDataType === jslet.data.DataType.DATE) {\r\n\t\t\t\tfieldLabels.push({name: fldCode + '.Y', label: fldLabel + '.' + jsletlocale.FilterDataset.year, dataType: 'N', parentName: fldCode});\r\n\t\t\t\tfieldLabels.push({name: fldCode + '.M', label: fldLabel + '.' + jsletlocale.FilterDataset.month, dataType: 'N', parentName: fldCode});\r\n\t\t\t\tfieldLabels.push({name: fldCode + '.YM', label: fldLabel + '.' + jsletlocale.FilterDataset.yearMonth, dataType: 'N', parentName: fldCode});\r\n\t\t\t}\r\n\t\t\tvar lkObj = fldObj.lookup();\r\n\t\t\tif(lkObj) {\r\n\t\t\t\tthis._appendFields(lkObj.dataset(), fieldLabels, fldCode, fldLabel);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t_getFieldFilter: function(dsFilter) {\r\n\t\tvar\tfldName = dsFilter.getFieldValue('field'),\r\n\t\t\tdataType = dsFilter.getFieldValue('dataType'),\r\n\t\t\toperator = dsFilter.getFieldValue('operator'),\r\n\t\t\tvalue = dsFilter.getFieldValue('value'),\r\n\t\t\tvalueExpr = dsFilter.getFieldValue('valueExpr'),\r\n\t\t\tresult = '';\r\n\t\t//Boolean value\r\n\t\tif(dataType == 'B') { \r\n\t\t\tresult =  '[' + fldName + ']';\r\n\t\t\tif(!value) {\r\n\t\t\t\tresult =  '!' + result;\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\tvar fldNameStr = '[' + fldName + ']';\r\n\t\t//Extend date field\r\n\t\tif(dataType === 'N') {\r\n\t\t\tif(fldName.endsWith('.Y')) {\r\n\t\t\t\tfldNameStr = '[' + fldName.substring(0, fldName.length - 2) + ']';\r\n\t\t\t\tfldNameStr = 'jslet.getYear(' + fldNameStr + ')';\r\n\t\t\t} else\tif(fldName.endsWith('.M')) {\r\n\t\t\t\tfldNameStr = '[' + fldName.substring(0, fldName.length - 2) + ']';\r\n\t\t\t\tfldNameStr = 'jslet.getMonth(' + fldNameStr + ')';\r\n\t\t\t} else if(fldName.endsWith('.YM')) {\r\n\t\t\t\tfldNameStr = '[' + fldName.substring(0, fldName.length - 3) + ']';\r\n\t\t\t\tfldNameStr = 'jslet.getYearMonth(' + fldNameStr + ')';\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction getValue(dataType, value) {\r\n\t\t\tif(dataType === 'D') {\r\n\t\t\t\treturn 'new Date(' + value.getTime() + ')';\r\n\t\t\t}\r\n\t\t\tif(dataType === 'S') {\r\n\t\t\t\treturn '\"' + value + '\"';\r\n\t\t\t}\r\n\t\t\treturn value;\r\n\t\t}\r\n\t\t//Operator: ==, !=, >, >=, <, <=\r\n\t\tif(operator == '==' || operator == '!=' ||\r\n\t\t   operator == '>' || operator == '>=' || \r\n\t\t   operator == '<' || operator == '<=') {\r\n\t\t\tif(dataType === 'L' || dataType === 'H') {\r\n\t\t\t\tdataType = this._hostDataset.getField(fldName).getType();\r\n\t\t\t}\r\n\t\t\tresult = 'jslet.compareValue(' + fldNameStr + ', ' + getValue(dataType, value) + ')';\r\n\t\t\tresult += operator + '0';\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\t//Operator: between\r\n\t\tif(operator == 'between') {\r\n\t\t\tvar value1 = value[0], value2 = null;\r\n\t\t\tif(value.length > 1) {\r\n\t\t\t\tvalue2 = value[1];\r\n\t\t\t}\r\n\t\t\tif(value1 !== null && value1 !== undefined) {\r\n\t\t\t\tresult += 'jslet.compareValue(' + fldNameStr + ', ' + getValue(dataType, value1) + ') >=0';\r\n\t\t\t}\r\n\t\t\tif(value2 !== null && value2 !== undefined) {\r\n\t\t\t\tif(result.length > 0) {\r\n\t\t\t\t\tresult += ' && ';\r\n\t\t\t\t}\r\n\t\t\t\tresult += 'jslet.compareValue(' + fldNameStr + ', ' + getValue(dataType, value2) + ') <=0';\r\n\t\t\t}\r\n\t\t\treturn '(' + result + ')';\r\n\t\t}\r\n\t\t//Operator: likeany, likefirst, likelast\r\n\t\tif(operator == 'likeany' || operator == 'likefirst' || operator == 'likelast') {\r\n\t\t\tresult = 'like(' + fldNameStr + ', \"';\r\n\t\t\tif(operator == 'likeany' || operator == 'likelast') {\r\n\t\t\t\tresult += '%';\r\n\t\t\t}\r\n\t\t\tresult += value;\r\n\t\t\tif(operator == 'likeany' || operator == 'likefirst') {\r\n\t\t\t\tresult += '%';\r\n\t\t\t}\r\n\t\t\tresult += '\")';\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\t//Operator: select\r\n\t\tif(operator == 'select') {\r\n\t\t\tdataType = this._hostDataset.getField(fldName).getType();\r\n\t\t\tresult = 'inlist(' + fldNameStr ; \r\n\t\t\tfor(var i = 0, len = value.length; i < len; i++) {\r\n\t\t\t\tresult += ',' + getValue(dataType, value[i]);\r\n\t\t\t}\r\n\t\t\tresult += ')';\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\t//Operator: selfchildren0, children0, selfchildren1, children1\r\n\t\tif(operator == 'selfchildren0' || operator == 'children0' || \r\n\t\t\toperator == 'selfchildren1' || operator == 'children1') {\r\n\t\t\tvar funcStr = 'inChildren';\r\n\t\t\tif(operator == 'selfchildren0' || operator == 'selfchildren1') {\r\n\t\t\t\tfuncStr = 'inChildrenAndSelf';\r\n\t\t\t} else {\r\n\t\t\t\tresult = 'inChildren';\r\n\t\t\t}\r\n\t\t\tdataType = this._hostDataset.getField(fldName).getType();\r\n\t\t\tresult = funcStr + '(\"' + fldName + '\", ' + getValue(dataType, value) + ',';\r\n\t\t\tif(operator == 'selfchildren0' || operator == 'children0') {\r\n\t\t\t\tresult += 'false)';\r\n\t\t\t} else {\r\n\t\t\t\tresult += 'true)';\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\t\r\n\t_getFilterValue: function(dsFilter) {\r\n\t\treturn dsFilter.getFieldValue('value');\r\n\t},\r\n\t\r\n\tvalidate: function() {\r\n\t\tvar dsFilter = this._filterDataset,\r\n\t\t\tparenthesisCount = 0,\r\n\t\t\terrMsg = null;\r\n\t\tdsFilter.iterate(function() {\r\n\t\t\tparenthesisCount = (this.getFieldValue('lParenthesis') || '').length - (this.getFieldValue('rParenthesis') || '').length;\r\n\t\t\tif(this.getFieldValue('value') === null && this.getFieldValue('valueExpr') === null) {\r\n\t\t\t\terrMsg = jsletlocale.FilterDataset.valueRequired;\r\n\t\t\t\treturn true; //Exists invalidate record, break iterating.\r\n\t\t\t}\r\n\t\t});\r\n\t\tif(!errMsg && parenthesisCount !== 0) {\r\n\t\t\terrMsg = jsletlocale.FilterDataset.parenthesisNotMatched;\r\n\t\t}\r\n\t\tif(errMsg) {\r\n\t\t\tconsole.error(errMsg);\r\n\t\t}\r\n\t\treturn errMsg;\r\n\t},\r\n\t\r\n\tdestroy: function() {\r\n\t\tvar lkdsField = this._filterDataset.getField('field').lookup().dataset();\r\n\t\tthis._filterDataset.destroy();\r\n\t\tlkdsField.destroy();\r\n\t}\r\n};\n/**\r\n * @private\r\n * @class\r\n * \r\n * Raw value accessor for field object.\r\n */\r\njslet.data.FieldRawValueAccessor = {\r\n\t/**\r\n\t * Get raw value from an data record.\r\n\t * \r\n\t * @param {Object} dataRec Data record, normally it's a plan object, like: {field1: value1, field2: value2}.\r\n\t * @param {jslet.data.Field} fldObj Field object.\r\n\t * @return {Object} \r\n\t */\r\n\tgetRawValue: function(dataRec, fldObj) {\r\n\t\tvar fldName = fldObj.shortName() || fldObj.name(),\r\n\t\t\tcustomValueAccessor = fldObj.customValueAccessor();\r\n\t\t\r\n\t\tvar fldType = fldObj.getType(), value = null;\r\n\t\tvar extHostName = fldObj.extendHostName();\r\n\t\tif(extHostName) {\r\n\t\t\tvar extHostValue = dataRec[extHostName];\r\n\t\t\tif(extHostValue) {\r\n\t\t\t\tvalue = extHostValue[fldName];\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvalue = this._innerGetValue(dataRec,  fldName, customValueAccessor);\r\n\t\t}\r\n\t\tif(value === undefined || value === null) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tif(fldType === jslet.data.DataType.BOOLEAN) {\r\n\t\t\treturn value === fldObj.trueValue();\r\n\t\t}\r\n\t\t\r\n\t\tif(fldType === jslet.data.DataType.PROXY) {\r\n\t\t\treturn jslet.JSON.parse(value);\r\n\t\t}\r\n\r\n\t\tif(fldType === jslet.data.DataType.DATE) {\r\n\t\t\tvar flag = false;\r\n\t\t\tif(jslet.isArray(value)) {\r\n\t\t\t\tfor(var i = 0, len = value.length; i < len; i++) {\r\n\t\t\t\t\tvar val = value[i];\r\n\t\t\t\t\tif (!jslet.isDate(val)) {\r\n\t\t\t\t\t\tval = jslet.convertISODate(val);\r\n\t\t\t\t\t\tvalue[i] = val;\r\n\t\t\t\t\t\tflag = true;\r\n\t\t\t\t\t} //end if\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (!jslet.isDate(value)) {\r\n\t\t\t\t\tvalue = jslet.convertISODate(value);\r\n\t\t\t\t\tflag = true;\r\n\t\t\t\t} //end if\r\n\t\t\t}\r\n\t\t\tif(flag) {\r\n\t\t\t\tthis._innerSetValue(dataRec, fldName, value, customValueAccessor);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn value;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Set a field value of a data record.\r\n\t * \r\n\t * @param {Object} dataRec Data record, normally it's a plan object, like: {field1: value1, field2: value2}.\r\n\t * @param {jslet.data.Field} fldObj Field object.\r\n\t * @param {Object} value Field value.\r\n\t */\r\n\tsetRawValue: function(dataRec, fldObj, value) {\r\n\t\tvar fldName = fldObj.shortName() || fldObj.name(),\r\n\t\t\tcustomValueAccessor = fldObj.customValueAccessor();\r\n\t\t\r\n\t\tvar fldType = fldObj.getType();\r\n\t\tif(value === undefined) {\r\n\t\t\tvalue = null;\r\n\t\t}\r\n\t\tif(value !== null && fldType === jslet.data.DataType.BOOLEAN) {\r\n\t\t\tvalue = (value? fldObj.trueValue(): fldObj.falseValue());\r\n\t\t}\r\n\t\t\r\n\t\tif(value !== null && fldType === jslet.data.DataType.PROXY) {\r\n\t\t\tvalue = jslet.JSON.stringify(value);\r\n\t\t}\r\n\t\tvar extHostName = fldObj.extendHostName();\r\n\t\tif(extHostName) {\r\n\t\t\tvar extHostValue = dataRec[extHostName];\r\n\t\t\tif(!extHostValue) {\r\n\t\t\t\textHostValue = {};\r\n\t\t\t\tdataRec[extHostName] = extHostValue;\r\n\t\t\t}\r\n\t\t\textHostValue[fldName] = value;\r\n\t\t} else {\r\n\t\t\tthis._innerSetValue(dataRec, fldName, value, customValueAccessor);\r\n\t\t}\r\n\t},\r\n\t\r\n\t_innerGetValue: function(dataRec, fldName, customValueAccessor) {\r\n\t\tif(customValueAccessor) {\r\n\t\t\treturn customValueAccessor.getValue(dataRec, fldName);\r\n\t\t} else {\r\n\t\t\treturn dataRec[fldName];\r\n\t\t}\r\n\t},\r\n\t\r\n\t_innerSetValue:  function(dataRec, fldName, value, customValueAccessor) {\r\n\t\tif(customValueAccessor) {\r\n\t\t\treturn customValueAccessor.setValue(dataRec, fldName, value);\r\n\t\t} else {\r\n\t\t\tdataRec[fldName] = value;\r\n\t\t}\r\n\t}\r\n};\r\n\njslet.data.FieldValueCache = {\r\n\t\r\n\tput: function(record, fieldName, value, valueIndex) {\r\n\t\tvar recInfo = jslet.data.getRecInfo(record), \r\n\t\t\tcacheObj = recInfo.cache;\r\n\t\tif(!cacheObj) {\r\n\t\t\tcacheObj = {};\r\n\t\t\trecord._jl_.cache = cacheObj;\r\n\t\t}\r\n\t\tif(valueIndex || valueIndex === 0) {\r\n\t\t\tvar fldCacheObj = cacheObj[fieldName];\r\n\t\t\tif(!fldCacheObj || !jslet.isObject(fldCacheObj)){\r\n\t\t\t\tfldCacheObj = {};\r\n\t\t\t\tcacheObj[fieldName] = fldCacheObj;\r\n\t\t\t}\r\n\t\t\tfldCacheObj[valueIndex+\"\"] = value;\r\n\t\t} else {\r\n\t\t\tcacheObj[fieldName] = value;\r\n\t\t}\r\n\t},\r\n\t\r\n\tget: function(record, fieldName, valueIndex) {\r\n\t\tvar recInfo = jslet.data.getRecInfo(record), \r\n\t\t\tcacheObj = recInfo.cache;\r\n\t\tif(cacheObj) {\r\n\t\t\tif(valueIndex || valueIndex === 0) {\r\n\t\t\t\tvar fldCacheObj = cacheObj[fieldName];\r\n\t\t\t\tif(fldCacheObj && jslet.isObject(fldCacheObj)){\r\n\t\t\t\t\treturn fldCacheObj[valueIndex+\"\"];\r\n\t\t\t\t}\r\n\t\t\t\treturn undefined;\r\n\t\t\t} else {\r\n\t\t\t\treturn cacheObj[fieldName];\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t},\r\n\t\r\n\tclear: function(record, fieldNameOrArray) {\r\n\t\tvar recInfo = jslet.data.getRecInfo(record), \r\n\t\t\tcacheObj = recInfo.cache;\r\n\t\tif(cacheObj) {\r\n\t\t\tvar arrFldNames;\r\n\t\t\tif(jslet.isString(fieldNameOrArray)) {\r\n\t\t\t\tarrFldNames = fieldNameOrArray.split(',');\r\n\t\t\t} else {\r\n\t\t\t\tarrFldNames = fieldNameOrArray;\r\n\t\t\t}\r\n\t\t\tvar j, fldCnt = arrFldNames.length;\r\n\t\t\tfor(j = 0; j < fldCnt; j++) {\r\n\t\t\t\tdelete cacheObj[arrFldNames[j]];\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\tclearAll: function(dataset, fieldNameOrArray) {\r\n\t\tvar records = dataset.records();\r\n\t\tif(!records) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar arrFldNames;\r\n\t\tif(jslet.isString(fieldNameOrArray)) {\r\n\t\t\tarrFldNames = fieldNameOrArray.split(',');\r\n\t\t} else {\r\n\t\t\tarrFldNames = fieldNameOrArray;\r\n\t\t}\r\n\t\tvar rec, cacheObj, recInfo, j, fldCnt = arrFldNames.length;\r\n\t\tfor(var i = 0, len = records.length; i < len; i++) {\r\n\t\t\trec = records[i];\r\n\t\t\trecInfo = jslet.data.getRecInfo(rec);\r\n\t\t\tcacheObj = recInfo.cache;\r\n\t\t\tif(cacheObj) {\r\n\t\t\t\tfor(j = 0; j < fldCnt; j++) {\r\n\t\t\t\t\tdelete cacheObj[arrFldNames[j]];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\tremoveCache: function(record) {\r\n\t\tvar recInfo = jslet.data.getRecInfo(record);\r\n\t\tdelete recInfo.cache;\r\n\t},\r\n\t\r\n\tremoveAllCache: function(dataset) {\r\n\t\tvar records = dataset.records();\r\n\t\tif(!records) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar rec, cacheObj, recInfo;\r\n\t\tfor(var i = 0, len = records.length; i < len; i++) {\r\n\t\t\trec = records[i];\r\n\t\t\tif(!rec) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\trecInfo = jslet.data.getRecInfo(rec); \r\n\t\t\tdelete recInfo.cache;\r\n\t\t}\r\n\t}\r\n};\r\n/*End of field value cache manager*/\n/**\r\n * @private\r\n * @class\r\n * @abstract\r\n * \r\n * Field value converter. \r\n */\r\njslet.data.FieldValueConverter = jslet.Class.create({\r\n\tclassName: 'jslet.data.FieldValueConverter',\r\n\t\r\n\ttextToValue: function(fldObj, inputText) {\r\n\t\tvar value = inputText;\r\n\t\treturn value;\r\n\t},\r\n\t\r\n\tvalueToText: function(fldObj, value, isEditing) {\r\n\t\tvar text = value;\r\n\t\treturn text;\r\n\t},\r\n\t\r\n\t_addFieldLabel: function(fldLabel, errMsg) {\r\n\t\treturn '[' + fldLabel + ']: ' + errMsg;\r\n\t}\r\n});\r\njslet.data.FieldValueConverter.className = 'jslet.data.FieldValueConverter';\r\n\r\n/**\r\n * @private\r\n * @class\r\n * @extend jslet.data.FieldValueConverter.\r\n * \r\n * Number value converter.\r\n */\r\njslet.data.NumberValueConverter = jslet.Class.create(jslet.data.FieldValueConverter, {\r\n\tintRegular: {expr: /^(-)?[1-9]*\\d+$/ig, message: jsletlocale.Dataset.invalidInt},\r\n\t\r\n\tfloatRegular: {expr: /((^-?[1-9])|\\d)\\d*(\\.[0-9]*)?$/ig, message: jsletlocale.Dataset.invalidFloat},\r\n\t\r\n\ttextToValue: function(fldObj, inputText) {\r\n\t\tif(!inputText) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar regular;\r\n\t\tif (!fldObj.scale()) {\r\n\t\t\tregular = this.intRegular;\r\n\t\t} else {\r\n\t\t\tregular = this.floatRegular;\r\n\t\t}\r\n\t\tvar regExpObj = regular.expr;\r\n\t\tregExpObj.lastIndex = 0;\r\n\t\tif (!regExpObj.test(inputText)) {\r\n\t\t\tvar invalidMsg = this._addFieldLabel(fldObj.label(), regular.message);\r\n\t\t\tfldObj.dataset().setFieldError(fldObj.name(), invalidMsg, null, inputText);\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\r\n\t\tvar value = undefined,\r\n\t\t\tscale = fldObj.scale() || 0,\r\n\t\t\tlength = fldObj.length();\r\n\t\tif (scale === 0) {\r\n\t\t\tvalue = parseInt(inputText);\r\n\t\t} else {\r\n\t\t\tvar k = inputText.indexOf('.');\r\n\t\t\tvar actual = k > 0? k: inputText.length,\r\n\t\t\t\texpected = length - scale;\r\n\t\t\tif(actual > expected) {\r\n\t\t\t\tvar invalidMsg = this._addFieldLabel(fldObj.label(), \r\n\t\t\t\t\t\tjslet.formatMessage(jsletlocale.Dataset.invalidIntegerPart, [expected, actual]));\r\n\t\t\t\tfldObj.dataset().setFieldError(fldObj.name(), invalidMsg, null, inputText);\r\n\t\t\t} else {\r\n\t\t\t\tactual = k > 0 ? inputText.length - k - 1: 0;\r\n\t\t\t\tif(actual > scale) {\r\n\t\t\t\t\tvar invalidMsg = this._addFieldLabel(fldObj.label(), \r\n\t\t\t\t\t\t\tjslet.formatMessage(jsletlocale.Dataset.invalidDecimalPart, [scale, actual]));\r\n\t\t\t\t\tfldObj.dataset().setFieldError(fldObj.name(), invalidMsg, null, inputText);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvalue = parseFloat(inputText);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn value;\r\n\t},\r\n\r\n\tvalueToText: function(fldObj, value, isEditing) {\r\n\t\tvar dataset = fldObj.dataset();\r\n\t\tif (fldObj.unitConverted()) {\r\n\t\t\tvalue = value * dataset._unitConvertFactor;\r\n\t\t}\r\n\r\n\t\tif (!isEditing) {\r\n\t\t\tvar rtnText = jslet.formatNumber(value, fldObj.displayFormat());\r\n\t\t\tif (fldObj.unitConverted() && dataset._unitName) {\r\n\t\t\t\trtnText += dataset._unitName;\r\n\t\t\t}\r\n\t\t\treturn rtnText;\r\n\t\t} else {\r\n\t\t\treturn value;\r\n\t\t}\r\n\t}\r\n});\r\n\r\n/**\r\n * @private\r\n * @class\r\n * @extend jslet.data.FieldValueConverter.\r\n * \r\n * Date value converter.\r\n */\r\njslet.data.DateValueConverter = jslet.Class.create(jslet.data.FieldValueConverter, {\r\n\ttextToValue: function(fldObj, inputText) {\r\n\t\tif(!inputText) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar regular = fldObj.dateRegular();\r\n\t\tvar regExpObj = regular.expr;\r\n\t\tregExpObj.lastIndex = 0;\r\n\t\tif (!regExpObj.test(inputText)) {\r\n\t\t\tvar invalidMsg = this._addFieldLabel(fldObj.label(), regular.message);\r\n\t\t\tfldObj.dataset().setFieldError(fldObj.name(), invalidMsg, null, inputText);\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t\t\r\n\t\tvar value = undefined;\r\n\t\ttry {\r\n\t\t\tvalue = jslet.parseDate(inputText, fldObj.displayFormat());\r\n\t\t} catch (e) {\r\n\t\t\tvar invalidMsg = this._addFieldLabel(fldObj.label(), e.message);\r\n\t\t\tfldObj.dataset().setFieldError(fldObj.name(), invalidMsg, null, inputText);\r\n\t\t\tvalue = undefined;\r\n\t\t}\r\n\t\treturn value; \r\n\t},\r\n\t\r\n\tvalueToText: function(fldObj, value, isEditing) {\r\n\t\tif (!(value instanceof Date)) {\r\n\t\t\t//Invalid value: [{1}] for DATE field: [{0}]!\r\n\t\t\tthrow new Error(jslet.formatMessage(jsletlocale.Dataset.invalidDateFieldValue, [fldObj.name(), value]));\r\n\t\t}\r\n\r\n\t\treturn value ? jslet.formatDate(value, fldObj.displayFormat()): '';\r\n\t}\r\n});\r\n\r\n/**\r\n * @private\r\n * @class\r\n * @extend jslet.data.FieldValueConverter.\r\n * \r\n * String value converter.\r\n */\r\njslet.data.StringValueConverter = jslet.Class.create(jslet.data.FieldValueConverter, {\r\n\ttextToValue: function(fldObj, inputText) {\r\n\t\tif(!inputText) {\r\n\t\t\treturn inputText;\r\n\t\t}\r\n\t\tvar regular = fldObj.regularExpr();\r\n\t\tif(regular) {\r\n\t\t\tvar regExpObj = regular.expr;\r\n\t\t\tregExpObj.lastIndex = 0;\r\n\t\t\tif (!regExpObj.test(inputText)) {\r\n\t\t\t\tvar invalidMsg = this._addFieldLabel(fldObj.label(), regular.message);\r\n\t\t\t\tfldObj.dataset().setFieldError(fldObj.name(), invalidMsg, null, inputText);\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tvar value = inputText;\r\n\t\tif (fldObj.antiXss()) {\r\n\t\t\tvalue = jslet.htmlEncode(value);\r\n\t\t}\r\n\t\treturn value;\r\n\t},\r\n\t\r\n\tvalueToText: function(fldObj, value, isEditing) {\r\n\t\tvar dataset = fldObj.dataset(),\r\n\t\t\tdispFmt = fldObj.displayFormat();\r\n\t\tif (!isEditing && dispFmt) {\r\n\t\t\treturn jslet.formatString(value, dispFmt);\r\n\t\t} else {\r\n\t\t\treturn value;\r\n\t\t}\r\n\t}\r\n\t\r\n});\r\n\r\n/**\r\n * @private\r\n * @class\r\n * @extend jslet.data.FieldValueConverter.\r\n * \r\n * Boolean value converter.\r\n */\r\njslet.data.BooleanValueConverter = jslet.Class.create(jslet.data.FieldValueConverter, {\r\n\ttextToValue: function(fldObj, inputText) {\r\n\t\tif(!inputText) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn inputText.toLowerCase() == 'true';\r\n\t},\r\n\t\r\n\tvalueToText: function(fldObj, value, isEditing) {\r\n\t\treturn value ? fldObj.trueText(): fldObj.falseText();\r\n\t}\r\n});\r\n\r\n/**\r\n * @private\r\n * @class\r\n * @extend jslet.data.FieldValueConverter.\r\n * \r\n * Lookup value converter.\r\n */\r\njslet.data.LookupValueConverter = jslet.Class.create(jslet.data.FieldValueConverter, {\r\n\ttextToValue: function(fldObj, inputText, valueIndex) {\r\n\t\tif(!inputText) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar value = '',\r\n\t\t\tlkFldObj = fldObj.lookup(),\r\n\t\t\tdsLookup = lkFldObj.dataset(),\r\n\t\t\tkeyFldName = lkFldObj.keyField(),\r\n\t\t\tcodeFldName = lkFldObj.codeField(),\r\n\t\t\tnameFldName = lkFldObj.nameField(),\r\n\t\t\teditFilter = lkFldObj.editFilter(),\r\n\t\t\tfixedFilter = dsLookup.fixedFilter();\r\n\t\tif(editFilter) {\r\n\t\t\tif(fixedFilter) {\r\n\t\t\t\teditFilter = '(' + editFilter + ') && (' + fixedFilter + ')'; \r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\teditFilter = fixedFilter;\r\n\t\t}\r\n\t\tvalue = this._convertFieldValue(dsLookup, codeFldName, inputText, keyFldName, editFilter);\r\n\t\tif (value === null) {\r\n\t\t\tif(nameFldName !== codeFldName) {\r\n\t\t\t\tvalue = this._convertFieldValue(dsLookup, nameFldName, inputText, keyFldName, editFilter);\r\n\t\t\t}\r\n\t\t\tif (value === null) {\r\n\t\t\t\tvar invalidMsg = jslet.formatMessage(jsletlocale.Dataset.valueNotFound, [fldObj.displayLabel()]);\r\n\t\t\t\tfldObj.dataset().setFieldError(fldObj.name(), invalidMsg, valueIndex, inputText);\r\n\t\t\t\tdsLookup.first();\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t},\r\n\t\r\n\tvalueToText: function(fldObj, value, isEditing) {\r\n\t\tvar lkFldObj = fldObj.lookup(),\r\n\t\t\tdsLookup = lkFldObj.dataset(),\r\n\t\t\tresult;\r\n\t\tif (!isEditing) {\r\n\t\t\tresult = this._convertFieldValue(dsLookup, lkFldObj.keyField(), value,\r\n\t\t\t\t\tlkFldObj.displayFields());\r\n\t\t} else {\r\n\t\t\tresult = this._convertFieldValue(dsLookup, lkFldObj.keyField(), value, \r\n\t\t\t\t\t'[' + lkFldObj.codeField() + ']');\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t_convertFieldValue: function (dsLookup, srcField, srcValues, destFields, editFilter) {\r\n\t\tif (destFields === null) {\r\n\t\t\tthrow new Error('NOT set destFields in method: ConvertFieldValue');\r\n\t\t}\r\n\t\tvar isExpr = destFields.indexOf('[') > -1;\r\n\t\tif (isExpr) {\r\n\t\t\tif (destFields != dsLookup._convertDestFields) {\r\n\t\t\t\tdsLookup._innerConvertDestFields = new jslet.data.Expression(dsLookup,\r\n\t\t\t\t\t\tdestFields);\r\n\t\t\t\tdsLookup._convertDestFields = destFields;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (typeof (srcValues) != 'string') {\r\n\t\t\tsrcValues += '';\r\n\t\t}\r\n\t\tvar separator = jslet.global.valueSeparator;\r\n\t\tvar values = srcValues.split(separator), valueCnt = values.length - 1;\r\n\t\tdsLookup._ignoreFilter = true;\r\n\t\tvar context = dsLookup.startSilenceMove();\r\n\t\ttry {\r\n\t\t\tvar options = (editFilter? {extraFilter: editFilter} : null);\r\n\r\n\t\t\tif (valueCnt === 0) {\r\n\t\t\t\tif (!dsLookup.findByField(srcField, values[0], options)) {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t\tif (isExpr) {\r\n\t\t\t\t\treturn dsLookup._innerConvertDestFields.eval();\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn dsLookup.getFieldValue(destFields);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\tvar fldcnt, destValue = '';\r\n\t\t\tfor (var i = 0; i <= valueCnt; i++) {\r\n\t\t\t\tif (!dsLookup.findByField(srcField, values[i], options)) {\r\n\t\t\t\t\tdestValue += jslet.formatMessage(jsletlocale.Dataset.notFound, values[i]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (isExpr) {\r\n\t\t\t\t\t\tdestValue += dsLookup._innerConvertDestFields.eval();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdestValue += dsLookup.getFieldValue(destFields);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (i != valueCnt) {\r\n\t\t\t\t\tdestValue += separator;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn destValue;\r\n\t\t} finally {\r\n\t\t\tdsLookup._ignoreFilter = false;\r\n\t\t\tdsLookup.endSilenceMove(context);\r\n\t\t}\r\n\t}\r\n\t\r\n});\r\n\r\njslet.data._valueConverters = {};\r\njslet.data._valueConverters[jslet.data.DataType.NUMBER] = new jslet.data.NumberValueConverter();\r\njslet.data._valueConverters[jslet.data.DataType.STRING] = new jslet.data.StringValueConverter();\r\njslet.data._valueConverters[jslet.data.DataType.DATE] = new jslet.data.DateValueConverter();\r\njslet.data._valueConverters[jslet.data.DataType.BOOLEAN] = new jslet.data.BooleanValueConverter();\r\n\r\njslet.data._valueConverters.lookup = new jslet.data.LookupValueConverter();\r\n\r\n/**\r\n * @private\r\n * \r\n * Get appropriate field value converter.\r\n * \r\n * @member jslet.data\r\n * @param {jslet.data.Field} fldObj field object.\r\n * \r\n * @return {jslet.data.FieldValueConverter} field value converter;\r\n */\r\njslet.data.getValueConverter = function(fldObj) {\r\n\tif(fldObj.lookup()) {\r\n\t\treturn jslet.data._valueConverters.lookup;\r\n\t}\r\n\tvar dataType = fldObj.getType();\r\n\treturn jslet.data._valueConverters[dataType];\r\n};\r\n/* End of field value converter */\r\n\r\n\n/* Field value error */\r\njslet.data.FieldError = {\r\n\t\r\n\tput: function(record, fldName, errorMsg, valueIndex, inputText) {\r\n\t\tif(!record) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(!errorMsg) {\r\n\t\t\tjslet.data.FieldError.clear(record, fldName, valueIndex);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar recInfo = jslet.data.getRecInfo(record), \r\n\t\t\terrObj = recInfo.error;\r\n\t\tif(!errObj) {\r\n\t\t\terrObj = {};\r\n\t\t\trecInfo.error = errObj;\r\n\t\t}\r\n\t\tvar fldErrObj = errObj[fldName];\r\n\t\tif(!fldErrObj) {\r\n\t\t\tfldErrObj = {};\r\n\t\t\terrObj[fldName] = fldErrObj;\r\n\t\t}\r\n\t\tvar errMsgObj = {message: errorMsg};\r\n\t\tif(inputText !== undefined) {\r\n\t\t\terrMsgObj.inputText = inputText;\r\n\t\t}\r\n\t\tif(!valueIndex) {\r\n\t\t\tvalueIndex = 0;\r\n\t\t}\r\n\t\tfldErrObj[valueIndex+\"\"] = errMsgObj;\r\n\t},\r\n\t\r\n\tget: function(record, fldName, valueIndex) {\r\n\t\tif(!record) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar recInfo = jslet.data.getRecInfo(record), \r\n\t\t\terrObj = recInfo.error;\r\n\t\tif(errObj) {\r\n\t\t\tvar fldErrObj = errObj[fldName];\r\n\t\t\tif(!fldErrObj) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tif(!valueIndex) {\r\n\t\t\t\tvalueIndex = 0;\r\n\t\t\t}\r\n\t\t\treturn fldErrObj[valueIndex+\"\"];\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t},\r\n\t\r\n\tclear: function(record, fldName, valueIndex) {\r\n\t\tif(!record) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar recInfo = jslet.data.getRecInfo(record), \r\n\t\t\terrObj = recInfo.error;\r\n\t\tif(errObj) {\r\n\t\t\tvar fldErrObj = errObj[fldName];\r\n\t\t\tif(!fldErrObj) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(!valueIndex) {\r\n\t\t\t\tvalueIndex = 0;\r\n\t\t\t}\r\n\t\t\tdelete fldErrObj[valueIndex+\"\"];\r\n\t\t\tvar found = false;\r\n\t\t\tfor(var idx in fldErrObj) {\r\n\t\t\t\tfound = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif(!found) {\r\n\t\t\t\tdelete errObj[fldName];\r\n\t\t\t} \r\n\t\t}\r\n\t},\r\n\t\r\n\texistFieldError: function(record, fldName, valueIndex) {\r\n\t\tif(!record) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tvar recInfo = jslet.data.getRecInfo(record), \r\n\t\terrObj = recInfo.error;\r\n\t\tif(errObj) {\r\n\t\t\tvar fldErrObj = errObj[fldName];\r\n\t\t\tif(!fldErrObj){\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(!valueIndex) {\r\n\t\t\t\tvalueIndex = 0;\r\n\t\t\t}\r\n\t\t\treturn fldErrObj[valueIndex+\"\"] ? true: false;\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\t\r\n\texistRecordError: function(record, includeFields, excludeFields) {\r\n\t\tif(!record) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tvar recInfo = jslet.data.getRecInfo(record);\r\n\t\tif(!recInfo) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tvar errObj = recInfo.error;\r\n\t\tif(errObj) {\r\n\t\t\tfor(var fldName in errObj) {\r\n\t\t\t\tif(excludeFields && excludeFields.indexOf(fldName) >= 0 || \r\n\t\t\t\t\tincludeFields && includeFields.indexOf(fldName) < 0) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif(errObj[fldName]) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\t\r\n\tgetFirstErrorField: function(record, includeFields, excludeFields) {\r\n\t\tif(!record) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar recInfo = jslet.data.getRecInfo(record);\r\n\t\tif(!recInfo) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar errObj = recInfo.error;\r\n\t\tif(errObj) {\r\n\t\t\tfor(var fldName in errObj) {\r\n\t\t\t\tif(excludeFields && excludeFields.indexOf(fldName) >= 0 || \r\n\t\t\t\t\tincludeFields && includeFields.indexOf(fldName) < 0) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif(errObj[fldName]) {\r\n\t\t\t\t\treturn fldName;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t},\r\n\t\r\n\tclearFieldError: function(dataset, fldName) {\r\n\t\tvar records = dataset.records();\r\n\t\tif(!records) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar rec, errObj, recInfo;\r\n\t\tfor(var i = 0, len = records.length; i < len; i++) {\r\n\t\t\trec = records[i];\r\n\t\t\trecInfo = jslet.data.getRecInfo(rec);\r\n\t\t\terrObj = recInfo.error;\r\n\t\t\tif(errObj) {\r\n\t\t\t\tdelete errObj[fldName];\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\tclearRecordError: function(record, includeFields, excludeFields) {\r\n\t\tvar recInfo = jslet.data.getRecInfo(record);\r\n\t\tif(recInfo) {\r\n\t\t\tif(jslet.isEmpty(includeFields) && jslet.isEmpty(excludeFields)) {\r\n\t\t\t\tdelete recInfo.error;\r\n\t\t\t} else {\r\n\t\t\t\tvar errObj = recInfo.error;\r\n\t\t\t\tfor(var fldName in errObj) {\r\n\t\t\t\t\tif(excludeFields && excludeFields.indexOf(fldName) >= 0 || \r\n\t\t\t\t\t\tincludeFields && includeFields.indexOf(fldName) < 0) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdelete errObj[fldName];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\tclearDatasetError: function(dataset) {\r\n\t\tvar records = dataset.records();\r\n\t\tif(!records) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar rec, errObj, recInfo;\r\n\t\tfor(var i = 0, len = records.length; i < len; i++) {\r\n\t\t\trec = records[i];\r\n\t\t\trecInfo = jslet.data.getRecInfo(rec);\r\n\t\t\tif(recInfo) {\r\n\t\t\t\tdelete recInfo.error;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n/*End of field value error manager*/\r\n\n/**\r\n * @private\r\n * @class\r\n * \r\n * Data selection class.\r\n */\r\njslet.data.DataSelection = function(dataset) {\r\n\tthis._dataset = dataset;\r\n\tthis._selection = [];\r\n\tthis._onChanged = null;\r\n};\r\n\r\njslet.data.DataSelection.prototype = {\r\n\t/**\r\n\t * Select all data.\r\n\t * \r\n\t * @param {String[]} fields An array of field name to be selected.\r\n\t * @param {Boolean} fireEvent Identify firing event or not.\r\n\t */\r\n\tselectAll: function(fields, fireEvent) {\r\n\t\tjslet.Checker.test('DataSelection.add#fields', fields).isArray();\r\n\t\tthis.removeAll();\r\n\t\tif(!fields) {\r\n\t\t\tvar arrFldObj = this._dataset.getNormalFields(), fldName;\r\n\t\t\tfields = [];\r\n\t\t\tfor(var i = 0, len = arrFldObj.length; i < len; i++) {\r\n\t\t\t\tfldName = arrFldObj[i].name();\r\n\t\t\t\tfields.push(fldName);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.add(0, this._dataset.recordCount() - 1, fields, fireEvent);\r\n\t},\r\n\t\r\n\t/**\r\n\t * Remove all selected data.\r\n\t */\r\n\tremoveAll: function() {\r\n\t\tthis._selection = [];\r\n\t},\r\n\t\r\n\t/**\r\n\t * Add data into selection.\r\n\t * \r\n\t * @param {Integer} startRecno The start recno to be selected.\r\n\t * @param {Integer} endRecno The end recno to be selected.\r\n\t * @param {String[]} fields An array of field name to be selected.\r\n\t * @param {Boolean} fireEvent Identify firing event or not.\r\n\t */\r\n\tadd: function(startRecno, endRecno, fields, fireEvent) {\r\n\t\tjslet.Checker.test('DataSelection.add#startRecno', startRecno).required().isNumber();\r\n\t\tjslet.Checker.test('DataSelection.add#endRecno', endRecno).required().isNumber();\r\n\t\tjslet.Checker.test('DataSelection.add#fields', fields).required().isArray();\r\n\r\n\t\tif(endRecno === undefined) {\r\n\t\t\tendRecno = startRecno;\r\n\t\t}\r\n\t\tvar fldName, dsObj = this._dataset, dataType, arrFlds = [];\r\n\t\tfor(var j = 0, fldCnt = fields.length; j < fldCnt; j++) {\r\n\t\t\tfldName = fields[j];\r\n\t\t\tdataType = dsObj.getField(fldName).dataType();\r\n\t\t\tif(dataType === jslet.data.DataType.ACTION || dataType === jslet.data.DataType.EDITACTION) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tarrFlds.push(fldName);\r\n\t\t}\r\n\t\tfor(var recno = startRecno; recno <= endRecno; recno++) {\r\n\t\t\tfor(var i = 0, len = arrFlds.length; i < len; i++) {\r\n\t\t\t\tfldName = arrFlds[i];\r\n\t\t\t\tthis._selectCell(recno, fldName, true);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(fireEvent && this._onChanged) {\r\n\t\t\tthis._onChanged(startRecno, endRecno, fields, true);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Unselect data.\r\n\t * \r\n\t * @param {Integer} startRecno The start recno to be unselected.\r\n\t * @param {Integer} endRecno The end recno to be selected.\r\n\t * @param {String[]} fields An array of field name to be unselected.\r\n\t * @param {Boolean} fireEvent Identify firing event or not.\r\n\t */\r\n\tremove: function(startRecno, endRecno, fields, fireEvent) {\r\n\t\tjslet.Checker.test('DataSelection.remove#startRecno', startRecno).required().isNumber();\r\n\t\tjslet.Checker.test('DataSelection.remove#endRecno', endRecno).required().isNumber();\r\n\t\tjslet.Checker.test('DataSelection.remove#fields', fields).required().isArray();\r\n\r\n\t\tif(endRecno === undefined) {\r\n\t\t\tendRecno = startRecno;\r\n\t\t}\r\n\t\tif(startRecno > endRecno) {\r\n\t\t\tvar tmp = startRecno;\r\n\t\t\tstartRecno = endRecno;\r\n\t\t\tendRecno = tmp;\r\n\t\t}\r\n\t\tvar fldName;\r\n\t\tfor(var recno = startRecno; recno <= endRecno; recno++) {\r\n\t\t\tfor(var i = 0, len = fields.length; i < len; i++) {\r\n\t\t\t\tfldName = fields[i];\r\n\t\t\t\tthis._selectCell(recno, fldName, false);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(fireEvent && this._onChanged) {\r\n\t\t\tthis._onChanged(startRecno, endRecno, fields, false);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Fired when the selection area is changed.\r\n\t * \r\n\t * @param {Function} onChanged The event handler, format:\r\n\t * \tfunction(startRecno, endRecno, fields, selected) {\r\n\t * \t\t//startRecno - Integer, start recno;\r\n\t * \t\t//endRecno - Integer, end recno;\r\n\t * \t\t//fields - String[], field names;\r\n\t * \t\t//selected - Boolean, selected or not;\t\r\n\t * \t}\r\n\t * \t\r\n\t */\r\n\tonChanged: function(onChanged) {\r\n\t\tif(onChanged === undefined) {\r\n\t\t\treturn this._onChanged;\r\n\t\t}\r\n\t\tjslet.Checker.test('DataSelection.onChanged', onChanged).isFunction();\r\n\t\tthis._onChanged = onChanged;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Check the specified cell is selected or not.\r\n\t * \r\n\t * @param {Integer} recno Record no.\r\n\t * @param {String} fldName Field name.\r\n\t * \r\n\t * @return {Boolean}\r\n\t */\r\n\tisSelected: function(recno, fldName) {\r\n\t\tjslet.Checker.test('DataSelection.isSelected#recno', recno).required().isNumber();\r\n\t\tjslet.Checker.test('DataSelection.isSelected#fldName', fldName).required().isString();\r\n\t\tvar selObj;\r\n\t\tfor(var i = 0, len = this._selection.length; i < len; i++) {\r\n\t\t\tselObj = this._selection[i];\r\n\t\t\tif(selObj._recno_ === recno && selObj[fldName]) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Get selected text.\r\n\t * \r\n\t * @param {String} seperator Seperator for fields.\r\n\t * \r\n\t * @return {String}\r\n\t */\r\n\tgetSelectionText: function(surround, encodeSpecialData, seperator) {\r\n\t\tif(!seperator) {\r\n\t\t\tseperator = '\\t';\r\n\t\t}\r\n\t\tvar Z = this;\r\n\t\tsurround = surround? surround: '';\r\n\t\tencodeSpecialData = encodeSpecialData? true: false;\r\n\t\tvar dataset = Z._dataset,\r\n\t\t\tresult = [], \r\n\t\t\tcontext = dataset.startSilenceMove(),\r\n\t\t\tfields = dataset.getNormalFields(),\r\n\t\t\tfldCnt = fields.length, label,\r\n\t\t\tlabels = [], dispOrder, labelLen,\r\n\t\t\tfldName, textRec, fldObj, text, dataType;\r\n\t\ttry {\r\n\t\t\tdataset.iterate(function() {\r\n\t\t\t\ttextRec = [];\r\n\t\t\t\tfor(var i = 0; i < fldCnt; i++) {\r\n\t\t\t\t\tfldObj = fields[i];\r\n\t\t\t\t\tfldName = fldObj.name();\r\n\t\t\t\t\tif(!Z.isSelected(dataset.recno(), fldName)) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdispOrder = fldObj.displayOrder();\r\n\t\t\t\t\tlabelLen = labels.length;\r\n\t\t\t\t\tif(labelLen < dispOrder) {\r\n\t\t\t\t\t\tfor(var j = labelLen; j < dispOrder; j++) {\r\n\t\t\t\t\t\t\tlabels[j] = null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(!labels[dispOrder]) {\r\n\t\t\t\t\t\tlabel = fldObj.label();\r\n\t\t\t\t\t\tlabels.push(jslet.removeHtmlTag(label) || ' ');\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//If Number field does not have lookup field, return field value, not field text. \r\n\t\t\t\t\t//Example: 'amount' field\r\n\t\t\t\t\tdataType = fldObj.getType();\r\n\t\t\t\t\tif(dataType === 'N' && !fldObj.lookup()) {\r\n\t\t\t\t\t\ttext = fldObj.getValue();\r\n\t\t\t\t\t\tif(text === null || text === undefined) {\r\n\t\t\t\t\t\t\ttext = '';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttext = surround + text + surround;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttext = dataset.getFieldText(fldName);\r\n\t\t\t\t\t\tif(text === null || text === undefined) {\r\n\t\t\t\t\t\t\ttext = '\"\"';\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\ttext = text.replace(/\"/g,'\"\"');\r\n\t\t\t\t\t\t\tvar isStartZero = false;\r\n\t\t\t\t\t\t\tif(text.startsWith('0')) {\r\n\t\t\t\t\t\t\t\tisStartZero = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\ttext = surround + text + surround;\r\n\t\t\t\t\t\t\tif(encodeSpecialData && (isStartZero || dataType === jslet.data.DataType.DATE)) {\r\n\t\t\t\t\t\t\t\ttext = '=' + text;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\ttextRec.push(text); \r\n\t\t\t\t} //End for\r\n\t\t\t\tif(textRec.length > 0) {\r\n\t\t\t\t\tresult.push(textRec.join(seperator));\r\n\t\t\t\t}\r\n\t\t\t}); //End iterate\r\n\t\t} finally { \r\n\t\t\tdataset.endSilenceMove(context); \r\n\t\t}\r\n\t\tif(result.length > 0) {\r\n\t\t\tvar labelStr = '', s, isFirst = true;\r\n\t\t\tfor(var i = 0, len = labels.length; i < len; i++) {\r\n\t\t\t\ts = labels[i];\r\n\t\t\t\tif(s) {\r\n\t\t\t\t\tlabelStr += (isFirst? '':seperator) + s;\r\n\t\t\t\t\tisFirst = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn labelStr + '\\n' + result.join('\\n');\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t},\r\n\t\r\n\t_selectCell: function(recno, fldName, selected) {\r\n\t\tvar selObj,\r\n\t\t\tfound = false;\r\n\t\tfor(var i = 0, len = this._selection.length; i < len; i++) {\r\n\t\t\tselObj = this._selection[i];\r\n\t\t\tif(selObj._recno_ === recno) {\r\n\t\t\t\tfound = true;\r\n\t\t\t\tselObj[fldName] = selected;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(selected && !found) {\r\n\t\t\tselObj = {_recno_: recno};\r\n\t\t\tselObj[fldName] = true;\r\n\t\t\tthis._selection.push(selObj);\r\n\t\t}\r\n\t}\r\n};\r\n\n/**\r\n * @private\r\n * @class\r\n * \r\n * Field Validator.\r\n */\r\njslet.data.FieldValidator = function() {\r\n};\r\n\r\njslet.data.FieldValidator.prototype = {\r\n\t\r\n\tintRegular: {expr: /^(-)?[1-9]*\\d+$/ig},\r\n\t\r\n\tfloatRegular: {expr: /((^-?[1-9])|\\d)\\d*(\\.[0-9]*)?$/ig},\r\n\r\n\t/**\r\n\t * Check the specified character is valid or not.\r\n\t * Usually use this when user presses a key down.\r\n\t * \r\n\t * @param {String} inputChar Single character\r\n\t * @param {Boolean} True for passed, otherwise failed.\r\n\t */\r\n\tcheckInputChar: function (fldObj, inputChar, existText, cursorPos) {\r\n\t\tvar validChars = fldObj.validChars();\r\n\t\tvar valid = true;\r\n\t\tif (validChars && inputChar) {\r\n\t\t\tvar c = inputChar.charAt(0);\r\n\t\t\tvalid = validChars.indexOf(c) >= 0;\r\n\t\t}\r\n\t\tif(existText && valid && fldObj.getType() == jslet.data.DataType.NUMBER){\r\n\t\t\tvar scale = fldObj.scale();\r\n\t\t\tvar k = existText.lastIndexOf('.');\r\n\t\t\tif(inputChar == '.') {\r\n\t\t\t\tif(k >= 0) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(scale > 0 && k >= 0) {\r\n\t\t\t\tif(existText.length - k - 1 === scale && cursorPos - 1 > k) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\treturn valid;\r\n\t},\r\n\t\r\n\t_addFieldLabel: function(fldLabel, errMsg) {\r\n\t\treturn '[' + fldLabel + ']: ' + errMsg;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Check the required field's value is empty or not\r\n\t * \r\n\t * @param {jslet.data.Field} fldObj Field Object\r\n\t * @param {Object} value field value.\r\n\t * @return {String} If input text is valid, return null, otherwise return error message.\r\n\t */\r\n\tcheckRequired: function(fldObj, value) {\r\n\t\tif (fldObj.required()) {\r\n\t\t\tvar valid = true;\r\n\t\t\tif (value === null || value === undefined) {\r\n\t\t\t\tvalid = false;\r\n\t\t\t}\r\n\t\t\tif(valid && jslet.isString(value) && jslet.trim(value).length === 0) {\r\n\t\t\t\tvalid = false;\r\n\t\t\t}\r\n\t\t\tif(valid && jslet.isArray(value) && value.length === 0) {\r\n\t\t\t\tvalid = false;\r\n\t\t\t}\r\n\t\t\tif(!valid) {\r\n\t\t\t\treturn this._addFieldLabel(fldObj.label(), jslet.formatMessage(jsletlocale.Dataset.fieldValueRequired));\r\n\t\t\t} else {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t},\r\n\t\r\n\tcheckMultiple: function(fldObj, value) {\r\n\t\tvar valueStyle = fldObj.valueStyle();\r\n\t\tif(valueStyle !== jslet.data.FieldValueStyle.MULTIPLE || value === null || value === undefined) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar valueCountRange = fldObj.valueCountRange();\r\n\t\tif(!valueCountRange) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar min = valueCountRange.min,\r\n\t\t\tmax = valueCountRange.max,\r\n\t\t\tvalueCount = value.length,\r\n\t\t\tmsg = null;\r\n\t\tif(max && valueCount > max) {\r\n\t\t\tmsg = jslet.formatMessage(jsletlocale.Dataset.lessThanCount, [max]);\r\n\t\t} else {\r\n\t\t\tif(min && valueCount < min) {\r\n\t\t\t\tmsg = jslet.formatMessage(jsletlocale.Dataset.lessThanCount, [min]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(msg) {\r\n\t\t\treturn this._addFieldLabel(fldObj.label(), msg);\r\n\t\t}\r\n\t\tvar fldRange = fldObj.dataRange();\r\n\t\tif(fldRange) {\r\n\t\t\tfor(var i = 0, len = valueCount; i < len; i++) {\r\n\t\t\t\tmsg = this.checkDataRange(fldObj, value[i]);\r\n\t\t\t\tif(msg) {\r\n\t\t\t\t\treturn msg;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null; \r\n\t},\r\n\t\r\n\tcheckBetween: function(fldObj, value) {\r\n\t\tvar valueStyle = fldObj.valueStyle();\r\n\t\tif(valueStyle !== jslet.data.FieldValueStyle.BETWEEN || value === null || value === undefined) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar v1 = null, v2 = null;\r\n\t\tif(value) {\r\n\t\t\tif(value.length > 0) {\r\n\t\t\t\tv1 = value[0];\r\n\t\t\t\tif(value.length > 1) {\r\n\t\t\t\t\tv2 = value[1];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar invalidMsg = null;\r\n\t\tif(v1 !== null && v1 !== undefined) {\r\n\t\t\tinvalidMsg = this.checkDataRange(fldObj, v1);\r\n\t\t}\r\n\t\tif(!invalidMsg && v2 !== null && v2 !== undefined) {\r\n\t\t\tthis.checkDataRange(fldObj, v2);\r\n\t\t}\r\n\t\tif(!invalidMsg && v1 && v2) {\r\n\t\t\tif(jslet.isDate(v1) && v1.getTime() > v2.getTime() || v1 > v2) {\r\n\t\t\t\tinvalidMsg = jsletlocale.Dataset.betwwenInvalid;\r\n\t\t\t}\r\n\t\t\treturn invalidMsg;\r\n\t\t}\r\n\t\treturn invalidMsg;\r\n\t},\r\n\t\r\n\tcheckDataRange: function(fldObj, value) {\r\n\t\tvar fldType = fldObj.getType();\r\n\t\t//Check range\r\n\t\tvar fldRange = fldObj.dataRange();\r\n\t\tif (!fldRange || value === null || value === undefined) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar\thasLookup = fldObj.lookup()? true: false;\r\n\t\t\r\n\t\tif (hasLookup) {//lookup field need compare 'code' value \r\n\t\t\tvar dsLookup = fldObj.lookup().dataset();\r\n\t\t\tvalue = dsLookup.lookup(dsLookup.keyField(), value, dsLookup.codeField());\r\n\t\t}\r\n\t\t\t\r\n\t\tvar min = fldRange.min,\r\n\t\t\tstrMin = min,\r\n\t\t\tmax = fldRange.max,\r\n\t\t\tstrMax = max;\r\n\t\tvar fmt = fldObj.displayFormat();\r\n\t\t\r\n\t\tif (fldType == jslet.data.DataType.DATE) {\r\n\t\t\tif (min) {\r\n\t\t\t\tstrMin = jslet.formatDate(min, fmt);\r\n\t\t\t}\r\n\t\t\tif (max) {\r\n\t\t\t\tstrMax = jslet.formatDate(max, fmt);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (!hasLookup && fldType == jslet.data.DataType.NUMBER) {\r\n\t\t\tstrMin = jslet.formatNumber(min, fmt);\r\n\t\t\tstrMax = jslet.formatNumber(max, fmt);\r\n\t\t}\r\n\t\t\r\n\t\tif (min !== undefined && max !== undefined && (value < min || value > max)) {\r\n\t\t\treturn this._addFieldLabel(fldObj.label(), \r\n\t\t\t\t\tjslet.formatMessage(jsletlocale.Dataset.notInRange, [strMin, strMax]));\r\n\t\t}\r\n\t\tif (min !== undefined && max === undefined && value < min) {\r\n\t\t\treturn this._addFieldLabel(fldObj.label(), \r\n\t\t\t\t\tjslet.formatMessage(jsletlocale.Dataset.moreThanValue, [strMin]));\r\n\t\t}\r\n\t\tif (min === undefined && max !== undefined && value > max) {\r\n\t\t\treturn this._addFieldLabel(fldObj.label(), \r\n\t\t\t\t\tjslet.formatMessage(jsletlocale.Dataset.lessThanValue, [strMax]));\r\n\t\t}\r\n\t\treturn null;\r\n\t},\r\n\t\r\n\tcheckUnique: function(fldObj, value) {\r\n\t\tif(!fldObj.unique() || value === null || value === undefined) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar currDs = fldObj.dataset(),\r\n\t\t\trecords = currDs.records();\r\n\t\t\r\n\t\tif(value !== null && value !== undefined && records && records.length > 1) {\r\n\t\t\tvar currRec = currDs.getRecord(), \r\n\t\t\t\tfldName = fldObj.name(),\r\n\t\t\t\trec;\r\n\t\t\tfor(var i = 0, len = records.length; i < len; i++) {\r\n\t\t\t\trec = records[i];\r\n\t\t\t\tif(rec === currRec) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif(rec[fldName] == value) {\r\n\t\t\t\t\treturn this._addFieldLabel(fldObj.label(), jsletlocale.Dataset.notUnique);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Check the specified field value is valid or not\r\n\t * It will check required, range and custom validation\r\n\t * \r\n\t * @param {jslet.data.Field} fldObj Field Object\r\n\t * @param {Object} value field value. \r\n\t * @return {String} If input text is valid, return null, otherwise return error message.\r\n\t */\r\n\tcheckValue: function(fldObj, value) {\r\n\t\tif(!fldObj.visible() || fldObj.disabled() || fldObj.readOnly()) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar result = this.checkRequired(fldObj, value);\r\n\t\tif(result) {\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\tif(fldObj.valueStyle()) {\r\n\t\t\tresult = this.checkMultiple(fldObj, value) || this.checkBetween(fldObj, value);\r\n\t\t} else {\r\n\t\t\tresult = this.checkDataRange(fldObj, value) || this.checkUnique(fldObj, value);\r\n\t\t}\r\n\t\tif(result) {\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\t\r\n\t\t//Customized validation\r\n\t\tif (fldObj.customValidator()) {\r\n\t\t\tvar msg = fldObj.customValidator().call(fldObj.dataset(), fldObj, value, jslet.data.serverValidator);\r\n\t\t\tif(msg) {\r\n\t\t\t\treturn this._addFieldLabel(fldObj.label(), msg);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn null;\r\n\t}\r\n};\r\n\r\n/**\r\n * The common function to validate data at server side.\r\n * \r\n * @param {String} url - Validating url to connect to server.\r\n * @param {Object} reqData - request data to post to server to validate.\r\n */\r\njslet.data.serverValidator = function(url, reqData) {\r\n\tvar ajaxSetting;\r\n\tif(jslet.global.beforeSubmit) {\r\n\t\tajaxSetting = jslet.global.beforeSubmit({url: url});\r\n\t}\r\n\tif(!ajaxSetting) {\r\n\t\tajaxSetting = {};\r\n\t}\r\n\tajaxSetting.type = 'POST';\r\n\tajaxSetting.async = false;\r\n\tajaxSetting.contentType = 'application/json';\r\n\tajaxSetting.mimeType = 'application/json';\r\n\tajaxSetting.dataType = 'json';\r\n\tif(typeof reqData === 'object') {\r\n\t\treqData = jslet.JSON.stringify(reqData);\r\n\t}\r\n\tajaxSetting.data = reqData;\r\n\tvar result = null;\r\n\tjQuery.ajax(url, ajaxSetting)\r\n\t.done(function(data, textStatus, jqXHR) {\r\n\t\tif(data) {\r\n\t\t\tvar errorCode = data.errorCode;\r\n\t\t\tif (errorCode) {\r\n\t\t\t\tresult = data.errorMessage;\r\n\t\t\t} else {\r\n\t\t\t\tif(jslet.isString(data)) {\r\n\t\t\t\t\tresult = data;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult = data.result;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tresult = null;\r\n\t\t}\r\n\t})\r\n\t.fail(function( jqXHR, textStatus, errorThrown ) {\r\n\t\tvar data = jqXHR.responseJSON,\r\n\t\t\tresult;\r\n\t\tif(data && data.errorCode) {\r\n\t\t\tresult = data.errorMessage;\r\n\t\t} else {\r\n\t\t\tvar errorCode = textStatus,\r\n\t\t\t\terrorMessage = textStatus;\r\n\t\t\tif(textStatus == 'error') {\r\n\t\t\t\terrorCode = '0000';\r\n\t\t\t\terrorMessage = jsletlocale.Common.ConnectError;\r\n\t\t\t}\r\n\t\t\tresult = errorMessage;\r\n\t\t}\r\n\t});\r\n\treturn result;\r\n};\r\n\nif (!jslet.data) {\r\n\tjslet.data = {};\r\n}\r\n\r\n/**\r\n * @enum\r\n * \r\n */\r\njslet.data.ApplyAction = {QUERY: 'query', SAVE: 'save', SELECTED: 'selected'};\r\n\r\n/**\r\n * @class\r\n * Data provider to communicate to server side.\r\n */\r\njslet.data.DataProvider = function() {\r\n\t\r\n\t/**\r\n\t * Send request to server.\r\n\t * \r\n\t * @param {jslet.data.Dataset} dataset Dataset Object, see {@link jslet.data.Dataset}.\r\n\t * @param {String} url Request URL.\r\n\t * @param {String} reqData The request data which need to send to server.\r\n\t */\r\n\tthis.sendRequest = function(dataset, url, reqData) {\r\n\t\tvar settings;\r\n\t\tif(jslet.global.beforeSubmit) {\r\n\t\t\tsettings = jslet.global.beforeSubmit({url: url});\r\n\t\t}\r\n\t\tif(!settings) {\r\n\t\t\tsettings = {};\r\n\t\t}\r\n\t\tsettings.type = 'POST';\r\n\t\tsettings.contentType = 'application/json';\r\n\t\tsettings.mimeType = 'application/json';\r\n\t\tsettings.dataType = 'json';\r\n\t\tsettings.data = reqData;\r\n\t\tsettings.context = dataset;\r\n\t\tif(dataset.csrfToken) {\r\n\t\t\tvar headers = settings.headers || {};\r\n\t\t\theaders.csrfToken = dataset.csrfToken;\r\n\t\t\tsettings.headers = headers;\r\n\t\t}\r\n\t\t\r\n\t\tvar defer = jQuery.Deferred();\r\n\t\tjQuery.ajax(url, settings)\r\n\t\t.done(function(data, textStatus, jqXHR) {\r\n\t\t\tif(data) {\r\n\t\t\t\tif(data.csrfToken) {\r\n\t\t\t\t\tthis.csrfToken = data.csrfToken;\r\n\t\t\t\t}\r\n\t\t\t\tvar errorCode = data.errorCode;\r\n\t\t\t\tif (errorCode) {\r\n\t\t\t\t\tdefer.reject(data, this);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tdefer.resolve(data, this);\r\n\t\t})\r\n\t\t.fail(function( jqXHR, textStatus, errorThrown ) {\r\n\t\t\tvar data = jqXHR.responseJSON,\r\n\t\t\t\tresult;\r\n\t\t\tif(data && data.errorCode) {\r\n\t\t\t\tresult = {errorCode: data.errorCode, errorMessage: data.errorMessage};\r\n\t\t\t} else {\r\n\t\t\t\tvar errorCode = textStatus,\r\n\t\t\t\t\terrorMessage = textStatus;\r\n\t\t\t\tif(textStatus == 'error') {\r\n\t\t\t\t\terrorCode = '0000';\r\n\t\t\t\t\terrorMessage = jsletlocale.Common.ConnectError;\r\n\t\t\t\t}\r\n\t\t\t\tresult = {errorCode: errorCode, errorMessage: errorMessage};\r\n\t\t\t}\r\n\t\t\tdefer.reject(result, this);\r\n\t\t})\r\n\t\t.always(function(dataOrJqXHR, textStatus, jqXHRorErrorThrown) {\r\n\t\t\tif(dataOrJqXHR && jslet.isFunction(dataOrJqXHR.done)) { //fail\r\n\t\t\t\tvar data = dataOrJqXHR.responseJSON,\r\n\t\t\t\t\tresult;\r\n\t\t\t\tif(data && data.errorCode) {\r\n\t\t\t\t\tresult = {errorCode: data.errorCode, errorMessage: data.errorMessage};\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult = {errorCode: textStatus, errorMessage: jqXHRorErrorThrown};\r\n\t\t\t\t}\r\n\t\t\t\tdefer.always(result, this);\r\n\t\t\t} else {\r\n\t\t\t\tdefer.always(dataOrJqXHR, this);\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn defer.promise();\r\n\t};\r\n};\r\n\nif (!jslet.data) {\r\n\tjslet.data = {};\r\n}\r\n\r\njslet.data.XLSXXPorter = {\r\n\t/*\r\n\t * Import data into the specifed dataset from Excel file.\r\n\t * @param {jslet.data.Dataset or String} dataset - Dataset object or dataset name.\r\n\t * @param {String} fileContent - Excel file content.\r\n\t */\r\n\timportData: function(dataset, fileContent) {\r\n\t\tfunction getHeader(sheet) {\r\n\t\t    var headers = [];\r\n\t\t    if (!sheet['!ref']) return;\r\n\t\t    var range = XLSX.utils.decode_range(sheet['!ref']);\r\n\t\t    var C, R = range.s.r; /* start in the first row */\r\n\t\t    /* walk every column in the range */\r\n\t\t    for(C = range.s.c; C <= range.e.c; ++C) {\r\n\t\t        var cell = sheet[XLSX.utils.encode_cell({c:C, r:R})] /* find the cell in the first row */\r\n\r\n\t\t        var hdr = \"UNKNOWN \" + C; // <-- replace with your desired default \r\n\t\t        if(cell && cell.t) hdr = XLSX.utils.format_cell(cell);\r\n\r\n\t\t        headers.push(hdr);\r\n\t\t    }\r\n\t\t    return headers;\r\n\t\t}\r\n\r\n\r\n\t\tif(!XLSX) {\r\n\t\t\tthrow new Error('js-xlsx.js(https://github.com/SheetJS/js-xlsx) NOT loaded!');\r\n\t\t}\r\n\t\tvar workbook = XLSX.read(fileContent, {type: 'binary'});\r\n\t\tvar result = {};\r\n\t\tif(workbook.SheetNames.length === 0) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar sheetName = workbook.SheetNames[0],\r\n\t\t\tsheet = workbook.Sheets[sheetName],\r\n\t\t\theader = getHeader(sheet),\r\n\t\t\troa = XLSX.utils.sheet_to_row_object_array(sheet);\r\n\t\tresult.data = roa;\r\n\t\tresult.header = header;\r\n\t\treturn result;\r\n\r\n\t},\r\n\t\r\n\t/*\r\n\t * Export dataset data to the specified Excel file.\r\n\t * \r\n\t * @param {jslet.data.Dataset | String} dataset Dataset object or dataset name.\r\n\t * @param {String} fileName Excel file name.\r\n\t * @param {Object} exportOption Export option.\r\n\t * @param {Boolean} exportOption.exportHeader True - export field labels, false - otherwise, default is true.\r\n\t * @param {Boolean} exportOption.exportDisplayValue True - export display value of field, false - export actual value of field, default is true.\r\n\t * @param {Boolean} exportOption.onlySelected True - export selected records, false - otherwise, default is false.\r\n\t * @param {Boolean} exportOption.exportAggregated True - export aggregated value, false -otherwise, default is false.\r\n\t * @param {String[]} exportOption.includeFields Array of field names which to be exported.\r\n\t * @param {String[]} exportOption.excludeFields Array of field names which not to be exported.\r\n\t * @param {Function} exportOption.onExporting Exporting event.\r\n\t * @param {Integer} exportOption.onExporting.recno The exporting record number.\r\n\t * @param {Integer} exportOption.onExporting.recordcount The exporting record count.\r\n\t * \r\n\t */\r\n\texportData: function(dataset, fileName, exportOption) {\r\n\t\tif(!XLSX) {\r\n\t\t\tthrow new Error('js-xlsx.js(https://github.com/SheetJS/js-xlsx) NOT loaded!');\r\n\t\t}\r\n\t\tdataset.confirm();\r\n\t\tif(dataset.existDatasetError()) {\r\n\t\t\tconsole.warn(jsletlocale.Dataset.cannotConfirm);\r\n\t\t}\r\n\r\n\t\tvar exportHeader = true,\r\n\t\t\texportDisplayValue = true,\r\n\t\t\tonlySelected = false,\r\n\t\t\tincludeFields = null,\r\n\t\t\texcludeFields = null,\r\n\t\t\texportAggregated = false,\r\n\t\t\tonlyOnce = true,\r\n\t\t\tonExporting = null,\r\n\t\t\tonExported = null;\r\n\t\t\t\r\n\t\tif(exportOption && jQuery.isPlainObject(exportOption)) {\r\n\t\t\tif(exportOption.exportHeader !== undefined) {\r\n\t\t\t\texportHeader = exportOption.exportHeader? true: false;\r\n\t\t\t}\r\n\t\t\tif(exportOption.onlySelected !== undefined) {\r\n\t\t\t\tonlySelected = exportOption.onlySelected? true: false;\r\n\t\t\t}\r\n\t\t\tif(exportOption.exportAggregated !== undefined) {\r\n\t\t\t\texportAggregated = exportOption.exportAggregated? true: false;\r\n\t\t\t}\r\n\t\t\tif(exportOption.includeFields !== undefined) {\r\n\t\t\t\tincludeFields = exportOption.includeFields;\r\n\t\t\t\tjslet.Checker.test('Dataset.exportCsv#exportOption.includeFields', includeFields).isArray();\r\n\t\t\t}\r\n\t\t\tif(exportOption.excludeFields !== undefined) {\r\n\t\t\t\texcludeFields = exportOption.excludeFields;\r\n\t\t\t\tjslet.Checker.test('Dataset.exportCsv#exportOption.excludeFields', excludeFields).isArray();\r\n\t\t\t}\r\n\t\t\tif(exportOption.onExporting !== undefined) {\r\n\t\t\t\tjslet.Checker.test('Dataset.exportCsv#exportOption.onExporting', onExporting).isFunction();\r\n\t\t\t\tonExporting = exportOption.onExporting;\r\n\t\t\t}\r\n\t\t\tif(exportOption.onExported !== undefined) {\r\n\t\t\t\tjslet.Checker.test('Dataset.exportCsv#exportOption.onExported', onExported).isFunction();\r\n\t\t\t\tonExported = exportOption.onExported;\r\n\t\t\t}\r\n\t\t\tif(exportOption.onlyOnce !== undefined) {\r\n\t\t\t\tonlyOnce = exportOption.onlyOnce? true: false;\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar parsedExpCfg = this._getExportFields(dataset, includeFields, excludeFields)\r\n\t\tvar topDsCfg = parsedExpCfg.datasets;\r\n\t\tvar exportFields = parsedExpCfg.fields;\r\n\t\t\r\n\t\tvar workSheet = {},\r\n\t\t\trow = 0, lastRow, lastCol,\r\n\t\t\tfldCnt = exportFields.length,\r\n\t\t\tstartCell = {r: 0, c: 0}, \r\n\t\t\tendCell = {r: 0, c: fldCnt - 1},\r\n\t\t\texpFld, i;\r\n\t\t\r\n\t\tif (exportHeader) {\r\n\t\t\tfor(i = 0; i < fldCnt; i++) {\r\n\t\t\t\texpFld = exportFields[i];\r\n\t\t\t\tvar label = expFld.label;\r\n\t\t\t\tif(!label) {\r\n\t\t\t\t\tlabel = '';\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlabel = jslet.removeHtmlTag(label);\r\n\t\t\t\t}\r\n\t\t\t\tthis._convertToXLSXFormat(workSheet, row, i, 's', label);\r\n\t\t\t}\r\n\t\t\trow++;\r\n\t\t\tlastRow = 0, lastCol = fldCnt - 1;\r\n\t\t}\r\n\t\ttopDsCfg.endRow = row - 1;\r\n\t\t\r\n\t\tfunction doEndExporting() {\r\n\t\t\tendCell.r = topDsCfg.endRow;\r\n\t\t\tworkSheet['!ref'] = XLSX.utils.encode_range({s: startCell, e: endCell});\r\n\t\t\t\r\n\t\t\tvar ws_name = 'Sheet1';\r\n\t\t\tvar wb = {SheetNames: [], Sheets: {}};\r\n\t\t\twb.SheetNames.push(ws_name);\r\n\t\t\twb.Sheets[ws_name] = workSheet;\r\n\t\t\tvar xlsxOpt = {bookType:'xlsx', bookSST:true, type: 'binary'};\r\n\t\t\tvar wbout = XLSX.write(wb, xlsxOpt);\r\n\t\t\t\r\n\t\t\tfunction convertToUnitArray(workBook) {\r\n\t\t\t\tvar len = workBook.length,\r\n\t\t\t\t\tbuf = new ArrayBuffer(len),\r\n\t\t\t\t\tview = new Uint8Array(buf);\r\n\t\t\t\tfor (var k = 0; k != len; ++k) {\r\n\t\t\t\t\tview[k] = workBook.charCodeAt(k) & 0xFF;\r\n\t\t\t\t}\r\n\t\t\t\treturn buf;\r\n\t\t\t}\r\n\r\n\t\t\tsaveAs(new Blob([convertToUnitArray(wbout)], {type:\"application/octet-stream\"}), fileName);\r\n\t\t\tif(onExported) {\r\n\t\t\t\tonExported();\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar recordCount = dataset.recordCount();\r\n\t\tif(recordCount === 0) {\r\n\t\t\tdoEndExporting();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar Z = this;\r\n\t\tnew jslet.StepProcessor(dataset.recordCount(), function(start, end, percent) {\r\n\t\t\tZ._innerExportData(workSheet, topDsCfg, exportFields, onlySelected, onlyOnce, exportAggregated, start, end);\r\n\t\t\tif(onExporting) {\r\n\t\t\t\tonExporting(percent);\r\n\t\t\t}\r\n\t\t\tif(percent === 100) {\r\n\t\t\t\tdoEndExporting();\r\n\t\t\t}\r\n\t\t}).run();\r\n\t},\r\n\r\n\t_convertToXLSXFormat: function(worksheet, row, col, type, value) {\r\n\t\tvar cell_ref = XLSX.utils.encode_cell({c: col,r: row}), \r\n\t\t\tcell = {t: type, v: value};\r\n\t\tworksheet[cell_ref] = cell;\r\n\t},\r\n\r\n\t_innerExportData: function(workSheet, currDsCfg, exportFields, onlySelected, onlyOnce, exportAggregated, start, end) {\r\n\t\tvar dsObj = currDsCfg.dataset,\r\n\t\t\tcontext = dsObj.startSilenceMove(), \r\n\t\t\tvalue, dataType, expFld, fldName,\r\n\t\t\trow = currDsCfg.endRow + 1,\r\n\t\t\tfldCnt = exportFields.length;\r\n\t\tif(currDsCfg.master) {\r\n\t\t\trow = currDsCfg.master.endRow;\r\n\t\t} else {\r\n\t\t\trow = currDsCfg.endRow + 1;\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tvar dsTmp, notFirst = false, isMaster,\r\n\t\t\t\thasMaster = currDsCfg.master? true: false;\r\n\t\t\tif(!start) {\r\n\t\t\t\tstart = 0;\r\n\t\t\t}\r\n\t\t\tvar totalRecCnt = dsObj.recordCount() - 1;\r\n\t\t\tif(!end && end !== 0) {\r\n\t\t\t\tend = totalRecCnt;\r\n\t\t\t}\r\n\t\t\tvar SType = jslet.data.DataType.STRING,\r\n\t\t\t\tNType = jslet.data.DataType.NUMBER;\r\n\t\t\t\r\n\t\t\tfor(var recno = start; recno <= end; recno++) {\r\n\t\t\t\tdsObj.recno(recno);\r\n\t\t\t\tif (onlySelected && !dsObj.selected()) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tfor(var i = 0; i < fldCnt; i++) {\r\n\t\t\t\t\texpFld = exportFields[i];\r\n\t\t\t\t\tfldName = expFld.field;\r\n\t\t\t\t\tdsTmp = dsObj;\r\n\t\t\t\t\tif(dsObj !== expFld.dataset) {\r\n\t\t\t\t\t\tif(onlyOnce) {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tisMaster = false;\r\n\t\t\t\t\t\tvar dsCfg = currDsCfg.master; \r\n\t\t\t\t\t\twhile(true) {\r\n\t\t\t\t\t\t\tif(!dsCfg) {\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(dsCfg.dataset === expFld.dataset) {\r\n\t\t\t\t\t\t\t\tisMaster = true;\r\n\t\t\t\t\t\t\t\tdsTmp = dsCfg.dataset;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tdsCfg = dsCfg.master;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(!isMaster) {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//If Number field does not have lookup field, return field value, not field text. \r\n\t\t\t\t\t//Example: 'amount' field\r\n\t\t\t\t\tdataType = expFld.dataType;\r\n\t\t\t\t\tif(dataType === NType && !expFld.hasLookup) {\r\n\t\t\t\t\t\tvalue = dsTmp.getFieldValue(fldName);\r\n\t\t\t\t\t\tif(value === null || value === undefined) {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis._convertToXLSXFormat(workSheet, row, i, 'n', value);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvalue = dsTmp.getFieldText(fldName);\r\n\t\t\t\t\t\tif(value === null || value === undefined || value === '') {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(dataType === SType) {\r\n\t\t\t\t\t\t\tvar replaceFn = value.replace;\r\n\t\t\t\t\t\t\tif(replaceFn) {\r\n\t\t\t\t\t\t\t\tvalue = jslet.removeHtmlTag(value);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tvalue += '';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis._convertToXLSXFormat(workSheet, row, i, 's', value);\r\n\t\t\t\t\t}\r\n\t\t\t\t} //end for i\r\n\t\t\t\r\n\t\t\t\tcurrDsCfg.endRow = row;\r\n\t\t\t\tvar details = currDsCfg.details, dtlCfg;\r\n\t\t\t\tif(details && details.length > 0) {\r\n\t\t\t\t\tfor(var j = 0, cfgCnt = details.length; j < cfgCnt; j++) {\r\n\t\t\t\t\t\tthis._innerExportData(workSheet, details[j], exportFields, false, onlyOnce, exportAggregated);\r\n\t\t\t\t\t}\r\n\t\t\t\t\trow = currDsCfg.endRow + 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\trow++\r\n\t\t\t\t}\r\n\t\t\t\tvar aggrValues = dsObj.aggregatedValues();\r\n\t\t\t\tif(exportAggregated && recno === totalRecCnt && aggrValues) {\r\n\t\t\t\t\tvar aggrValue;\r\n\t\t\t\t\tfor(i = 0; i < fldCnt; i++) {\r\n\t\t\t\t\t\texpFld = exportFields[i];\r\n\t\t\t\t\t\tfldName = expFld.field;\r\n\t\t\t\t\t\taggrValue = aggrValues[fldName];\r\n\t\t\t\t\t\tif(!aggrValue) {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdataType = expFld.dataType;\r\n\t\t\t\t\t\taggrValue = dataType === NType? aggrValue.sum: aggrValue.count;\r\n\t\t\t\t\t\tif(aggrValue) {\r\n\t\t\t\t\t\t\tthis._convertToXLSXFormat(workSheet, row, i, 'n', aggrValue);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcurrDsCfg.endRow = row;\r\n\t\t\t\t}\r\n\t\t\t\tnotFirst = true;\r\n\t\t\t} // end for recno\r\n\t\t\tvar masterCfg = currDsCfg.master;\r\n\t\t\tif(masterCfg && masterCfg.endRow < currDsCfg.endRow) {\r\n\t\t\t\tmasterCfg.endRow = currDsCfg.endRow;\r\n\t\t\t}\r\n\t\t}finally{\r\n\t\t\tdsObj.endSilenceMove(context);\r\n\t\t}\r\n\t},\r\n\t\r\n\t_getExportFields: function(dataset, includeFields, excludeFields) {\r\n\t\tfunction getMaster(dsCfg, dsMaster) {\r\n\t\t\tif(dsCfg.dataset == dsMaster) {\r\n\t\t\t\treturn dsCfg;\r\n\t\t\t} else {\r\n\t\t\t\tvar details = topDsCfg.details;\r\n\t\t\t\tvar dsObj, dsCfg;\r\n\t\t\t\tfor(var i = 0, len = details.length; i < len; i++) {\r\n\t\t\t\t\tdsCfg = details[i];\r\n\t\t\t\t\tdsCfg = getMaster(dsCfg, dsMaster);\r\n\t\t\t\t\tif(!dsCfg) {\r\n\t\t\t\t\t\treturn dsCfg;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\t\r\n\t\tfunction addDs(topDsCfg, dsMaster, dsDetail) {\r\n\t\t\tvar dsCfg, details = topDsCfg.details;\r\n\t\t\tif(!details) {\r\n\t\t\t\tdetails = [];\r\n\t\t\t\ttopDsCfg.details = details;\r\n\t\t\t}\r\n\t\t\tvar found = false;\r\n\t\t\tvar masterCfg = getMaster(topDsCfg, dsMaster);\r\n\t\t\tdetails = masterCfg.details;\r\n\t\t\tfor(var k = 0, dsCnt = details.length; k < dsCnt; k++) {\r\n\t\t\t\tdsCfg = details[k];\r\n\t\t\t\tif(dsCfg.dataset === dsDetail) {\r\n\t\t\t\t\tfound = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(!found) {\r\n\t\t\t\tdetails.push({master: masterCfg, dataset: dsDetail});\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tvar exportFlds = [], datasets = {dataset: dataset},\r\n\t\t\tfldName, fldObj, dtlFldObj, dsDetail, i, len, fldNames, expFld;\r\n\t\tif(includeFields && includeFields.length > 0) {\r\n\t\t\tfor(i = 0, len = includeFields.length; i < len; i++) {\r\n\t\t\t\tfldName = includeFields[i];\r\n\t\t\t\texpFld = {};\r\n\t\t\t\tif(fldName.indexOf('.') < 0) {\r\n\t\t\t\t\texpFld.dataset = dataset;\r\n\t\t\t\t\texpFld.field = fldName;\r\n\t\t\t\t\tfldObj = dataset.getField(fldName);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfldNames = fldName.split('.');\r\n\t\t\t\t\tvar dsMaster = dataset;\r\n\t\t\t\t\tfor(var j = 0, cnt = fldNames.length - 1; j < cnt; j++) {\r\n\t\t\t\t\t\tdtlFldObj = dsMaster.getField(fldNames[j]);\r\n\t\t\t\t\t\tdsDetail = dtlFldObj.detailDataset();\r\n\t\t\t\t\t\taddDs(datasets, dsMaster, dsDetail);\r\n\t\t\t\t\t\tdsMaster = dsDetail; \r\n\t\t\t\t\t}\r\n\t\t\t\t\tfldName = fldNames[cnt];\r\n\t\t\t\t\texpFld.dataset = dsDetail;\r\n\t\t\t\t\texpFld.field = fldName;\r\n\t\t\t\t\tfldObj = dsDetail.getField(fldName);\r\n\t\t\t\t}\r\n\t\t\t\texpFld.label = fldObj.label();\r\n\t\t\t\texpFld.dataType = fldObj.getType();\r\n\t\t\t\texpFld.hasLookup = fldObj.lookup() ? true: false;\r\n\t\t\t\texportFlds.push(expFld);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar fields = dataset.getNormalFields();\r\n\t\t\tfor(i = 0, len = fields.length; i < len; i++) {\r\n\t\t\t\tfldObj = fields[i];\r\n\t\t\t\tif(!fldObj.visible()) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tfldName = fldObj.name();\r\n\t\t\t\tif(excludeFields && excludeFields.length > 0) {\r\n\t\t\t\t\tif(excludeFields.indexOf(fldName) >= 0) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t} \r\n\t\t\t\texpFld = {dataset: dataset, field: fldName};\r\n\t\t\t\texpFld.label = fldObj.label();\r\n\t\t\t\texpFld.dataType = fldObj.getType();\r\n\t\t\t\texpFld.hasLookup = fldObj.lookup() ? true: false;\r\n\t\t\t\texportFlds.push(expFld);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn {datasets: datasets, fields: exportFlds};\r\n\t}\r\n};\r\n\nif (!jslet.data) {\r\n\tjslet.data = {};\r\n}\r\n\r\njslet.data.XPorter = function() {\r\n\tthis._excelXPorter = null;\r\n\t\r\n}\r\n\r\njslet.data.XPorter.prototype = {\r\n\texcelXPorter: function(xporter) {\r\n\t\tif(xporter === undefined) {\r\n\t\t\treturn this._excelXPorter || jslet.data.XLSXXPorter;\r\n\t\t}\r\n\t\tthis._excelXPorter = xporter;\r\n\t}\r\n\t\r\n};\r\n\r\njslet.data.defaultXPorter = new jslet.data.XPorter();\n/**\r\n * @class\r\n * \r\n * The dataset meta store which store in IndexedDB. Example:\r\n * \r\n *     @example\r\n *     var indexedDBMetaStore = new jslet.data.IndexedDBMetaStore('demo');\r\n *     jslet.data.datasetFactory.addMetaStore(indexedDBMetaStore);\r\n * \r\n * @param {String} databaseName IndexedDB database name.\r\n */\r\njslet.data.IndexedDBMetaStore = function(dbName) {\r\n\tvar Z = this;\r\n\tZ._dbName = dbName;\r\n\tZ._db = null;\r\n }\r\n\r\njslet.data.IndexedDBMetaStore.prototype = {\r\n\topenDatabase: function() {\r\n\t\tvar Z = this;\r\n\t\tvar defer = jQuery.Deferred();\r\n\t\tvar request = indexedDB.open(this._dbName, 1);\r\n\t\trequest.onsuccess = function(event) {\r\n\t\t\tZ._db = request.result;\t\r\n\t\t\tdefer.resolve();\r\n\t\t};\r\n\t\trequest.onerror = function(event) {\r\n\t\t\tconsole.error(event);\r\n\t\t\tdefer.reject();\r\n\t\t};\r\n\t\t\r\n\t\trequest.onupgradeneeded = function (evt) {   \r\n\t    \tvar store = evt.currentTarget.result.createObjectStore\r\n\t\t\t\t(\"datasetMeta\", {keyPath: \"name\"});\r\n\t    };\r\n\t    \r\n\t    return defer.promise();\r\n\t},\r\n\t\r\n\t/**\r\n\t * This method will be called by jslet.data.DatasetFactory. Do not call it manually. <br />\r\n\t * This method uses to get dataset meta when creating dataset. <br />\r\n\t * It is called asynchronously.\r\n\t * \r\n\t * @param {String} datasetName Dataset name.\r\n\t * \r\n\t * @return {Promise} \r\n\t */\r\n\tgetDatasetMeta: function(datasetName) {\r\n\t\tvar Z = this;\r\n\t\tfunction innerGet() {\r\n\t\t\r\n\t\t\tvar defer = jQuery.Deferred(),\r\n\t\t\t\ttransaction = Z._db.transaction('datasetMeta', 'readonly'),\r\n\t\t\t\tstore = transaction.objectStore('datasetMeta').get(datasetName);\r\n\t\t\tstore.onsuccess = function(event) {\r\n\t\t\t\tdefer.resolve(event.target.result);\r\n\t\t\t};\r\n\t\t\tstore.onerror = function(event) {\r\n\t\t\t\tconsole.error(event);\r\n\t\t\t\tdefer.reject(null);\r\n\t\t\t};\r\n\t\t\treturn defer.promise();\r\n\t\t}\r\n\t\tif(!Z._db) {\r\n\t\t\tvar defer = jQuery.Deferred();\r\n\t\t\tZ.openDatabase().done(function() {\r\n\t\t\t\tinnerGet().done(function(result) {\r\n\t\t\t\t\tdefer.resolve(result);\r\n\t\t\t\t}).fail(function() {\r\n\t\t\t\t\tdefer.reject();\r\n\t\t\t\t});\r\n\t\t\t}).fail(function() {\r\n\t\t\t\tdefer.reject();\r\n\t\t\t});\r\n\t\t\treturn defer.promise();\r\n\t\t} else {\r\n\t\t\treturn innerGet();\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t * Add a dataset meta.\r\n\t * \r\n\t * @param {String} datasetName Dataset name.\r\n\t * @param {Object} datasetMeta Dataset meta object.\r\n\t * \r\n\t * @return {this}\r\n\t */\r\n\taddDatasetMeta: function(datasetName, datasetMeta) {\r\n\t\tjslet.Checker.test('addDatasetMeta#datasetName', datasetName).required().isString();\r\n\t\tjslet.Checker.test('addDatasetMeta#datasetMeta', datasetMeta).required().isObject();\r\n\t\tvar Z = this;\r\n\t\tif(Z._db) {\r\n\t\t\tZ._db.transaction('datasetMeta', \"readwrite\");\r\n\t\t\tvar store = transaction.objectStore('datasetMeta');\r\n\t\t\tstore.put(datasetName, datasetMeta);\r\n\t\t} else {\r\n\t\t\tZ.openDatabase().done(function() {\r\n\t\t\t\tvar store = Z._db.transaction('datasetMeta', \"readwrite\").objectStore('datasetMeta');\r\n\t\t\t\tdatasetMeta.name = datasetName;\r\n\t\t\t\tstore.add(datasetMeta);\r\n\t\t\t})\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Add some dataset metas.\r\n\t * \r\n\t * @param {Object[]} datasetMeta Dataset meta objects.\r\n\t * \r\n\t * @return {this}\r\n\t */\r\n\taddDatasetMetas: function(datasetMetas) {\r\n\t\tjslet.Checker.test('addDatasetMetas#datasetMetas', datasetMetas).required().isArray();\r\n\t\tvar Z = this, \r\n\t\t\ti, len = datasetMetas.length, datasetMeta;\r\n\t\tfor(i = len - 1; i >= 0; i--) {\r\n\t\t\tdatasetMeta = datasetMetas[i];\r\n\t\t\tif(datasetMeta) {\r\n\t\t\t\tjslet.Checker.test('addDatasetMeta#datasetName', datasetMeta.name).required().isString();\r\n\t\t\t} else {\r\n\t\t\t\tdatasetMetas.splice(i, 1);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(Z._db) {\r\n\t\t\tZ._db.transaction('datasetMeta', \"readwrite\");\r\n\t\t\tvar store = transaction.objectStore('datasetMeta');\r\n\t\t\tfor(i = 0; i < len; i++) {\r\n\t\t\t\tdatasetMeta = datasetMetas[i];\r\n\t\t\t\tstore.put(datasetMeta.name, datasetMeta);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tZ.openDatabase().done(function() {\r\n\t\t\t\tvar store = Z._db.transaction('datasetMeta', \"readwrite\").objectStore('datasetMeta');\r\n\t\t\t\tfor(i = 0; i < len; i++) {\r\n\t\t\t\t\tdatasetMeta = datasetMetas[i];\r\n\t\t\t\t\tstore.add(datasetMeta);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t\r\n}\n/* jshint ignore:start */\r\n\treturn jslet;\r\n});\r\n/* jshint ignore:end */\r\n"],"sourceRoot":"/source/"}